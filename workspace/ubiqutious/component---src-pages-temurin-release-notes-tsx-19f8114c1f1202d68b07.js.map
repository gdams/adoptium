{"version":3,"file":"component---src-pages-temurin-release-notes-tsx-19f8114c1f1202d68b07.js","mappings":"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","sources":["webpack://adoptium-website/./node_modules/@mui/material/CircularProgress/circularProgressClasses.js","webpack://adoptium-website/./node_modules/@mui/material/CircularProgress/CircularProgress.js","webpack://adoptium-website/./node_modules/@mui/material/internal/svg-icons/FirstPage.js","webpack://adoptium-website/./node_modules/@mui/material/internal/svg-icons/LastPage.js","webpack://adoptium-website/./node_modules/@mui/system/esm/styled/styled.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/constants/gridClasses.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/containers/GridToolbarContainer.js","webpack://adoptium-website/./node_modules/reselect/dist/reselect.mjs","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/createSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","webpack://adoptium-website/./node_modules/@mui/x-internals/fastObjectShallowCompare/fastObjectShallowCompare.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridApiContext.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/toolbar/GridToolbarFilterButton.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/containers/GridRoot.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridHeader.js","webpack://adoptium-website/./node_modules/@mui/x-internals/fastMemo/fastMemo.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/utils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/models/gridFilterItem.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/internals/constants.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/models/gridEditRowModel.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","webpack://adoptium-website/./node_modules/@mui/material/ClickAwayListener/ClickAwayListener.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/menu/GridMenu.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridScrollArea.js","webpack://adoptium-website/./node_modules/@mui/x-internals/useResizeObserver/useResizeObserver.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/platform.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/listView/gridListViewSelectors.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/base/GridOverlays.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridHeaders.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/context/GridContextProvider.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","webpack://adoptium-website/./node_modules/@mui/x-internals/EventManager/EventManager.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/Store.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","webpack://adoptium-website/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://adoptium-website/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://adoptium-website/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/keyboardUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/export/utils.js","webpack://adoptium-website/./node_modules/@mui/material/Divider/dividerClasses.js","webpack://adoptium-website/./node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","webpack://adoptium-website/./node_modules/@mui/material/ListItemText/listItemTextClasses.js","webpack://adoptium-website/./node_modules/@mui/material/MenuItem/menuItemClasses.js","webpack://adoptium-website/./node_modules/@mui/material/MenuItem/MenuItem.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/exportAs.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/domUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/internals/utils/gridRowGroupingUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/models/params/gridRowParams.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/constants/dataGridPropsDefaultValues.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","webpack://adoptium-website/./node_modules/@mui/x-internals/throttle/throttle.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/ResizeObserver.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/createControllablePromise.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","webpack://adoptium-website/./node_modules/@mui/x-internals/warning/warning.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/listView/useGridListView.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/constants/localeTextConstants.js","webpack://adoptium-website/./node_modules/@mui/material/styles/cssUtils.js","webpack://adoptium-website/./node_modules/@mui/material/Skeleton/skeletonClasses.js","webpack://adoptium-website/./node_modules/@mui/material/Skeleton/Skeleton.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridFooter.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridRowCount.js","webpack://adoptium-website/./node_modules/@mui/material/LinearProgress/linearProgressClasses.js","webpack://adoptium-website/./node_modules/@mui/material/LinearProgress/LinearProgress.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","webpack://adoptium-website/./node_modules/@mui/material/Table/TableContext.js","webpack://adoptium-website/./node_modules/@mui/material/Table/Tablelvl2Context.js","webpack://adoptium-website/./node_modules/@mui/material/TableCell/tableCellClasses.js","webpack://adoptium-website/./node_modules/@mui/material/TableCell/TableCell.js","webpack://adoptium-website/./node_modules/@mui/material/Toolbar/toolbarClasses.js","webpack://adoptium-website/./node_modules/@mui/material/Toolbar/Toolbar.js","webpack://adoptium-website/./node_modules/@mui/material/internal/svg-icons/KeyboardArrowLeft.js","webpack://adoptium-website/./node_modules/@mui/material/internal/svg-icons/KeyboardArrowRight.js","webpack://adoptium-website/./node_modules/@mui/material/TablePagination/TablePaginationActions.js","webpack://adoptium-website/./node_modules/@mui/material/utils/useId.js","webpack://adoptium-website/./node_modules/@mui/material/TablePagination/tablePaginationClasses.js","webpack://adoptium-website/./node_modules/@mui/material/TablePagination/TablePagination.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridPagination.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","webpack://adoptium-website/./node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","webpack://adoptium-website/./node_modules/@mui/material/FormControlLabel/FormControlLabel.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/GridPanel.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/cell/GridCell.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridRow.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/utils/composeGridClasses.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","webpack://adoptium-website/./node_modules/@mui/material/ListItemIcon/ListItemIcon.js","webpack://adoptium-website/./node_modules/@mui/material/ListItemText/ListItemText.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","webpack://adoptium-website/./node_modules/@mui/material/Badge/useBadge.js","webpack://adoptium-website/./node_modules/@mui/material/Badge/badgeClasses.js","webpack://adoptium-website/./node_modules/@mui/material/Badge/Badge.js","webpack://adoptium-website/./node_modules/@mui/material/internal/switchBaseClasses.js","webpack://adoptium-website/./node_modules/@mui/material/internal/SwitchBase.js","webpack://adoptium-website/./node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","webpack://adoptium-website/./node_modules/@mui/material/internal/svg-icons/CheckBox.js","webpack://adoptium-website/./node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","webpack://adoptium-website/./node_modules/@mui/material/Checkbox/checkboxClasses.js","webpack://adoptium-website/./node_modules/@mui/material/Checkbox/Checkbox.js","webpack://adoptium-website/./node_modules/@mui/material/Divider/Divider.js","webpack://adoptium-website/./node_modules/@mui/material/Tooltip/tooltipClasses.js","webpack://adoptium-website/./node_modules/@mui/material/Tooltip/Tooltip.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/material/icons/index.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/material/index.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridDetailPanels.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/GridPinnedRows.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/internals/utils/useProps.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","webpack://adoptium-website/./node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js","webpack://adoptium-website/./src/components/ReleaseNotesRender/index.tsx","webpack://adoptium-website/./src/pages/temurin/release-notes.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getCircularProgressUtilityClass } from \"./circularProgressClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`;\nconst circularDashKeyframe = keyframes`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst rotateAnimation = typeof circularRotateKeyframe !== 'string' ? css`\n        animation: ${circularRotateKeyframe} 1.4s linear infinite;\n      ` : null;\nconst dashAnimation = typeof circularDashKeyframe !== 'string' ? css`\n        animation: ${circularDashKeyframe} 1.4s ease-in-out infinite;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-block',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('transform')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: rotateAnimation || {\n      animation: `${circularRotateKeyframe} 1.4s linear infinite`\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  }))]\n})));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  stroke: 'currentColor',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: {\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink,\n    style: dashAnimation || {\n      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n      animation: `${circularDashKeyframe} 1.4s ease-in-out infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, {\n    className: clsx(classes.root, className),\n    style: {\n      width: size,\n      height: size,\n      ...rootStyle,\n      ...style\n    },\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\",\n    ...rootProps,\n    ...other,\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"\n}), 'FirstPage');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"\n}), 'LastPage');","import createStyled from \"../createStyled/index.js\";\nconst styled = createStyled();\nexport default styled;","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'groupingCriteriaCellLoadingContainer', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from \"../../context/GridRootPropsContext.js\";\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarContainer',\n  overridesResolver: (_, styles) => styles.toolbarContainer\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  gap: theme.spacing(1),\n  padding: theme.spacing(0.5, 0.5, 0)\n}));\nconst GridToolbarContainer = /*#__PURE__*/React.forwardRef(function GridToolbarContainer(props, ref) {\n  const {\n      className,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  if (!children) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbarContainer };","// src/devModeChecks/identityFunctionCheck.ts\nvar runIdentityFunctionCheck = (resultFunc, inputSelectorsResults, outputSelectorResult) => {\n  if (inputSelectorsResults.length === 1 && inputSelectorsResults[0] === outputSelectorResult) {\n    let isInputSameAsOutput = false;\n    try {\n      const emptyObject = {};\n      if (resultFunc(emptyObject) === emptyObject)\n        isInputSameAsOutput = true;\n    } catch {\n    }\n    if (isInputSameAsOutput) {\n      let stack = void 0;\n      try {\n        throw new Error();\n      } catch (e) {\n        ;\n        ({ stack } = e);\n      }\n      console.warn(\n        \"The result function returned its own inputs without modification. e.g\\n`createSelector([state => state.todos], todos => todos)`\\nThis could lead to inefficient memoization and unnecessary re-renders.\\nEnsure transformation logic is in the result function, and extraction logic is in the input selectors.\",\n        { stack }\n      );\n    }\n  }\n};\n\n// src/devModeChecks/inputStabilityCheck.ts\nvar runInputStabilityCheck = (inputSelectorResultsObject, options, inputSelectorArgs) => {\n  const { memoize, memoizeOptions } = options;\n  const { inputSelectorResults, inputSelectorResultsCopy } = inputSelectorResultsObject;\n  const createAnEmptyObject = memoize(() => ({}), ...memoizeOptions);\n  const areInputSelectorResultsEqual = createAnEmptyObject.apply(null, inputSelectorResults) === createAnEmptyObject.apply(null, inputSelectorResultsCopy);\n  if (!areInputSelectorResultsEqual) {\n    let stack = void 0;\n    try {\n      throw new Error();\n    } catch (e) {\n      ;\n      ({ stack } = e);\n    }\n    console.warn(\n      \"An input selector returned a different result when passed same arguments.\\nThis means your output selector will likely run more frequently than intended.\\nAvoid returning a new reference inside your input selector, e.g.\\n`createSelector([state => state.todos.map(todo => todo.id)], todoIds => todoIds.length)`\",\n      {\n        arguments: inputSelectorArgs,\n        firstInputs: inputSelectorResults,\n        secondInputs: inputSelectorResultsCopy,\n        stack\n      }\n    );\n  }\n};\n\n// src/devModeChecks/setGlobalDevModeChecks.ts\nvar globalDevModeChecks = {\n  inputStabilityCheck: \"once\",\n  identityFunctionCheck: \"once\"\n};\nvar setGlobalDevModeChecks = (devModeChecks) => {\n  Object.assign(globalDevModeChecks, devModeChecks);\n};\n\n// src/utils.ts\nvar NOT_FOUND = /* @__PURE__ */ Symbol(\"NOT_FOUND\");\nfunction assertIsFunction(func, errorMessage = `expected a function, instead received ${typeof func}`) {\n  if (typeof func !== \"function\") {\n    throw new TypeError(errorMessage);\n  }\n}\nfunction assertIsObject(object, errorMessage = `expected an object, instead received ${typeof object}`) {\n  if (typeof object !== \"object\") {\n    throw new TypeError(errorMessage);\n  }\n}\nfunction assertIsArrayOfFunctions(array, errorMessage = `expected all items to be functions, instead received the following types: `) {\n  if (!array.every((item) => typeof item === \"function\")) {\n    const itemTypes = array.map(\n      (item) => typeof item === \"function\" ? `function ${item.name || \"unnamed\"}()` : typeof item\n    ).join(\", \");\n    throw new TypeError(`${errorMessage}[${itemTypes}]`);\n  }\n}\nvar ensureIsArray = (item) => {\n  return Array.isArray(item) ? item : [item];\n};\nfunction getDependencies(createSelectorArgs) {\n  const dependencies = Array.isArray(createSelectorArgs[0]) ? createSelectorArgs[0] : createSelectorArgs;\n  assertIsArrayOfFunctions(\n    dependencies,\n    `createSelector expects all input-selectors to be functions, but received the following types: `\n  );\n  return dependencies;\n}\nfunction collectInputSelectorResults(dependencies, inputSelectorArgs) {\n  const inputSelectorResults = [];\n  const { length } = dependencies;\n  for (let i = 0; i < length; i++) {\n    inputSelectorResults.push(dependencies[i].apply(null, inputSelectorArgs));\n  }\n  return inputSelectorResults;\n}\nvar getDevModeChecksExecutionInfo = (firstRun, devModeChecks) => {\n  const { identityFunctionCheck, inputStabilityCheck } = {\n    ...globalDevModeChecks,\n    ...devModeChecks\n  };\n  return {\n    identityFunctionCheck: {\n      shouldRun: identityFunctionCheck === \"always\" || identityFunctionCheck === \"once\" && firstRun,\n      run: runIdentityFunctionCheck\n    },\n    inputStabilityCheck: {\n      shouldRun: inputStabilityCheck === \"always\" || inputStabilityCheck === \"once\" && firstRun,\n      run: runInputStabilityCheck\n    }\n  };\n};\n\n// src/autotrackMemoize/autotracking.ts\nvar $REVISION = 0;\nvar CURRENT_TRACKER = null;\nvar Cell = class {\n  revision = $REVISION;\n  _value;\n  _lastValue;\n  _isEqual = tripleEq;\n  constructor(initialValue, isEqual = tripleEq) {\n    this._value = this._lastValue = initialValue;\n    this._isEqual = isEqual;\n  }\n  // Whenever a storage value is read, it'll add itself to the current tracker if\n  // one exists, entangling its state with that cache.\n  get value() {\n    CURRENT_TRACKER?.add(this);\n    return this._value;\n  }\n  // Whenever a storage value is updated, we bump the global revision clock,\n  // assign the revision for this storage to the new value, _and_ we schedule a\n  // rerender. This is important, and it's what makes autotracking  _pull_\n  // based. We don't actively tell the caches which depend on the storage that\n  // anything has happened. Instead, we recompute the caches when needed.\n  set value(newValue) {\n    if (this.value === newValue)\n      return;\n    this._value = newValue;\n    this.revision = ++$REVISION;\n  }\n};\nfunction tripleEq(a, b) {\n  return a === b;\n}\nvar TrackingCache = class {\n  _cachedValue;\n  _cachedRevision = -1;\n  _deps = [];\n  hits = 0;\n  fn;\n  constructor(fn) {\n    this.fn = fn;\n  }\n  clear() {\n    this._cachedValue = void 0;\n    this._cachedRevision = -1;\n    this._deps = [];\n    this.hits = 0;\n  }\n  get value() {\n    if (this.revision > this._cachedRevision) {\n      const { fn } = this;\n      const currentTracker = /* @__PURE__ */ new Set();\n      const prevTracker = CURRENT_TRACKER;\n      CURRENT_TRACKER = currentTracker;\n      this._cachedValue = fn();\n      CURRENT_TRACKER = prevTracker;\n      this.hits++;\n      this._deps = Array.from(currentTracker);\n      this._cachedRevision = this.revision;\n    }\n    CURRENT_TRACKER?.add(this);\n    return this._cachedValue;\n  }\n  get revision() {\n    return Math.max(...this._deps.map((d) => d.revision), 0);\n  }\n};\nfunction getValue(cell) {\n  if (!(cell instanceof Cell)) {\n    console.warn(\"Not a valid cell! \", cell);\n  }\n  return cell.value;\n}\nfunction setValue(storage, value) {\n  if (!(storage instanceof Cell)) {\n    throw new TypeError(\n      \"setValue must be passed a tracked store created with `createStorage`.\"\n    );\n  }\n  storage.value = storage._lastValue = value;\n}\nfunction createCell(initialValue, isEqual = tripleEq) {\n  return new Cell(initialValue, isEqual);\n}\nfunction createCache(fn) {\n  assertIsFunction(\n    fn,\n    \"the first parameter to `createCache` must be a function\"\n  );\n  return new TrackingCache(fn);\n}\n\n// src/autotrackMemoize/tracking.ts\nvar neverEq = (a, b) => false;\nfunction createTag() {\n  return createCell(null, neverEq);\n}\nfunction dirtyTag(tag, value) {\n  setValue(tag, value);\n}\nvar consumeCollection = (node) => {\n  let tag = node.collectionTag;\n  if (tag === null) {\n    tag = node.collectionTag = createTag();\n  }\n  getValue(tag);\n};\nvar dirtyCollection = (node) => {\n  const tag = node.collectionTag;\n  if (tag !== null) {\n    dirtyTag(tag, null);\n  }\n};\n\n// src/autotrackMemoize/proxy.ts\nvar REDUX_PROXY_LABEL = Symbol();\nvar nextId = 0;\nvar proto = Object.getPrototypeOf({});\nvar ObjectTreeNode = class {\n  constructor(value) {\n    this.value = value;\n    this.value = value;\n    this.tag.value = value;\n  }\n  proxy = new Proxy(this, objectProxyHandler);\n  tag = createTag();\n  tags = {};\n  children = {};\n  collectionTag = null;\n  id = nextId++;\n};\nvar objectProxyHandler = {\n  get(node, key) {\n    function calculateResult() {\n      const { value } = node;\n      const childValue = Reflect.get(value, key);\n      if (typeof key === \"symbol\") {\n        return childValue;\n      }\n      if (key in proto) {\n        return childValue;\n      }\n      if (typeof childValue === \"object\" && childValue !== null) {\n        let childNode = node.children[key];\n        if (childNode === void 0) {\n          childNode = node.children[key] = createNode(childValue);\n        }\n        if (childNode.tag) {\n          getValue(childNode.tag);\n        }\n        return childNode.proxy;\n      } else {\n        let tag = node.tags[key];\n        if (tag === void 0) {\n          tag = node.tags[key] = createTag();\n          tag.value = childValue;\n        }\n        getValue(tag);\n        return childValue;\n      }\n    }\n    const res = calculateResult();\n    return res;\n  },\n  ownKeys(node) {\n    consumeCollection(node);\n    return Reflect.ownKeys(node.value);\n  },\n  getOwnPropertyDescriptor(node, prop) {\n    return Reflect.getOwnPropertyDescriptor(node.value, prop);\n  },\n  has(node, prop) {\n    return Reflect.has(node.value, prop);\n  }\n};\nvar ArrayTreeNode = class {\n  constructor(value) {\n    this.value = value;\n    this.value = value;\n    this.tag.value = value;\n  }\n  proxy = new Proxy([this], arrayProxyHandler);\n  tag = createTag();\n  tags = {};\n  children = {};\n  collectionTag = null;\n  id = nextId++;\n};\nvar arrayProxyHandler = {\n  get([node], key) {\n    if (key === \"length\") {\n      consumeCollection(node);\n    }\n    return objectProxyHandler.get(node, key);\n  },\n  ownKeys([node]) {\n    return objectProxyHandler.ownKeys(node);\n  },\n  getOwnPropertyDescriptor([node], prop) {\n    return objectProxyHandler.getOwnPropertyDescriptor(node, prop);\n  },\n  has([node], prop) {\n    return objectProxyHandler.has(node, prop);\n  }\n};\nfunction createNode(value) {\n  if (Array.isArray(value)) {\n    return new ArrayTreeNode(value);\n  }\n  return new ObjectTreeNode(value);\n}\nfunction updateNode(node, newValue) {\n  const { value, tags, children } = node;\n  node.value = newValue;\n  if (Array.isArray(value) && Array.isArray(newValue) && value.length !== newValue.length) {\n    dirtyCollection(node);\n  } else {\n    if (value !== newValue) {\n      let oldKeysSize = 0;\n      let newKeysSize = 0;\n      let anyKeysAdded = false;\n      for (const _key in value) {\n        oldKeysSize++;\n      }\n      for (const key in newValue) {\n        newKeysSize++;\n        if (!(key in value)) {\n          anyKeysAdded = true;\n          break;\n        }\n      }\n      const isDifferent = anyKeysAdded || oldKeysSize !== newKeysSize;\n      if (isDifferent) {\n        dirtyCollection(node);\n      }\n    }\n  }\n  for (const key in tags) {\n    const childValue = value[key];\n    const newChildValue = newValue[key];\n    if (childValue !== newChildValue) {\n      dirtyCollection(node);\n      dirtyTag(tags[key], newChildValue);\n    }\n    if (typeof newChildValue === \"object\" && newChildValue !== null) {\n      delete tags[key];\n    }\n  }\n  for (const key in children) {\n    const childNode = children[key];\n    const newChildValue = newValue[key];\n    const childValue = childNode.value;\n    if (childValue === newChildValue) {\n      continue;\n    } else if (typeof newChildValue === \"object\" && newChildValue !== null) {\n      updateNode(childNode, newChildValue);\n    } else {\n      deleteNode(childNode);\n      delete children[key];\n    }\n  }\n}\nfunction deleteNode(node) {\n  if (node.tag) {\n    dirtyTag(node.tag, null);\n  }\n  dirtyCollection(node);\n  for (const key in node.tags) {\n    dirtyTag(node.tags[key], null);\n  }\n  for (const key in node.children) {\n    deleteNode(node.children[key]);\n  }\n}\n\n// src/lruMemoize.ts\nfunction createSingletonCache(equals) {\n  let entry;\n  return {\n    get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n      return NOT_FOUND;\n    },\n    put(key, value) {\n      entry = { key, value };\n    },\n    getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear() {\n      entry = void 0;\n    }\n  };\n}\nfunction createLruCache(maxSize, equals) {\n  let entries = [];\n  function get(key) {\n    const cacheIndex = entries.findIndex((entry) => equals(key, entry.key));\n    if (cacheIndex > -1) {\n      const entry = entries[cacheIndex];\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n      return entry.value;\n    }\n    return NOT_FOUND;\n  }\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      entries.unshift({ key, value });\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n  function getEntries() {\n    return entries;\n  }\n  function clear() {\n    entries = [];\n  }\n  return { get, put, getEntries, clear };\n}\nvar referenceEqualityCheck = (a, b) => a === b;\nfunction createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    }\n    const { length } = prev;\n    for (let i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n    return true;\n  };\n}\nfunction lruMemoize(func, equalityCheckOrOptions) {\n  const providedOptions = typeof equalityCheckOrOptions === \"object\" ? equalityCheckOrOptions : { equalityCheck: equalityCheckOrOptions };\n  const {\n    equalityCheck = referenceEqualityCheck,\n    maxSize = 1,\n    resultEqualityCheck\n  } = providedOptions;\n  const comparator = createCacheKeyComparator(equalityCheck);\n  let resultsCount = 0;\n  const cache = maxSize <= 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator);\n  function memoized() {\n    let value = cache.get(arguments);\n    if (value === NOT_FOUND) {\n      value = func.apply(null, arguments);\n      resultsCount++;\n      if (resultEqualityCheck) {\n        const entries = cache.getEntries();\n        const matchingEntry = entries.find(\n          (entry) => resultEqualityCheck(entry.value, value)\n        );\n        if (matchingEntry) {\n          value = matchingEntry.value;\n          resultsCount !== 0 && resultsCount--;\n        }\n      }\n      cache.put(arguments, value);\n    }\n    return value;\n  }\n  memoized.clearCache = () => {\n    cache.clear();\n    memoized.resetResultsCount();\n  };\n  memoized.resultsCount = () => resultsCount;\n  memoized.resetResultsCount = () => {\n    resultsCount = 0;\n  };\n  return memoized;\n}\n\n// src/autotrackMemoize/autotrackMemoize.ts\nfunction autotrackMemoize(func) {\n  const node = createNode(\n    []\n  );\n  let lastArgs = null;\n  const shallowEqual = createCacheKeyComparator(referenceEqualityCheck);\n  const cache = createCache(() => {\n    const res = func.apply(null, node.proxy);\n    return res;\n  });\n  function memoized() {\n    if (!shallowEqual(lastArgs, arguments)) {\n      updateNode(node, arguments);\n      lastArgs = arguments;\n    }\n    return cache.value;\n  }\n  memoized.clearCache = () => {\n    return cache.clear();\n  };\n  return memoized;\n}\n\n// src/weakMapMemoize.ts\nvar StrongRef = class {\n  constructor(value) {\n    this.value = value;\n  }\n  deref() {\n    return this.value;\n  }\n};\nvar Ref = typeof WeakRef !== \"undefined\" ? WeakRef : StrongRef;\nvar UNTERMINATED = 0;\nvar TERMINATED = 1;\nfunction createCacheNode() {\n  return {\n    s: UNTERMINATED,\n    v: void 0,\n    o: null,\n    p: null\n  };\n}\nfunction weakMapMemoize(func, options = {}) {\n  let fnNode = createCacheNode();\n  const { resultEqualityCheck } = options;\n  let lastResult;\n  let resultsCount = 0;\n  function memoized() {\n    let cacheNode = fnNode;\n    const { length } = arguments;\n    for (let i = 0, l = length; i < l; i++) {\n      const arg = arguments[i];\n      if (typeof arg === \"function\" || typeof arg === \"object\" && arg !== null) {\n        let objectCache = cacheNode.o;\n        if (objectCache === null) {\n          cacheNode.o = objectCache = /* @__PURE__ */ new WeakMap();\n        }\n        const objectNode = objectCache.get(arg);\n        if (objectNode === void 0) {\n          cacheNode = createCacheNode();\n          objectCache.set(arg, cacheNode);\n        } else {\n          cacheNode = objectNode;\n        }\n      } else {\n        let primitiveCache = cacheNode.p;\n        if (primitiveCache === null) {\n          cacheNode.p = primitiveCache = /* @__PURE__ */ new Map();\n        }\n        const primitiveNode = primitiveCache.get(arg);\n        if (primitiveNode === void 0) {\n          cacheNode = createCacheNode();\n          primitiveCache.set(arg, cacheNode);\n        } else {\n          cacheNode = primitiveNode;\n        }\n      }\n    }\n    const terminatedNode = cacheNode;\n    let result;\n    if (cacheNode.s === TERMINATED) {\n      result = cacheNode.v;\n    } else {\n      result = func.apply(null, arguments);\n      resultsCount++;\n      if (resultEqualityCheck) {\n        const lastResultValue = lastResult?.deref?.() ?? lastResult;\n        if (lastResultValue != null && resultEqualityCheck(lastResultValue, result)) {\n          result = lastResultValue;\n          resultsCount !== 0 && resultsCount--;\n        }\n        const needsWeakRef = typeof result === \"object\" && result !== null || typeof result === \"function\";\n        lastResult = needsWeakRef ? new Ref(result) : result;\n      }\n    }\n    terminatedNode.s = TERMINATED;\n    terminatedNode.v = result;\n    return result;\n  }\n  memoized.clearCache = () => {\n    fnNode = createCacheNode();\n    memoized.resetResultsCount();\n  };\n  memoized.resultsCount = () => resultsCount;\n  memoized.resetResultsCount = () => {\n    resultsCount = 0;\n  };\n  return memoized;\n}\n\n// src/createSelectorCreator.ts\nfunction createSelectorCreator(memoizeOrOptions, ...memoizeOptionsFromArgs) {\n  const createSelectorCreatorOptions = typeof memoizeOrOptions === \"function\" ? {\n    memoize: memoizeOrOptions,\n    memoizeOptions: memoizeOptionsFromArgs\n  } : memoizeOrOptions;\n  const createSelector2 = (...createSelectorArgs) => {\n    let recomputations = 0;\n    let dependencyRecomputations = 0;\n    let lastResult;\n    let directlyPassedOptions = {};\n    let resultFunc = createSelectorArgs.pop();\n    if (typeof resultFunc === \"object\") {\n      directlyPassedOptions = resultFunc;\n      resultFunc = createSelectorArgs.pop();\n    }\n    assertIsFunction(\n      resultFunc,\n      `createSelector expects an output function after the inputs, but received: [${typeof resultFunc}]`\n    );\n    const combinedOptions = {\n      ...createSelectorCreatorOptions,\n      ...directlyPassedOptions\n    };\n    const {\n      memoize,\n      memoizeOptions = [],\n      argsMemoize = weakMapMemoize,\n      argsMemoizeOptions = [],\n      devModeChecks = {}\n    } = combinedOptions;\n    const finalMemoizeOptions = ensureIsArray(memoizeOptions);\n    const finalArgsMemoizeOptions = ensureIsArray(argsMemoizeOptions);\n    const dependencies = getDependencies(createSelectorArgs);\n    const memoizedResultFunc = memoize(function recomputationWrapper() {\n      recomputations++;\n      return resultFunc.apply(\n        null,\n        arguments\n      );\n    }, ...finalMemoizeOptions);\n    let firstRun = true;\n    const selector = argsMemoize(function dependenciesChecker() {\n      dependencyRecomputations++;\n      const inputSelectorResults = collectInputSelectorResults(\n        dependencies,\n        arguments\n      );\n      lastResult = memoizedResultFunc.apply(null, inputSelectorResults);\n      if (process.env.NODE_ENV !== \"production\") {\n        const { identityFunctionCheck, inputStabilityCheck } = getDevModeChecksExecutionInfo(firstRun, devModeChecks);\n        if (identityFunctionCheck.shouldRun) {\n          identityFunctionCheck.run(\n            resultFunc,\n            inputSelectorResults,\n            lastResult\n          );\n        }\n        if (inputStabilityCheck.shouldRun) {\n          const inputSelectorResultsCopy = collectInputSelectorResults(\n            dependencies,\n            arguments\n          );\n          inputStabilityCheck.run(\n            { inputSelectorResults, inputSelectorResultsCopy },\n            { memoize, memoizeOptions: finalMemoizeOptions },\n            arguments\n          );\n        }\n        if (firstRun)\n          firstRun = false;\n      }\n      return lastResult;\n    }, ...finalArgsMemoizeOptions);\n    return Object.assign(selector, {\n      resultFunc,\n      memoizedResultFunc,\n      dependencies,\n      dependencyRecomputations: () => dependencyRecomputations,\n      resetDependencyRecomputations: () => {\n        dependencyRecomputations = 0;\n      },\n      lastResult: () => lastResult,\n      recomputations: () => recomputations,\n      resetRecomputations: () => {\n        recomputations = 0;\n      },\n      memoize,\n      argsMemoize\n    });\n  };\n  Object.assign(createSelector2, {\n    withTypes: () => createSelector2\n  });\n  return createSelector2;\n}\nvar createSelector = /* @__PURE__ */ createSelectorCreator(weakMapMemoize);\n\n// src/createStructuredSelector.ts\nvar createStructuredSelector = Object.assign(\n  (inputSelectorsObject, selectorCreator = createSelector) => {\n    assertIsObject(\n      inputSelectorsObject,\n      `createStructuredSelector expects first argument to be an object where each property is a selector, instead received a ${typeof inputSelectorsObject}`\n    );\n    const inputSelectorKeys = Object.keys(inputSelectorsObject);\n    const dependencies = inputSelectorKeys.map(\n      (key) => inputSelectorsObject[key]\n    );\n    const structuredSelector = selectorCreator(\n      dependencies,\n      (...inputSelectorResults) => {\n        return inputSelectorResults.reduce((composition, value, index) => {\n          composition[inputSelectorKeys[index]] = value;\n          return composition;\n        }, {});\n      }\n    );\n    return structuredSelector;\n  },\n  { withTypes: () => createStructuredSelector }\n);\nexport {\n  createSelector,\n  createSelectorCreator,\n  createStructuredSelector,\n  lruMemoize,\n  referenceEqualityCheck,\n  setGlobalDevModeChecks,\n  autotrackMemoize as unstable_autotrackMemoize,\n  weakMapMemoize\n};\n//# sourceMappingURL=reselect.mjs.map","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useLazyRef } from \"./useLazyRef.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null\n});\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  useOnMount(() => {\n    return apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n  });\n  return state;\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","export const gridDimensionsSelector = state => state.dimensions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The Data Grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport function calculatePinnedRowsHeight(apiRef) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsHeight = pinnedRows?.top?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  const bottomPinnedRowsHeight = pinnedRows?.bottom?.reduce((acc, value) => {\n    acc += apiRef.current.unstable_getRowHeight(value.id);\n    return acc;\n  }, 0) || 0;\n  return {\n    top: topPinnedRowsHeight,\n    bottom: bottomPinnedRowsHeight\n  };\n}\nexport function getMinimalContentHeight(apiRef) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  return `var(--DataGrid-overlayHeight, ${2 * dimensions.rowHeight}px)`;\n}\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}\nlet warnedOnceInvalidRowHeight = false;\nexport const getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nexport const rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nexport const getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  }\n  const rowNode = rowTree[id];\n  if (rowNode && isAutogeneratedRowNode(rowNode)) {\n    acc.push({\n      id,\n      model: {\n        [GRID_ID_AUTOGENERATED]: id\n      }\n    });\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, (visibleRowsLookup, sortedRows) => sortedRows.filter(row => visibleRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","export const gridPreferencePanelStateSelector = state => state.preferencePanel;","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from \"../../components/GridApiContext.js\";\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize, unstable_useId as useId } from '@mui/utils';\nimport { gridColumnLookupSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridFilterActiveItemsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarFilterList']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarFilterListRoot = styled('ul', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarFilterList',\n  overridesResolver: (_props, styles) => styles.toolbarFilterList\n})(({\n  theme\n}) => ({\n  margin: theme.spacing(1, 1, 0.5),\n  padding: theme.spacing(0, 1)\n}));\nconst GridToolbarFilterButton = /*#__PURE__*/React.forwardRef(function GridToolbarFilterButton(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const activeFilters = useGridSelector(apiRef, gridFilterActiveItemsSelector);\n  const lookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const classes = useUtilityClasses(rootProps);\n  const filterButtonId = useId();\n  const filterPanelId = useId();\n  const tooltipContentNode = React.useMemo(() => {\n    if (preferencePanel.open) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipHide');\n    }\n    if (activeFilters.length === 0) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipShow');\n    }\n    const getOperatorLabel = item => lookup[item.field].filterOperators.find(operator => operator.value === item.operator).label || apiRef.current.getLocaleText(`filterOperator${capitalize(item.operator)}`).toString();\n    const getFilterItemValue = item => {\n      const {\n        getValueAsString\n      } = lookup[item.field].filterOperators.find(operator => operator.value === item.operator);\n      return getValueAsString ? getValueAsString(item.value) : item.value;\n    };\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [apiRef.current.getLocaleText('toolbarFiltersTooltipActive')(activeFilters.length), /*#__PURE__*/_jsx(GridToolbarFilterListRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: activeFilters.map((item, index) => _extends({}, lookup[item.field] && /*#__PURE__*/_jsx(\"li\", {\n          children: `${lookup[item.field].headerName || item.field}\n                  ${getOperatorLabel(item)}\n                  ${\n          // implicit check for null and undefined\n          item.value != null ? getFilterItemValue(item) : ''}`\n        }, index)))\n      })]\n    });\n  }, [apiRef, rootProps, preferencePanel.open, activeFilters, lookup, classes]);\n  const toggleFilter = event => {\n    const {\n      open,\n      openedPanelValue\n    } = preferencePanel;\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.filters, filterPanelId, filterButtonId);\n    }\n    buttonProps.onClick?.(event);\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableColumnFilter) {\n    return null;\n  }\n  const isOpen = preferencePanel.open && preferencePanel.panelId === filterPanelId;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: tooltipContentNode,\n    enterDelay: 1000\n  }, tooltipProps, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      ref: ref,\n      id: filterButtonId,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarFiltersLabel'),\n      \"aria-controls\": isOpen ? filterPanelId : undefined,\n      \"aria-expanded\": isOpen,\n      \"aria-haspopup\": true,\n      startIcon: /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        badgeContent: activeFilters.length,\n        color: \"primary\",\n        children: /*#__PURE__*/_jsx(rootProps.slots.openFilterButtonIcon, {})\n      })\n    }, buttonProps, {\n      onClick: toggleFilter\n    }, rootProps.slotProps?.baseButton, {\n      children: apiRef.current.getLocaleText('toolbarFilters')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarFilterButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarFilterButton };","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [{\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.aggregationColumnHeader}`]: styles.aggregationColumnHeader\n  }, {\n    [`&.${c['aggregationColumnHeader--alignLeft']}`]: styles['aggregationColumnHeader--alignLeft']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignCenter']}`]: styles['aggregationColumnHeader--alignCenter']\n  }, {\n    [`&.${c['aggregationColumnHeader--alignRight']}`]: styles['aggregationColumnHeader--alignRight']\n  }, {\n    [`&.${c.aggregationColumnHeaderLabel}`]: styles.aggregationColumnHeaderLabel\n  }, {\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.groupingCriteriaCellLoadingContainer}`]: styles.groupingCriteriaCellLoadingContainer\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, styles.root]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedHoverOpacity = t.vars ? `calc(${hoverOpacity} + ${selectedOpacity})` // TODO: Improve type\n  : hoverOpacity + selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedHoverOpacity})` : alpha(t.palette.primary.main, selectedHoverOpacity);\n  const blendFn = t.vars ? blendCssVars : blend;\n  const getPinnedBackgroundStyles = backgroundColor => ({\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      backgroundColor,\n      '&.Mui-selected': {\n        backgroundColor: blendFn(backgroundColor, selectedBackground, selectedOpacity),\n        '&:hover': {\n          backgroundColor: blendFn(backgroundColor, selectedBackground, selectedHoverOpacity)\n        }\n      }\n    }\n  });\n  const pinnedBackgroundColor = blendFn(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedHoverStyles = getPinnedBackgroundStyles(pinnedBackgroundColor);\n  const pinnedSelectedBackgroundColor = blendFn(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedStyles = getPinnedBackgroundStyles(pinnedSelectedBackgroundColor);\n  const pinnedSelectedHoverBackgroundColor = blendFn(pinnedBackground, selectedHoverBackground, selectedHoverOpacity);\n  const pinnedSelectedHoverStyles = getPinnedBackgroundStyles(pinnedSelectedHoverBackgroundColor);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.iconButtonContainer}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        },\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: dimensions.hasScrollX && (!dimensions.hasScrollY || dimensions.scrollbarSize === 0) ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      flex: '0 0 auto',\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)',\n      '&.Mui-selected': {\n        backgroundColor: pinnedSelectedBackgroundColor\n      }\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': pinnedHoverStyles,\n      '&.Mui-selected': pinnedSelectedStyles,\n      '&.Mui-selected:hover': pinnedSelectedHoverStyles\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}, .${c.groupingCriteriaCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: '1 0 auto'\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}\nconst removeOpacity = color => `rgb(from ${color} r g b / 1)`;\nfunction blendCssVars(background, overlay, opacity) {\n  return `color-mix(in srgb,${background}, ${removeOpacity(overlay)} calc(${opacity} * 100%))`;\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = /*#__PURE__*/React.forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const handleRef = useForkRef(rootElementRef, ref);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n\n  // Our implementation of <NoSsr />\n  const [mountedState, setMountedState] = React.useState(false);\n  useEnhancedEffect(() => {\n    setMountedState(true);\n  }, []);\n  if (!mountedState) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridRootStyles, _extends({\n    ref: handleRef,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridRoot };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the Data Grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef();\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {React.MutableRefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(item.value ?? '');\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setFilterValueState(String(value));\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value: type === 'number' ? Number(value) : value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [filterTimeout, rootProps.filterDebounceMs, item, type, id, applyValue]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value === undefined) {\n      setFilterValueState(String(item.value ?? ''));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\n/* eslint-enable @typescript-eslint/no-unused-vars */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value.map(filterItemValue => type === 'number' ? Number(filterItemValue) : filterItemValue)]\n    }));\n  }, [applyValue, item, type]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {React.MutableRefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef();\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","export const GRID_TREE_DATA_GROUPING_FIELD = '__tree_data_group__';\nexport const GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD = '__row_group_by_columns_group__';\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../../hooks/features/rows/gridRowsSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD } from \"../../internals/constants.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const sanitizeFilterItemValue = value => {\n  if (String(value).toLowerCase() === 'true') {\n    return true;\n  }\n  if (String(value).toLowerCase() === 'false') {\n    return false;\n  }\n  return undefined;\n};\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(sanitizeFilterItemValue(item.value));\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = sanitizeFilterItemValue(event.target.value);\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(sanitizeFilterItemValue(item.value));\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState === undefined ? '' : String(filterValueState),\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import { GridFilterInputBoolean, sanitizeFilterItemValue } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    const sanitizedValue = sanitizeFilterItemValue(filterItem.value);\n    if (sanitizedValue === undefined) {\n      return null;\n    }\n    return value => Boolean(value) === sanitizedValue;\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef();\n  const inputRef = React.useRef();\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport getReactElementRef from '@mui/utils/getReactElementRef';\n\n// TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click-Away Listener](https://mui.com/material-ui/react-click-away-listener/)\n * - [Menu](https://mui.com/material-ui/react-menu/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/material-ui/api/click-away-listener/)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef(getReactElementRef(children), nodeRef);\n\n  // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current);\n\n    // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    }\n\n    // Do not act if user performed touchmove\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n    let insideDOM;\n\n    // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n    if (event.composedPath) {\n      insideDOM = event.composedPath().includes(nodeRef.current);\n    } else {\n      insideDOM = !doc.documentElement.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains(\n      // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  });\n\n  // Keep track of mouse/touch events that bubbled up through the portal.\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n  const childrenProps = {\n    ref: handleRef\n  };\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', 'onPointerDown', 'onPointerUp', false]),\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\nexport { ClickAwayListener };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: showMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport resolveProps from '@mui/utils/resolveProps';\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = resolveProps(existingState, _extends({}, newColumn, {\n      hasBeenResized\n    }));\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  if (props.unstable_listView) {\n    return 0;\n  }\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight * (1 + (maxDepth ?? 0)) + filterHeadersHeight;\n}","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nfunction GridScrollAreaRaw(props) {\n  const {\n    scrollDirection\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const scrollPosition = React.useRef({\n    left: 0,\n    top: 0\n  });\n  const getCanScrollMore = () => {\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [dragging, setDragging] = React.useState(false);\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = dimensions.leftPinnedWidth;\n  } else if (scrollDirection === 'right') {\n    style.right = dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  const handleScrolling = newScrollPosition => {\n    scrollPosition.current = newScrollPosition;\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  const handleColumnHeaderDragStart = useEventCallback(() => {\n    setDragging(true);\n  });\n  const handleColumnHeaderDragEnd = useEventCallback(() => {\n    setDragging(false);\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnHeaderDragStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnHeaderDragEnd);\n  if (!dragging || !canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaRaw);","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst isDevEnvironment = process.env.NODE_ENV === 'development';\nconst noop = () => {};\nexport function useResizeObserver(ref, fn, enabled) {\n  const fnRef = React.useRef(null);\n  fnRef.current = fn;\n  useEnhancedEffect(() => {\n    if (enabled === false || typeof ResizeObserver === 'undefined') {\n      return noop;\n    }\n    let frameID = 0;\n    const target = ref.current;\n    const observer = new ResizeObserver(entries => {\n      // See https://github.com/mui/mui-x/issues/8733\n      // In dev, we avoid the React warning by moving the task to the next frame.\n      // In prod, we want the task to run in the same frame as to avoid tear.\n      if (isDevEnvironment) {\n        frameID = requestAnimationFrame(() => {\n          fnRef.current(entries);\n        });\n      } else {\n        fnRef.current(entries);\n      }\n    });\n    if (target) {\n      observer.observe(target);\n    }\n    return () => {\n      if (frameID) {\n        cancelAnimationFrame(frameID);\n      }\n      observer.disconnect();\n    };\n  }, [ref, enabled]);\n}","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\nconst ALL_RESULTS_PAGE_VALUE = -1;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = paginationModel.pageSize === ALL_RESULTS_PAGE_VALUE ? visibleTopLevelRowCount - 1 : Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});","import * as React from 'react';\nimport { gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  let rows;\n  let range;\n  if (props.pagination && props.paginationMode === 'client') {\n    range = gridPaginationRowRangeSelector(apiRef);\n    rows = gridPaginatedVisibleSortedGridRowEntriesSelector(apiRef);\n  } else {\n    rows = gridExpandedSortedRowEntriesSelector(apiRef);\n    if (rows.length === 0) {\n      range = null;\n    } else {\n      range = {\n        firstRowIndex: 0,\n        lastRowIndex: rows.length - 1\n      };\n    }\n  }\n  return {\n    rows,\n    range\n  };\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\nexport const useGridVisibleRows = (apiRef, props) => {\n  const response = getVisibleRows(apiRef, props);\n  return React.useMemo(() => ({\n    rows: response.rows,\n    range: response.range\n  }), [response.rows, response.range]);\n};","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  useEnhancedEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","/**\n * Get a list column definition\n */\nexport const gridListColumnSelector = state => state.listViewColumn;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useResizeObserver } from '@mui/x-internals/useResizeObserver';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiEventHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { getMinimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nlet isJSDOM = false;\ntry {\n  if (typeof window !== 'undefined') {\n    isJSDOM = /jsdom/.test(window.navigator.userAgent);\n  }\n} catch (_) {\n  /* ignore */\n}\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    unstable_listView: listView\n  } = rootProps;\n  const visibleColumns = useGridSelector(apiRef, () => listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef));\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const outerSize = dimensions.viewportOuterSize;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumnDefinitions = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const pinnedColumns = listView ? {\n    left: [],\n    right: []\n  } : pinnedColumnDefinitions;\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const cellFocus = useGridSelector(apiRef, gridFocusCellSelector);\n  const cellTabIndex = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const gridRootRef = apiRef.current.rootElementRef;\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const scrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const contentHeight = dimensions.contentSize.height;\n  const columnsTotalWidth = dimensions.columnsTotalWidth;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  useResizeObserver(mainRef, () => apiRef.current.resize());\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const focusedCell = {\n    rowIndex: React.useMemo(() => cellFocus ? currentPage.rows.findIndex(row => row.id === cellFocus.id) : -1, [cellFocus, currentPage.rows]),\n    columnIndex: React.useMemo(() => cellFocus ? visibleColumns.findIndex(column => column.field === cellFocus.field) : -1, [cellFocus, visibleColumns])\n  };\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if the dimensions are also available.\n    // So we wait until we have valid dimensions before publishing the first event.\n    if (dimensions.isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef, dimensions.isReady]);\n  const triggerUpdateRenderContext = useEventCallback(() => {\n    const newScroll = {\n      top: scrollerRef.current.scrollTop,\n      left: scrollerRef.current.scrollLeft\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= dimensions.rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, dimensions.rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  });\n  const forceUpdateRenderContext = () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(event => {\n    const {\n      scrollTop,\n      scrollLeft\n    } = event.currentTarget;\n\n    // On iOS and macOS, negative offsets are possible when swiping past the start\n    if (scrollTop < 0) {\n      return;\n    }\n    if (!isRtl) {\n      if (scrollLeft < 0) {\n        return;\n      }\n    }\n    if (isRtl) {\n      if (scrollLeft > 0) {\n        return;\n      }\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollTop,\n      left: scrollLeft,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    const baseRenderContext = params.renderContext ?? renderContext;\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedCell.rowIndex !== -1) {\n      if (focusedCell.rowIndex < firstRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.unshift(virtualRowIndex);\n      }\n      if (focusedCell.rowIndex >= lastRowToRender) {\n        virtualRowIndex = focusedCell.rowIndex;\n        rowIndexes.push(virtualRowIndex);\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const hasFocus = cellFocus?.id === id;\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      const isVirtualRow = rowIndexInPage === virtualRowIndex;\n      const isNotVisible = isVirtualRow;\n      let tabbableCell = null;\n      if (cellTabIndex !== null && cellTabIndex.id === id) {\n        const cellParams = apiRef.current.getCellParams(id, cellTabIndex.field);\n        tabbableCell = cellParams.cellMode === 'view' ? cellTabIndex.field : null;\n      }\n      let currentRenderContext = baseRenderContext;\n      if (!isPinnedSection && frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetTop: params.rows ? undefined : rowsMeta.positions[rowIndexInPage],\n        offsetLeft: offsetLeft,\n        dimensions: dimensions,\n        rowHeight: baseRowHeight,\n        tabbableCell: tabbableCell,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        renderContext: currentRenderContext,\n        focusedColumnIndex: hasFocus ? focusedCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isNotVisible,\n        showBottomBorder: showBottomBorder\n      }, rowProps), id));\n      if (isNotVisible) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const needsHorizontalScrollbar = outerSize.width && columnsTotalWidth > outerSize.width;\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar || listView ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight, listView]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      flexBasis: contentHeight,\n      flexShrink: 0\n    };\n    if (rootProps.autoHeight && currentPage.rows.length === 0) {\n      size.flexBasis = getMinimalContentHeight(apiRef); // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [apiRef, columnsTotalWidth, contentHeight, needsHorizontalScrollbar, rootProps.autoHeight, currentPage.rows.length]);\n  React.useEffect(() => {\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange');\n  }, [apiRef, contentSize]);\n  useEnhancedEffect(() => {\n    // FIXME: Is this really necessary?\n    apiRef.current.resize();\n  }, [apiRef, rowsMeta.currentPageTotalHeight]);\n  useEnhancedEffect(() => {\n    // TODO a scroll reset should not be necessary\n    if (enabledForColumns) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n    if (enabledForRows) {\n      scrollerRef.current.scrollTop = 0;\n    }\n  }, [enabledForColumns, enabledForRows, gridRootRef, scrollerRef]);\n  useEnhancedEffect(() => {\n    if (listView) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n  }, [listView, scrollerRef]);\n  useRunOnce(outerSize.width !== 0, () => {\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const initialRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    updateRenderContext(initialRenderContext);\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: initialRenderContext\n    });\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiEventHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', forceUpdateRenderContext);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRef\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation'\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation'\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation'\n    })\n  };\n};\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = rootProps.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap,\n    listView: rootProps.unstable_listView ?? false\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n      const row = inputs.rows[i];\n      hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n    }\n    if (!hasRowWithAutoHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const noRows = totalRowCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridVisibleRows } from \"../../hooks/utils/useGridVisibleRows.js\";\nimport { getMinimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  if (rootProps.autoHeight && currentPage.rows.length === 0 || height === 0) {\n    height = getMinimalContentHeight(apiRef);\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const cellTabIndexState = useGridSelector(apiRef, gridTabIndexCellSelector);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && cellTabIndexState === null);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return configuration;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0,\n  width: 'calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))'\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => styles.main\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column'\n});\nexport const GridMainContainer = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ref: ref,\n    ownerState: rootProps,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, {\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => styles.virtualScrollerContent\n})({});\nconst GridVirtualScrollerContent = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({\n    ref: ref\n  }, props, {\n    ownerState: rootProps,\n    className: clsx(classes.root, props.className)\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const height = hasScrollX ? scrollbarSize : 0;\n  const needsLastRowBorder = viewportOuterSize.height - minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = /*#__PURE__*/React.forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst GridVirtualScrollbar = /*#__PURE__*/React.forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (scroller[propertyScroll] === lastPosition.current) {\n      return;\n    }\n    lastPosition.current = scroller[propertyScroll];\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scroller[propertyScroll] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    scroller.addEventListener('scroll', onScrollerScroll, {\n      capture: true\n    });\n    scrollbar.addEventListener('scroll', onScrollbarScroll, {\n      capture: true\n    });\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, {\n        capture: true\n      });\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, {\n        capture: true\n      });\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    style: props.position === 'vertical' && rootProps.unstable_listView ? {\n      height: '100%',\n      top: 0\n    } : undefined,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, dimensions, loadingOverlayVariant) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['main', dimensions.rightPinnedWidth > 0 && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', dimensions.hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => styles.virtualScroller\n})({\n  position: 'relative',\n  height: '100%',\n  flexGrow: 1,\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  display: 'flex',\n  flexDirection: 'column',\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const overlaysProps = useGridOverlays();\n  const classes = useUtilityClasses(rootProps, dimensions, overlaysProps.loadingOverlayVariant);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    children: [/*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"left\"\n    }), /*#__PURE__*/_jsx(GridScrollArea, {\n      scrollDirection: \"right\"\n    }), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [!rootProps.unstable_listView && /*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), dimensions.hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), dimensions.hasScrollX && !rootProps.unstable_listView && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nimport { GRID_ROOT_GROUP_ID } from \"../rows/gridRowsUtils.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nexport const ROW_SELECTION_PROPAGATION_DEFAULT = {\n  parents: false,\n  descendants: false\n};\nfunction getGridRowGroupSelectableDescendants(apiRef, groupId) {\n  const rowTree = gridRowTreeSelector(apiRef);\n  const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const groupNode = rowTree[groupId];\n  if (!groupNode || groupNode.type !== 'group') {\n    return [];\n  }\n  const descendants = [];\n  const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n  for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n    const id = sortedRowIds[index];\n    if (filteredRowsLookup[id] !== false && apiRef.current.isRowSelectable(id)) {\n      descendants.push(id);\n    }\n  }\n  return descendants;\n}\n\n// TODO v8: Use `createSelectorV8`\nexport function getCheckboxPropsSelector(groupId, autoSelectParents) {\n  return createSelector(gridRowTreeSelector, gridSortedRowIdsSelector, gridFilteredRowsLookupSelector, selectedIdsLookupSelector, (rowTree, sortedRowIds, filteredRowsLookup, rowSelectionLookup) => {\n    const groupNode = rowTree[groupId];\n    if (!groupNode || groupNode.type !== 'group') {\n      return {\n        isIndeterminate: false,\n        isChecked: rowSelectionLookup[groupId] === groupId\n      };\n    }\n    if (rowSelectionLookup[groupId] === groupId) {\n      return {\n        isIndeterminate: false,\n        isChecked: true\n      };\n    }\n    let selectableDescendantsCount = 0;\n    let selectedDescendantsCount = 0;\n    const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n    for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n      const id = sortedRowIds[index];\n      if (filteredRowsLookup[id] !== false) {\n        selectableDescendantsCount += 1;\n        if (rowSelectionLookup[id] !== undefined) {\n          selectedDescendantsCount += 1;\n        }\n      }\n    }\n    return {\n      isIndeterminate: selectedDescendantsCount > 0 && (selectedDescendantsCount < selectableDescendantsCount || rowSelectionLookup[groupId] === undefined),\n      isChecked: autoSelectParents ? selectedDescendantsCount > 0 : rowSelectionLookup[groupId] === groupId\n    };\n  });\n}\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}\nconst getRowNodeParents = (tree, id) => {\n  const parents = [];\n  let parent = id;\n  while (parent != null && parent !== GRID_ROOT_GROUP_ID) {\n    const node = tree[parent];\n    if (!node) {\n      return parents;\n    }\n    parents.push(parent);\n    parent = node.parent;\n  }\n  return parents;\n};\nconst getFilteredRowNodeSiblings = (tree, filteredRows, id) => {\n  const node = tree[id];\n  if (!node) {\n    return [];\n  }\n  const parent = node.parent;\n  if (parent == null) {\n    return [];\n  }\n  const parentNode = tree[parent];\n  return parentNode.children.filter(childId => childId !== id && filteredRows[childId]);\n};\nexport const findRowsToSelect = (apiRef, tree, selectedRow, autoSelectDescendants, autoSelectParents, addRow) => {\n  const filteredRows = gridFilteredRowsLookupSelector(apiRef);\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  const selectedDescendants = new Set([]);\n  if (!autoSelectDescendants && !autoSelectParents) {\n    return;\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[selectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, selectedRow);\n      descendants.forEach(rowId => {\n        addRow(rowId);\n        selectedDescendants.add(rowId);\n      });\n    }\n  }\n  if (autoSelectParents) {\n    const checkAllDescendantsSelected = rowId => {\n      if (selectedIdsLookup[rowId] !== rowId && !selectedDescendants.has(rowId)) {\n        return false;\n      }\n      const node = tree[rowId];\n      if (node?.type !== 'group') {\n        return true;\n      }\n      return node.children.every(checkAllDescendantsSelected);\n    };\n    const traverseParents = rowId => {\n      const siblings = getFilteredRowNodeSiblings(tree, filteredRows, rowId);\n      if (siblings.length === 0 || siblings.every(checkAllDescendantsSelected)) {\n        const rowNode = tree[rowId];\n        const parent = rowNode.parent;\n        if (parent != null && parent !== GRID_ROOT_GROUP_ID && apiRef.current.isRowSelectable(parent)) {\n          addRow(parent);\n          selectedDescendants.add(parent);\n          traverseParents(parent);\n        }\n      }\n    };\n    traverseParents(selectedRow);\n  }\n};\nexport const findRowsToDeselect = (apiRef, tree, deselectedRow, autoSelectDescendants, autoSelectParents, removeRow) => {\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  if (!autoSelectParents && !autoSelectDescendants) {\n    return;\n  }\n  if (autoSelectParents) {\n    const allParents = getRowNodeParents(tree, deselectedRow);\n    allParents.forEach(parent => {\n      const isSelected = selectedIdsLookup[parent] === parent;\n      if (isSelected) {\n        removeRow(parent);\n      }\n    });\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[deselectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, deselectedRow);\n      descendants.forEach(descendant => {\n        removeRow(descendant);\n      });\n    }\n  }\n};","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const virtualScrollbarVerticalRef = React.useRef(null);\n  const virtualScrollbarHorizontalRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    virtualScrollbarVerticalRef,\n    virtualScrollbarHorizontalRef,\n    columnHeadersContainerRef\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef();\n  const privateApiRef = React.useRef();\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const [, rawForceUpdate] = React.useState();\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => rawForceUpdate(() => apiRef.current.state), [apiRef]);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import * as React from 'react';\nimport { isFunction } from \"../../utils/utils.js\";\nimport { useGridLogger } from \"./useGridLogger.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  const [added, setAdded] = React.useState(false);\n  const handlerRef = React.useRef(handler);\n  const targetElement = isFunction(ref) ? ref() : ref?.current ?? null;\n  const wrapHandler = React.useCallback(event => {\n    return handlerRef.current && handlerRef.current(event);\n  }, []);\n  React.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  React.useEffect(() => {\n    if (targetElement && eventName && !added) {\n      logger.debug(`Binding native ${eventName} event`);\n      targetElement.addEventListener(eventName, wrapHandler, options);\n      setAdded(true);\n      const unsubscribe = () => {\n        logger.debug(`Clearing native ${eventName} event`);\n        targetElement.removeEventListener(eventName, wrapHandler, options);\n      };\n      apiRef.current.subscribeEvent('unmount', unsubscribe);\n    }\n  }, [targetElement, wrapHandler, eventName, added, logger, options, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getCheckboxPropsSelector } from \"../../hooks/features/rowSelection/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = /*#__PURE__*/React.forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const checkboxPropsSelector = getCheckboxPropsSelector(id, rootProps.rowSelectionPropagation?.parents ?? false);\n  const {\n    isIndeterminate,\n    isChecked\n  } = useGridSelector(apiRef, checkboxPropsSelector);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: handleRef,\n    tabIndex: tabIndex,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    onKeyDown: handleKeyDown,\n    indeterminate: isIndeterminate,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = /*#__PURE__*/React.forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const label = apiRef.current.getLocaleText(isChecked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    ref: ref,\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  return (event.ctrlKey || event.metaKey) &&\n  // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,\n  // for example, it would be another letter on a Dvorak physical keyboard.\n  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,\n  // for example, it would be ה on a Hebrew keyboard layout.\n  // https://github.com/w3c/uievents/issues/377 could be a long-term solution\n  String.fromCharCode(event.keyCode) === 'V' && !event.shiftKey && !event.altKey;\n}\n\n// Checks if the keyboard event corresponds to the copy shortcut (CTRL+C or CMD+C) across different localization keyboards.\nexport function isCopyShortcut(event) {\n  return (event.ctrlKey || event.metaKey) && String.fromCharCode(event.keyCode) === 'C' && !event.shiftKey && !event.altKey;\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nimport { isCopyShortcut } from \"../../../utils/keyboardUtils.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!isCopyShortcut(event)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, apiRef.current.rootElementRef, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef();\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport useEnhancedEffect from \"../utils/useEnhancedEffect.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport { dividerClasses } from \"../Divider/index.js\";\nimport { listItemIconClasses } from \"../ListItemIcon/index.js\";\nimport { listItemTextClasses } from \"../ListItemText/index.js\";\nimport menuItemClasses, { getMenuItemUtilityClass } from \"./menuItemClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return {\n    ...classes,\n    ...composedClasses\n  };\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body1,\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap',\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: 16,\n      paddingRight: 16\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.divider,\n    style: {\n      borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n      backgroundClip: 'padding-box'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.dense,\n    style: {\n      [theme.breakpoints.up('sm')]: {\n        minHeight: 'auto'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.dense,\n    style: {\n      minHeight: 32,\n      // https://m2.material.io/components/menus#specs > Dense\n      paddingTop: 4,\n      paddingBottom: 4,\n      ...theme.typography.body2,\n      [`& .${listItemIconClasses.root} svg`]: {\n        fontSize: '1.25rem'\n      }\n    }\n  }]\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n    autoFocus = false,\n    component = 'li',\n    dense = false,\n    divider = false,\n    disableGutters = false,\n    focusVisibleClassName,\n    role = 'menuitem',\n    tabIndex: tabIndexProp,\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = {\n    ...props,\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  };\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, {\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className),\n      ...other,\n      ownerState: ownerState,\n      classes: classes\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridCsvExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    delimiter: PropTypes.string,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    shouldAppendQuotes: PropTypes.bool,\n    utf8WithBom: PropTypes.bool\n  })\n} : void 0;\nfunction GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPrintExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    copyStyles: PropTypes.bool,\n    disableToolbarButton: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    hideFooter: PropTypes.bool,\n    hideToolbar: PropTypes.bool,\n    includeCheckboxes: PropTypes.bool,\n    pageStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  })\n} : void 0;\nconst GridToolbarExport = /*#__PURE__*/React.forwardRef(function GridToolbarExport(props, ref) {\n  const {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport, GridCsvExportMenuItem, GridPrintExportMenuItem };","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }));\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.paginationMode, props.signature]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/GridToolbarExport.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef();\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: {\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef),\n      filteredRowsLookup: {},\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    },\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters) {\n      return {\n        filteredRowsLookup: {},\n        filteredChildrenCountLookup: {},\n        filteredDescendantCountLookup: {}\n      };\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = gridFocusCellSelector(apiRef)?.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const lastFocusedRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(lastFocusedRowId);\n        const currentPage = getVisibleRows(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[clamp(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow?.id ?? null;\n      }\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested Data Grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport function enrichPageRowsWithPinnedRows(apiRef, rows) {\n  const pinnedRows = gridPinnedRowsSelector(apiRef) || {};\n  return [...(pinnedRows.top || []), ...rows, ...(pinnedRows.bottom || [])];\n}\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { GRID_TREE_DATA_GROUPING_FIELD, GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { isGroupingColumn } from \"../../../internals/utils/gridRowGroupingUtils.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { enrichPageRowsWithPinnedRows, getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const initialCurrentPageRows = useGridVisibleRows(apiRef, props).rows;\n  const isRtl = useRtl();\n  const listView = props.unstable_listView;\n  const currentPageRows = React.useMemo(() => enrichPageRowsWithPinnedRows(apiRef, initialCurrentPageRows), [apiRef, initialCurrentPageRows]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = listView ? gridListColumnSelector(apiRef.current.state).field : gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger, listView]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return currentPageRows[rowIndex]?.id;\n  }, [currentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (firstRowIndexInPage !== null) {\n            if (headerFilteringEnabled) {\n              goToHeaderFilter(colIndexBefore, event);\n            } else {\n              goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n            }\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows.length, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const getColumnIndexFn = listView ? () => 0 : apiRef.current.getColumnIndex;\n    const colIndexBefore = params.field ? getColumnIndexFn(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const visibleColumns = listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const lastColIndex = visibleColumns.length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef && (colDef.field === GRID_TREE_DATA_GROUPING_FIELD || isGroupingColumn(colDef.field))) {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, currentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader, listView]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import { GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD } from \"../constants.js\";\nexport const getRowGroupingCriteriaFromGroupingField = groupingColDefField => {\n  const match = groupingColDefField.match(/^__row_group_by_columns_group_(.*)__$/);\n  if (!match) {\n    return null;\n  }\n  return match[1];\n};\nexport const isGroupingColumn = field => field === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD || getRowGroupingCriteriaFromGroupingField(field) !== null;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount;\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: {\n      paginationModel,\n      rowCount,\n      meta\n    }\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n  const hideTimeout = React.useRef();\n  const immediateTimeout = React.useRef();\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    logger.debug('Hiding Preferences Panel');\n    const preferencePanelState = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (preferencePanelState.openedPanelValue) {\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: {\n        open: false\n      }\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger]);\n\n  // This is to prevent the preferences from closing when you open a select box or another panel,\n  // The issue is in MUI core V4 => Fixed in V5\n  const doNotHidePanel = React.useCallback(() => {\n    immediateTimeout.current = setTimeout(() => clearTimeout(hideTimeout.current), 0);\n  }, []);\n\n  // This is a hack for the issue with Core V4, by delaying hiding the panel on the clickAwayListener,\n  // we can cancel the action if the trigger element still need the panel...\n  const hidePreferencesDelayed = React.useCallback(() => {\n    hideTimeout.current = setTimeout(hidePreferences, 100);\n  }, [hidePreferences]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    doNotHidePanel();\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n    apiRef.current.forceUpdate();\n  }, [logger, doNotHidePanel, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences: hidePreferencesDelayed\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(hideTimeout.current);\n      clearTimeout(immediateTimeout.current);\n    };\n  }, []);\n};","/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    const value = apiRef.current.getCellValue(id, field);\n    let newValue = value;\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const column = apiRef.current.getColumn(field);\n    const shouldProcessEditCellProps = !!column.preProcessEditCellProps && deleteValue;\n    let newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: shouldProcessEditCellProps\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n    if (shouldProcessEditCellProps) {\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row: apiRef.current.getRow(id),\n        props: newProps,\n        hasChanged: newValue !== value\n      }));\n      // Check if still in edit mode before updating\n      if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n        const editingState = gridEditRowsStateSelector(apiRef.current.state);\n        updateOrDeleteFieldState(id, field, _extends({}, newProps, {\n          value: editingState[id][field].value,\n          isProcessingProps: false\n        }));\n      }\n    }\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = idToIdLookup[id] ?? id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsDataRowIdToIdLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef();\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    if (props.editMode === GridEditModes.Cell) {\n      return GridRowModes.View;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && Object.keys(editingState[id]).length > 0;\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      const column = apiRef.current.getColumn(field);\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(column);\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: !!column.preProcessEditCellProps && deleteValue\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n    columnFields.filter(field => !!apiRef.current.getColumn(field).preProcessEditCellProps && deleteValue).forEach(field => {\n      const column = apiRef.current.getColumn(field);\n      const value = apiRef.current.getCellValue(id, field);\n      const newValue = deleteValue ? getDefaultCellValue(column) : initialValue ?? value;\n      Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row: apiRef.current.getRow(id),\n        props: newProps[field],\n        hasChanged: newValue !== value\n      })).then(processedProps => {\n        // Check if still in edit mode before updating\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          const editingState = gridEditRowsStateSelector(apiRef.current.state);\n          updateOrDeleteFieldState(id, field, _extends({}, processedProps, {\n            value: editingState[id][field].value,\n            isProcessingProps: false\n          }));\n        }\n      });\n    });\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const idToIdLookup = gridRowsDataRowIdToIdLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = idToIdLookup[id] ?? id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const lookup = React.useMemo(() => currentPage.rows.reduce((acc, {\n    id\n  }, index) => {\n    acc[id] = index;\n    return acc;\n  }, {}), [currentPage.rows]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => lookup[id], [lookup]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const previousDataSource = useLazyRef(() => props.unstable_dataSource);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (props.unstable_dataSource && props.unstable_dataSource !== previousDataSource.current) {\n      previousDataSource.current = props.unstable_dataSource;\n      return;\n    }\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows, previousDataSource, props.unstable_dataSource]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const colDef = props.unstable_listView ? gridListColumnSelector(apiRef.current.state) : apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode: apiRef.current.getCellMode(id, field),\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: {}\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef, props.unstable_listView]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridRowsLookupSelector, gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled, findRowsToSelect, findRowsToDeselect } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = React.useCallback(callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  }, [props.rowSelection]);\n  const applyAutoSelection = props.signature !== GridSignature.DataGrid && (props.rowSelectionPropagation?.parents || props.rowSelectionPropagation?.descendants);\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const visibleRows = useGridVisibleRows(apiRef, props);\n  const tree = useGridSelector(apiRef, gridRowTreeSelector);\n  const isNestedData = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector) > 1;\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /*\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      const newSelection = [];\n      const addRow = rowId => {\n        newSelection.push(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      }\n      apiRef.current.setRowSelectionModel(newSelection);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = new Set(selection);\n      newSelection.delete(id);\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      } else if (applyAutoSelection) {\n        findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n      }\n      const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(Array.from(newSelection));\n      }\n    }\n  }, [apiRef, logger, applyAutoSelection, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      if (isSelected) {\n        newSelection = new Set(selectableIds);\n        if (applyAutoSelection) {\n          const addRow = rowId => {\n            newSelection.add(rowId);\n          };\n          selectableIds.forEach(id => {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          });\n        }\n      } else {\n        newSelection = new Set();\n      }\n      const currentLookup = selectedIdsLookupSelector(apiRef);\n      if (newSelection.size === Object.keys(currentLookup).length && Array.from(newSelection).every(id => currentLookup[id] === id)) {\n        return;\n      }\n    } else {\n      newSelection = new Set(Object.values(selectedIdsLookupSelector(apiRef)));\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          newSelection.add(id);\n          if (applyAutoSelection) {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          }\n        } else {\n          removeRow(id);\n          if (applyAutoSelection) {\n            findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n          }\n        }\n      });\n    }\n    const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(Array.from(newSelection));\n    }\n  }, [logger, applyAutoSelection, canHaveMultipleSelection, apiRef, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /*\n   * EVENTS\n   */\n  const isFirstRender = React.useRef(true);\n  const removeOutdatedSelection = React.useCallback((sortModelUpdated = false) => {\n    if (isFirstRender.current) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    const isNonExistent = id => {\n      if (props.filterMode === 'server') {\n        return !rowsLookup[id];\n      }\n      return filteredRowsLookup[id] !== true;\n    };\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (isNonExistent(id)) {\n        if (props.keepNonExistentRowsSelected) {\n          return;\n        }\n        delete selectionLookup[id];\n        hasChanged = true;\n        return;\n      }\n      if (!props.rowSelectionPropagation?.parents) {\n        return;\n      }\n      const node = tree[id];\n      if (node.type === 'group') {\n        const isAutoGenerated = node.isAutoGenerated;\n        if (isAutoGenerated) {\n          delete selectionLookup[id];\n          hasChanged = true;\n          return;\n        }\n        // Keep previously selected tree data parents selected if all their children are filtered out\n        if (!node.children.every(childId => filteredRowsLookup[childId] === false)) {\n          delete selectionLookup[id];\n          hasChanged = true;\n        }\n      }\n    });\n\n    // For nested data, on row tree updation (filtering, adding rows, etc.) when the selection is\n    // not empty, we need to re-run scanning of the tree to propagate the selection changes\n    // Example: A parent whose de-selected children are filtered out should now be selected\n    const shouldReapplyPropagation = isNestedData && props.rowSelectionPropagation?.parents && Object.keys(selectionLookup).length > 0;\n    if (hasChanged || shouldReapplyPropagation && !sortModelUpdated) {\n      const newSelection = Object.values(selectionLookup);\n      if (shouldReapplyPropagation) {\n        apiRef.current.selectRows(newSelection, true, true);\n      } else {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isNestedData, props.rowSelectionPropagation?.parents, props.keepNonExistentRowsSelected, props.filterMode, tree]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (String.fromCharCode(event.keyCode) === 'A' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, visibleRows.rows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(() => removeOutdatedSelection(true)));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    runIfRowSelectionIsEnabled(removeOutdatedSelection);\n  }, [removeOutdatedSelection, runIfRowSelectionIsEnabled]);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n  }, []);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = props.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.unstable_listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import { GridEditModes } from \"../models/gridEditRowModel.js\";\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnsTotalWidthSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { calculatePinnedRowsHeight, getValidRowHeight, rowHeightWarning } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../constants/dataGridPropsDefaultValues.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = state => {\n  const dimensions = EMPTY_DIMENSIONS;\n  return _extends({}, state, {\n    dimensions\n  });\n};\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const dimensionsState = useGridSelector(apiRef, gridDimensionsSelector);\n  const rowsMeta = useGridSelector(apiRef, gridRowsMetaSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const validRowHeight = React.useMemo(() => getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning), [props.rowHeight]);\n  const rowHeight = Math.floor(validRowHeight * densityFactor);\n  const headerHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const groupHeaderHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const headerFilterHeight = Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor);\n  const columnsTotalWidth = roundToDecimalPlaces(gridColumnsTotalWidthSelector(apiRef), 6);\n  const headersTotalHeight = getTotalHeaderHeight(apiRef, props);\n  const leftPinnedWidth = pinnedColumns.left.reduce((w, col) => w + col.computedWidth, 0);\n  const rightPinnedWidth = pinnedColumns.right.reduce((w, col) => w + col.computedWidth, 0);\n  const [savedSize, setSavedSize] = React.useState();\n  const debouncedSetSavedSize = React.useMemo(() => throttle(setSavedSize, props.resizeThrottleMs), [props.resizeThrottleMs]);\n  const previousSize = React.useRef();\n  const getRootDimensions = () => apiRef.current.state.dimensions;\n  const setDimensions = useEventCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n  });\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.pagination, props.paginationMode, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    const rootElement = apiRef.current.rootElementRef.current;\n    const pinnedRowsHeight = calculatePinnedRowsHeight(apiRef);\n    const scrollbarSize = measureScrollbarSize(rootElement, columnsTotalWidth, props.scrollbarSize);\n    const topContainerHeight = headersTotalHeight + pinnedRowsHeight.top;\n    const bottomContainerHeight = pinnedRowsHeight.bottom;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: rowsMeta.currentPageTotalHeight\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowsMeta.currentPageTotalHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  useEnhancedEffect(() => {\n    if (savedSize) {\n      updateDimensions();\n      apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n    }\n  }, [apiRef, savedSize, updateDimensions]);\n  const root = apiRef.current.rootElementRef.current;\n  useEnhancedEffect(() => {\n    if (!root) {\n      return;\n    }\n    const set = (k, v) => root.style.setProperty(k, v);\n    set('--DataGrid-width', `${dimensionsState.viewportOuterSize.width}px`);\n    set('--DataGrid-hasScrollX', `${Number(dimensionsState.hasScrollX)}`);\n    set('--DataGrid-hasScrollY', `${Number(dimensionsState.hasScrollY)}`);\n    set('--DataGrid-scrollbarSize', `${dimensionsState.scrollbarSize}px`);\n    set('--DataGrid-rowWidth', `${dimensionsState.rowWidth}px`);\n    set('--DataGrid-columnsTotalWidth', `${dimensionsState.columnsTotalWidth}px`);\n    set('--DataGrid-leftPinnedWidth', `${dimensionsState.leftPinnedWidth}px`);\n    set('--DataGrid-rightPinnedWidth', `${dimensionsState.rightPinnedWidth}px`);\n    set('--DataGrid-headerHeight', `${dimensionsState.headerHeight}px`);\n    set('--DataGrid-headersTotalHeight', `${dimensionsState.headersTotalHeight}px`);\n    set('--DataGrid-topContainerHeight', `${dimensionsState.topContainerHeight}px`);\n    set('--DataGrid-bottomContainerHeight', `${dimensionsState.bottomContainerHeight}px`);\n    set('--height', `${dimensionsState.rowHeight}px`);\n  }, [root, dimensionsState]);\n  const isFirstSizing = React.useRef(true);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n\n    // jsdom has no layout capabilities\n    const isJSDOM = /jsdom/.test(window.navigator.userAgent);\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      setSavedSize(size);\n      isFirstSizing.current = false;\n      return;\n    }\n    debouncedSetSavedSize(size);\n  }, [props.autoHeight, debouncedSetSavedSize, logger]);\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', updateDimensions);\n  useGridApiOptionHandler(apiRef, 'columnsChange', updateDimensions);\n  useGridApiEventHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction measureScrollbarSize(rootElement, columnsTotalWidth, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null || columnsTotalWidth === 0) {\n    return 0;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  return size;\n}\n\n// Get rid of floating point imprecision errors\n// https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\nfunction roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","/* eslint-disable */\n\n/**\n * HACK: Minimal shim to get jsdom to work.\n */\nexport const ResizeObserver = typeof globalThis.ResizeObserver !== 'undefined' ? globalThis.ResizeObserver : class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { ResizeObserver } from \"../../../utils/ResizeObserver.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { eslintUseValue } from \"../../../utils/utils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridFilterModelSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridSortModelSelector } from \"../sorting/gridSortingSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { getValidRowHeight, getRowHeightWarning } from \"./gridRowsUtils.js\";\n/* eslint-disable no-underscore-dangle */\n\nexport const rowsMetaStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowsMeta = {\n    heights: new Map()\n  };\n  return _extends({}, state, {\n    rowsMeta: {\n      currentPageTotalHeight: 0,\n      positions: []\n    }\n  });\n};\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const heightCache = apiRef.current.caches.rowsMeta.heights;\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const isHeightMetaValid = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const paginationState = useGridSelector(apiRef, gridPaginationSelector);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const rowHeight = useGridSelector(apiRef, () => gridDimensionsSelector(apiRef.current.state).rowHeight);\n  const getRowHeightEntry = rowId => {\n    let entry = heightCache.get(rowId);\n    if (entry === undefined) {\n      entry = {\n        content: rowHeight,\n        spacingTop: 0,\n        spacingBottom: 0,\n        detail: 0,\n        autoHeight: false,\n        needsFirstMeasurement: true\n      };\n      heightCache.set(rowId, entry);\n    }\n    return entry;\n  };\n  const processHeightEntry = React.useCallback(row => {\n    // HACK: rowHeight trails behind the most up-to-date value just enough to\n    // mess the initial rowsMeta hydration :/\n    const baseRowHeight = gridDimensionsSelector(apiRef.current.state).rowHeight;\n    eslintUseValue(rowHeight);\n    const entry = apiRef.current.getRowHeightEntry(row.id);\n    if (!getRowHeightProp) {\n      entry.content = baseRowHeight;\n      entry.needsFirstMeasurement = false;\n    } else {\n      const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n        densityFactor\n      }));\n      if (rowHeightFromUser === 'auto') {\n        if (entry.needsFirstMeasurement) {\n          const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n            densityFactor\n          })) : baseRowHeight;\n\n          // If the row was not measured yet use the estimated row height\n          entry.content = estimatedRowHeight ?? baseRowHeight;\n        }\n        hasRowWithAutoHeight.current = true;\n        entry.autoHeight = true;\n      } else {\n        // Default back to base rowHeight if getRowHeight returns invalid value.\n        entry.content = getValidRowHeight(rowHeightFromUser, baseRowHeight, getRowHeightWarning);\n        entry.needsFirstMeasurement = false;\n        entry.autoHeight = false;\n      }\n    }\n    if (getRowSpacing) {\n      const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n      const spacing = getRowSpacing(_extends({}, row, {\n        isFirstVisible: indexRelativeToCurrentPage === 0,\n        isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n        indexRelativeToCurrentPage\n      }));\n      entry.spacingTop = spacing.top ?? 0;\n      entry.spacingBottom = spacing.bottom ?? 0;\n    } else {\n      entry.spacingTop = 0;\n      entry.spacingBottom = 0;\n    }\n    apiRef.current.unstable_applyPipeProcessors('rowHeight', entry, row);\n    return entry;\n  }, [apiRef, currentPage.rows.length, getRowHeightProp, getEstimatedRowHeight, rowHeight, getRowSpacing, densityFactor]);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    pinnedRows.top.forEach(processHeightEntry);\n    pinnedRows.bottom.forEach(processHeightEntry);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      const entry = processHeightEntry(row);\n      const total = entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n      return acc + total;\n    }, 0);\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta: {\n          currentPageTotalHeight,\n          positions\n        }\n      });\n    });\n    isHeightMetaValid.current = true;\n  }, [apiRef, pinnedRows, currentPage.rows, processHeightEntry]);\n  const getRowHeight = rowId => {\n    return heightCache.get(rowId)?.content ?? rowHeight;\n  };\n  const storeRowHeightMeasurement = (id, height) => {\n    const entry = apiRef.current.getRowHeightEntry(id);\n    const didChange = entry.content !== height;\n    entry.needsFirstMeasurement = false;\n    entry.content = height;\n    isHeightMetaValid.current &&= !didChange;\n  };\n  const rowHasAutoHeight = id => {\n    return heightCache.get(id)?.autoHeight ?? false;\n  };\n  const getLastMeasuredRowIndex = () => {\n    return lastMeasuredRowIndex.current;\n  };\n  const setLastMeasuredRowIndex = index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  };\n  const resetRowHeights = () => {\n    heightCache.clear();\n    hydrateRowsMeta();\n  };\n  const resizeObserver = useLazyRef(() => new ResizeObserver(entries => {\n    for (let i = 0; i < entries.length; i += 1) {\n      const entry = entries[i];\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      const rowId = entry.target.__mui_id;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    }\n    if (!isHeightMetaValid.current) {\n      apiRef.current.requestPipeProcessorsApplication('rowHeight');\n    }\n  })).current;\n  const observeRowHeight = (element, rowId) => {\n    element.__mui_id = rowId;\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  };\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  React.useEffect(() => {\n    hydrateRowsMeta();\n  }, [filterModel, paginationState, sortModel, hydrateRowsMeta]);\n  const rowsMetaApi = {\n    unstable_getRowHeight: getRowHeight,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_storeRowHeightMeasurement: storeRowHeightMeasurement,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    hydrateRowsMeta,\n    observeRowHeight,\n    rowHasAutoHeight,\n    getRowHeightEntry,\n    getLastMeasuredRowIndex\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef();\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef();\n  const resizeDirection = React.useRef();\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef();\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n    apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      apiRef.current.unstable_setColumnVirtualization(false);\n      await columnVirtualizationDisabled();\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field]\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const availableWidth = apiRef.current.getRootDimensions().viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      apiRef.current.unstable_setColumnVirtualization(true);\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { getUnprocessedRange, isRowRangeUpdated, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set([GRID_CHECKBOX_SELECTION_FIELD, '__reorder__', GRID_DETAIL_PANEL_TOGGLE_FIELD]);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index <= rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        const prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (props.unstable_rowSpanning) {\n    const rowIds = state.rows.dataRowIds || [];\n    const orderedFields = state.columns.orderedFields || [];\n    const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n    const columnsLookup = state.columns.lookup;\n    const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n    if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n      return _extends({}, state, {\n        rowSpanning: EMPTY_STATE\n      });\n    }\n    const rangeToProcess = {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(rowIds.length - 1, 0))\n    };\n    const rows = rowIds.map(id => ({\n      id,\n      model: dataRowIdToModelLookup[id]\n    }));\n    const colDefs = orderedFields.map(field => columnsLookup[field]);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n    return _extends({}, state, {\n      rowSpanning: {\n        spannedCells,\n        hiddenCells,\n        hiddenCellOriginMap\n      }\n    });\n  }\n  return _extends({}, state, {\n    rowSpanning: EMPTY_STATE\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const {\n    range,\n    rows: visibleRows\n  } = useGridVisibleRows(apiRef, props);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const colDefs = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const processedRange = useLazyRef(() => {\n    return Object.keys(apiRef.current.state.rowSpanning.spannedCells).length > 0 ? {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS - 1, Math.max(apiRef.current.state.rows.dataRowIds.length - 1, 0))\n    } : EMPTY_RANGE;\n  });\n  const lastRange = React.useRef(EMPTY_RANGE);\n  const updateRowSpanningState = React.useCallback(\n  // A reset needs to occur when:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  (resetState = true) => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n      return;\n    }\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: Math.min(renderContext.lastRowIndex - 1, range.lastRowIndex)\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    if (!shouldUpdateState) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, props.unstable_rowSpanning, range, renderContext, visibleRows, colDefs, processedRange]);\n  const prevRenderContext = React.useRef(renderContext);\n  const isFirstRender = React.useRef(true);\n  const shouldResetState = React.useRef(false);\n  React.useEffect(() => {\n    const firstRender = isFirstRender.current;\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    }\n    if (range && lastRange.current && isRowRangeUpdated(range, lastRange.current)) {\n      lastRange.current = range;\n      shouldResetState.current = true;\n    }\n    if (!firstRender && prevRenderContext.current !== renderContext) {\n      if (isRowRangeUpdated(prevRenderContext.current, renderContext)) {\n        updateRowSpanningState(shouldResetState.current);\n        shouldResetState.current = false;\n      }\n      prevRenderContext.current = renderContext;\n      return;\n    }\n    updateRowSpanningState();\n  }, [updateRowSpanningState, renderContext, range, lastRange]);\n};","const warnedOnceCache = new Set();\n\n// TODO move to @base_ui/internals. Base UI, etc. need this helper.\nexport function warnOnce(message, gravity = 'warning') {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  if (!warnedOnceCache.has(cleanMessage)) {\n    warnedOnceCache.add(cleanMessage);\n    if (gravity === 'error') {\n      console.error(cleanMessage);\n    } else {\n      console.warn(cleanMessage);\n    }\n  }\n}\nexport function clearWarningsCache() {\n  warnedOnceCache.clear();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: props.unstable_listColumn ? _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  }) : undefined\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n  React.useEffect(() => {\n    if (props.unstable_listView && !props.unstable_listColumn) {\n      warnOnce(['MUI X: The `unstable_listColumn` prop must be set if `unstable_listView` is enabled.', 'To fix, pass a column definition to the `unstable_listColumn` prop, e.g. `{ field: \"example\", renderCell: (params) => <div>{params.row.id}</div> }`.', 'For more details, see https://mui.com/x/react-data-grid/list-view/']);\n    }\n  }, [props.unstable_listView, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nimport { listViewStateInitializer, useGridListView } from \"../hooks/features/listView/useGridListView.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderContextMenu', props.onColumnHeaderContextMenu);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from \"../styles/index.js\";\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getSkeletonUtilityClass } from \"./skeletonClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`;\nconst waveKeyframe = keyframes`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst pulseAnimation = typeof pulseKeyframe !== 'string' ? css`\n        animation: ${pulseKeyframe} 2s ease-in-out 0.5s infinite;\n      ` : null;\nconst waveAnimation = typeof waveKeyframe !== 'string' ? css`\n        &::after {\n          animation: ${waveKeyframe} 2s linear 0.5s infinite;\n        }\n      ` : null;\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return {\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em',\n    variants: [{\n      props: {\n        variant: 'text'\n      },\n      style: {\n        marginTop: 0,\n        marginBottom: 0,\n        height: 'auto',\n        transformOrigin: '0 55%',\n        transform: 'scale(1, 0.60)',\n        borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n        '&:empty:before': {\n          content: '\"\\\\00a0\"'\n        }\n      }\n    }, {\n      props: {\n        variant: 'circular'\n      },\n      style: {\n        borderRadius: '50%'\n      }\n    }, {\n      props: {\n        variant: 'rounded'\n      },\n      style: {\n        borderRadius: (theme.vars || theme).shape.borderRadius\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren,\n      style: {\n        '& > *': {\n          visibility: 'hidden'\n        }\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.width,\n      style: {\n        maxWidth: 'fit-content'\n      }\n    }, {\n      props: ({\n        ownerState\n      }) => ownerState.hasChildren && !ownerState.height,\n      style: {\n        height: 'auto'\n      }\n    }, {\n      props: {\n        animation: 'pulse'\n      },\n      style: pulseAnimation || {\n        animation: `${pulseKeyframe} 2s ease-in-out 0.5s infinite`\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: {\n        position: 'relative',\n        overflow: 'hidden',\n        /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n        WebkitMaskImage: '-webkit-radial-gradient(white, black)',\n        '&::after': {\n          background: `linear-gradient(\n                90deg,\n                transparent,\n                ${(theme.vars || theme).palette.action.hover},\n                transparent\n              )`,\n          content: '\"\"',\n          position: 'absolute',\n          transform: 'translateX(-100%)' /* Avoid flash during server-side hydration */,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          top: 0\n        }\n      }\n    }, {\n      props: {\n        animation: 'wave'\n      },\n      style: waveAnimation || {\n        '&::after': {\n          animation: `${waveKeyframe} 2s linear 0.5s infinite`\n        }\n      }\n    }]\n  };\n}));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n    animation = 'pulse',\n    className,\n    component = 'span',\n    height,\n    style,\n    variant = 'text',\n    width,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other,\n    style: {\n      width,\n      height,\n      ...style\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = /*#__PURE__*/React.forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = /*#__PURE__*/React.forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = /*#__PURE__*/React.forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = /*#__PURE__*/React.forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({\n    ref: ref\n  }, props, {\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = /*#__PURE__*/React.forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport { getLinearProgressUtilityClass } from \"./linearProgressClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst indeterminate1Animation = typeof indeterminate1Keyframe !== 'string' ? css`\n        animation: ${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n      ` : null;\nconst indeterminate2Keyframe = keyframes`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`;\nconst indeterminate2Animation = typeof indeterminate2Keyframe !== 'string' ? css`\n        animation: ${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n      ` : null;\nconst bufferKeyframe = keyframes`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`;\nconst bufferAnimation = typeof bufferKeyframe !== 'string' ? css`\n        animation: ${bufferKeyframe} 3s infinite linear;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  // Fix Safari's bug during composition of different paint.\n  zIndex: 0,\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color)\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.color === 'inherit' && ownerState.variant !== 'buffer',\n    style: {\n      '&::before': {\n        content: '\"\"',\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        backgroundColor: 'currentColor',\n        opacity: 0.3\n      }\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: 'transparent'\n    }\n  }, {\n    props: {\n      variant: 'query'\n    },\n    style: {\n      transform: 'rotate(180deg)'\n    }\n  }]\n})));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'absolute',\n  marginTop: 0,\n  height: '100%',\n  width: '100%',\n  backgroundSize: '10px 10px',\n  backgroundPosition: '0 -23px',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3,\n      backgroundImage: `radial-gradient(currentColor 0%, currentColor 16%, transparent 42%)`\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => {\n    const backgroundColor = getColorShade(theme, color);\n    return {\n      props: {\n        color\n      },\n      style: {\n        backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`\n      }\n    };\n  })]\n})), bufferAnimation || {\n  // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n  animation: `${bufferKeyframe} 3s infinite linear`\n});\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [{\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      backgroundColor: 'currentColor'\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: {\n      variant: 'buffer'\n    },\n    style: {\n      zIndex: 1,\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate1Animation || {\n      animation: `${indeterminate1Keyframe} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite`\n    }\n  }]\n})));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      '--LinearProgressBar2-barColor': (theme.vars || theme).palette[color].main\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant !== 'buffer' && ownerState.color !== 'inherit',\n    style: {\n      backgroundColor: 'var(--LinearProgressBar2-barColor, currentColor)'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant !== 'buffer' && ownerState.color === 'inherit',\n    style: {\n      backgroundColor: 'currentColor'\n    }\n  }, {\n    props: {\n      color: 'inherit'\n    },\n    style: {\n      opacity: 0.3\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      variant: 'buffer'\n    },\n    style: {\n      backgroundColor: getColorShade(theme, color),\n      transition: `transform .${TRANSITION_DURATION}s linear`\n    }\n  })), {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: {\n      width: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' || ownerState.variant === 'query',\n    style: indeterminate2Animation || {\n      animation: `${indeterminate2Keyframe} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    value,\n    valueBuffer,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const isRtl = useRtl();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\",\n    ...rootProps,\n    ref: ref,\n    ...other,\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = /*#__PURE__*/React.forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import { GridPinnedColumnPosition } from \"../../hooks/features/columns/index.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions) => {\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case GridPinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case GridPinnedColumnPosition.RIGHT:\n      pinnedOffset = dimensions.columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = 0;\n      break;\n  }\n  return pinnedOffset;\n};","import { GridPinnedColumnPosition } from \"../hooks/features/columns/gridColumnsInterfaces.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === GridPinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === GridPinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridColumnsTotalWidthSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedStyle = React.useCallback((computedWidth, index, position) => {\n    const pinnedOffset = getPinnedCellOffset(position, computedWidth, index, positions, dimensions);\n    return {\n      [position]: pinnedOffset\n    };\n  }, [dimensions, positions]);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return GridPinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n        const sectionLength = pinnedPosition ? pinnedColumns[pinnedPosition].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedPosition ? pinnedColumns[pinnedPosition].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const pinnedStyle = pinnedPosition && getPinnedStyle(column.computedWidth, colIndex, pinnedPosition);\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions.columnsTotalWidth, dimensions.viewportOuterSize.width, dimensions.rowHeight, dimensions.hasScrollY, dimensions.scrollbarSize, getPinnedPosition, getPinnedStyle]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root,\n    ref: handleRef\n  }, props, {\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = /*#__PURE__*/React.forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref,\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = /*#__PURE__*/React.forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst TableContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  TableContext.displayName = 'TableContext';\n}\nexport default TableContext;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst Tablelvl2Context = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  Tablelvl2Context.displayName = 'Tablelvl2Context';\n}\nexport default Tablelvl2Context;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTableCellUtilityClass(slot) {\n  return generateUtilityClass('MuiTableCell', slot);\n}\nconst tableCellClasses = generateUtilityClasses('MuiTableCell', ['root', 'head', 'body', 'footer', 'sizeSmall', 'sizeMedium', 'paddingCheckbox', 'paddingNone', 'alignLeft', 'alignCenter', 'alignRight', 'alignJustify', 'stickyHeader']);\nexport default tableCellClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { darken, alpha, lighten } from '@mui/system/colorManipulator';\nimport capitalize from \"../utils/capitalize.js\";\nimport TableContext from \"../Table/TableContext.js\";\nimport Tablelvl2Context from \"../Table/Tablelvl2Context.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport tableCellClasses, { getTableCellUtilityClass } from \"./tableCellClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    align,\n    padding,\n    size,\n    stickyHeader\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, stickyHeader && 'stickyHeader', align !== 'inherit' && `align${capitalize(align)}`, padding !== 'normal' && `padding${capitalize(padding)}`, `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getTableCellUtilityClass, classes);\n};\nconst TableCellRoot = styled('td', {\n  name: 'MuiTableCell',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`size${capitalize(ownerState.size)}`], ownerState.padding !== 'normal' && styles[`padding${capitalize(ownerState.padding)}`], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.stickyHeader && styles.stickyHeader];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body2,\n  display: 'table-cell',\n  verticalAlign: 'inherit',\n  // Workaround for a rendering bug with spanned columns in Chrome 62.0.\n  // Removes the alpha (sets it to 1), and lightens or darkens the theme color.\n  borderBottom: theme.vars ? `1px solid ${theme.vars.palette.TableCell.border}` : `1px solid\n    ${theme.palette.mode === 'light' ? lighten(alpha(theme.palette.divider, 1), 0.88) : darken(alpha(theme.palette.divider, 1), 0.68)}`,\n  textAlign: 'left',\n  padding: 16,\n  variants: [{\n    props: {\n      variant: 'head'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary,\n      lineHeight: theme.typography.pxToRem(24),\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  }, {\n    props: {\n      variant: 'body'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.primary\n    }\n  }, {\n    props: {\n      variant: 'footer'\n    },\n    style: {\n      color: (theme.vars || theme).palette.text.secondary,\n      lineHeight: theme.typography.pxToRem(21),\n      fontSize: theme.typography.pxToRem(12)\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      padding: '6px 16px',\n      [`&.${tableCellClasses.paddingCheckbox}`]: {\n        width: 24,\n        // prevent the checkbox column from growing\n        padding: '0 12px 0 16px',\n        '& > *': {\n          padding: 0\n        }\n      }\n    }\n  }, {\n    props: {\n      padding: 'checkbox'\n    },\n    style: {\n      width: 48,\n      // prevent the checkbox column from growing\n      padding: '0 0 0 4px'\n    }\n  }, {\n    props: {\n      padding: 'none'\n    },\n    style: {\n      padding: 0\n    }\n  }, {\n    props: {\n      align: 'left'\n    },\n    style: {\n      textAlign: 'left'\n    }\n  }, {\n    props: {\n      align: 'center'\n    },\n    style: {\n      textAlign: 'center'\n    }\n  }, {\n    props: {\n      align: 'right'\n    },\n    style: {\n      textAlign: 'right',\n      flexDirection: 'row-reverse'\n    }\n  }, {\n    props: {\n      align: 'justify'\n    },\n    style: {\n      textAlign: 'justify'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.stickyHeader,\n    style: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 2,\n      backgroundColor: (theme.vars || theme).palette.background.default\n    }\n  }]\n})));\n\n/**\n * The component renders a `<th>` element when the parent context is a header\n * or otherwise a `<td>` element.\n */\nconst TableCell = /*#__PURE__*/React.forwardRef(function TableCell(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTableCell'\n  });\n  const {\n    align = 'inherit',\n    className,\n    component: componentProp,\n    padding: paddingProp,\n    scope: scopeProp,\n    size: sizeProp,\n    sortDirection,\n    variant: variantProp,\n    ...other\n  } = props;\n  const table = React.useContext(TableContext);\n  const tablelvl2 = React.useContext(Tablelvl2Context);\n  const isHeadCell = tablelvl2 && tablelvl2.variant === 'head';\n  let component;\n  if (componentProp) {\n    component = componentProp;\n  } else {\n    component = isHeadCell ? 'th' : 'td';\n  }\n  let scope = scopeProp;\n  // scope is not a valid attribute for <td/> elements.\n  // source: https://html.spec.whatwg.org/multipage/tables.html#the-td-element\n  if (component === 'td') {\n    scope = undefined;\n  } else if (!scope && isHeadCell) {\n    scope = 'col';\n  }\n  const variant = variantProp || tablelvl2 && tablelvl2.variant;\n  const ownerState = {\n    ...props,\n    align,\n    component,\n    padding: paddingProp || (table && table.padding ? table.padding : 'normal'),\n    size: sizeProp || (table && table.size ? table.size : 'medium'),\n    sortDirection,\n    stickyHeader: variant === 'head' && table && table.stickyHeader,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  let ariaSort = null;\n  if (sortDirection) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  return /*#__PURE__*/_jsx(TableCellRoot, {\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    \"aria-sort\": ariaSort,\n    scope: scope,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TableCell.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Set the text-align on the table cell content.\n   *\n   * Monetary or generally number fields **should be right aligned** as that allows\n   * you to add them up quickly in your head without having to worry about decimals.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Sets the padding applied to the cell.\n   * The prop defaults to the value (`'default'`) inherited from the parent Table component.\n   */\n  padding: PropTypes.oneOf(['checkbox', 'none', 'normal']),\n  /**\n   * Set scope attribute.\n   */\n  scope: PropTypes.string,\n  /**\n   * Specify the size of the cell.\n   * The prop defaults to the value (`'medium'`) inherited from the parent Table component.\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * Set aria-sort direction.\n   */\n  sortDirection: PropTypes.oneOf(['asc', 'desc', false]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Specify the cell type.\n   * The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body', 'footer', 'head']), PropTypes.string])\n} : void 0;\nexport default TableCell;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getToolbarUtilityClass(slot) {\n  return generateUtilityClass('MuiToolbar', slot);\n}\nconst toolbarClasses = generateUtilityClasses('MuiToolbar', ['root', 'gutters', 'regular', 'dense']);\nexport default toolbarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getToolbarUtilityClass } from \"./toolbarClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableGutters,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableGutters && 'gutters', variant]\n  };\n  return composeClasses(slots, getToolbarUtilityClass, classes);\n};\nconst ToolbarRoot = styled('div', {\n  name: 'MuiToolbar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableGutters && styles.gutters, styles[ownerState.variant]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableGutters,\n    style: {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    }\n  }, {\n    props: {\n      variant: 'dense'\n    },\n    style: {\n      minHeight: 48\n    }\n  }, {\n    props: {\n      variant: 'regular'\n    },\n    style: theme.mixins.toolbar\n  }]\n})));\nconst Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiToolbar'\n  });\n  const {\n    className,\n    component = 'div',\n    disableGutters = false,\n    variant = 'regular',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableGutters,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ToolbarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   * The Toolbar is a flex container, allowing flex item properties to be used to lay out the children.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, disables gutter padding.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'regular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dense', 'regular']), PropTypes.string])\n} : void 0;\nexport default Toolbar;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport KeyboardArrowLeft from \"../internal/svg-icons/KeyboardArrowLeft.js\";\nimport KeyboardArrowRight from \"../internal/svg-icons/KeyboardArrowRight.js\";\nimport IconButton from \"../IconButton/index.js\";\nimport LastPageIconDefault from \"../internal/svg-icons/LastPage.js\";\nimport FirstPageIconDefault from \"../internal/svg-icons/FirstPage.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  const {\n    backIconButtonProps,\n    count,\n    disabled = false,\n    getItemAriaLabel,\n    nextIconButtonProps,\n    onPageChange,\n    page,\n    rowsPerPage,\n    showFirstButton,\n    showLastButton,\n    slots = {},\n    slotProps = {},\n    ...other\n  } = props;\n  const isRtl = useRtl();\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n  const FirstButton = slots.firstButton ?? IconButton;\n  const LastButton = slots.lastButton ?? IconButton;\n  const NextButton = slots.nextButton ?? IconButton;\n  const PreviousButton = slots.previousButton ?? IconButton;\n  const FirstButtonIcon = slots.firstButtonIcon ?? FirstPageIconDefault;\n  const LastButtonIcon = slots.lastButtonIcon ?? LastPageIconDefault;\n  const NextButtonIcon = slots.nextButtonIcon ?? KeyboardArrowRight;\n  const PreviousButtonIcon = slots.previousButtonIcon ?? KeyboardArrowLeft;\n  const FirstButtonSlot = isRtl ? LastButton : FirstButton;\n  const PreviousButtonSlot = isRtl ? NextButton : PreviousButton;\n  const NextButtonSlot = isRtl ? PreviousButton : NextButton;\n  const LastButtonSlot = isRtl ? FirstButton : LastButton;\n  const firstButtonSlotProps = isRtl ? slotProps.lastButton : slotProps.firstButton;\n  const previousButtonSlotProps = isRtl ? slotProps.nextButton : slotProps.previousButton;\n  const nextButtonSlotProps = isRtl ? slotProps.previousButton : slotProps.nextButton;\n  const lastButtonSlotProps = isRtl ? slotProps.firstButton : slotProps.lastButton;\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...other,\n    children: [showFirstButton && /*#__PURE__*/_jsx(FirstButtonSlot, {\n      onClick: handleFirstPageButtonClick,\n      disabled: disabled || page === 0,\n      \"aria-label\": getItemAriaLabel('first', page),\n      title: getItemAriaLabel('first', page),\n      ...firstButtonSlotProps,\n      children: isRtl ? /*#__PURE__*/_jsx(LastButtonIcon, {\n        ...slotProps.lastButtonIcon\n      }) : /*#__PURE__*/_jsx(FirstButtonIcon, {\n        ...slotProps.firstButtonIcon\n      })\n    }), /*#__PURE__*/_jsx(PreviousButtonSlot, {\n      onClick: handleBackButtonClick,\n      disabled: disabled || page === 0,\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('previous', page),\n      title: getItemAriaLabel('previous', page),\n      ...(previousButtonSlotProps ?? backIconButtonProps),\n      children: isRtl ? /*#__PURE__*/_jsx(NextButtonIcon, {\n        ...slotProps.nextButtonIcon\n      }) : /*#__PURE__*/_jsx(PreviousButtonIcon, {\n        ...slotProps.previousButtonIcon\n      })\n    }), /*#__PURE__*/_jsx(NextButtonSlot, {\n      onClick: handleNextButtonClick,\n      disabled: disabled || (count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false),\n      color: \"inherit\",\n      \"aria-label\": getItemAriaLabel('next', page),\n      title: getItemAriaLabel('next', page),\n      ...(nextButtonSlotProps ?? nextIconButtonProps),\n      children: isRtl ? /*#__PURE__*/_jsx(PreviousButtonIcon, {\n        ...slotProps.previousButtonIcon\n      }) : /*#__PURE__*/_jsx(NextButtonIcon, {\n        ...slotProps.nextButtonIcon\n      })\n    }), showLastButton && /*#__PURE__*/_jsx(LastButtonSlot, {\n      onClick: handleLastPageButtonClick,\n      disabled: disabled || page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": getItemAriaLabel('last', page),\n      title: getItemAriaLabel('last', page),\n      ...lastButtonSlotProps,\n      children: isRtl ? /*#__PURE__*/_jsx(FirstButtonIcon, {\n        ...slotProps.firstButtonIcon\n      }) : /*#__PURE__*/_jsx(LastButtonIcon, {\n        ...slotProps.lastButtonIcon\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   *\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func.isRequired,\n  /**\n   * Props applied to the next arrow [`IconButton`](/material-ui/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n  /**\n   * If `true`, show the first-page button.\n   */\n  showFirstButton: PropTypes.bool.isRequired,\n  /**\n   * If `true`, show the last-page button.\n   */\n  showLastButton: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the TablePaginationActions.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    firstButton: PropTypes.object,\n    firstButtonIcon: PropTypes.object,\n    lastButton: PropTypes.object,\n    lastButtonIcon: PropTypes.object,\n    nextButton: PropTypes.object,\n    nextButtonIcon: PropTypes.object,\n    previousButton: PropTypes.object,\n    previousButtonIcon: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePaginationActions.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    firstButton: PropTypes.elementType,\n    firstButtonIcon: PropTypes.elementType,\n    lastButton: PropTypes.elementType,\n    lastButtonIcon: PropTypes.elementType,\n    nextButton: PropTypes.elementType,\n    nextButtonIcon: PropTypes.elementType,\n    previousButton: PropTypes.elementType,\n    previousButtonIcon: PropTypes.elementType\n  })\n} : void 0;\nexport default TablePaginationActions;","'use client';\n\nimport useId from '@mui/utils/useId';\nexport default useId;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTablePaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiTablePagination', slot);\n}\nconst tablePaginationClasses = generateUtilityClasses('MuiTablePagination', ['root', 'toolbar', 'spacer', 'selectLabel', 'selectRoot', 'select', 'selectIcon', 'input', 'menuItem', 'displayedRows', 'actions']);\nexport default tablePaginationClasses;","'use client';\n\nvar _InputBase;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport integerPropType from '@mui/utils/integerPropType';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport isHostComponent from \"../utils/isHostComponent.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport InputBase from \"../InputBase/index.js\";\nimport MenuItem from \"../MenuItem/index.js\";\nimport Select from \"../Select/index.js\";\nimport TableCell from \"../TableCell/index.js\";\nimport Toolbar from \"../Toolbar/index.js\";\nimport TablePaginationActions from \"./TablePaginationActions.js\";\nimport useId from \"../utils/useId.js\";\nimport tablePaginationClasses, { getTablePaginationUtilityClass } from \"./tablePaginationClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst TablePaginationRoot = styled(TableCell, {\n  name: 'MuiTablePagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => ({\n  overflow: 'auto',\n  color: (theme.vars || theme).palette.text.primary,\n  fontSize: theme.typography.pxToRem(14),\n  // Increase the specificity to override TableCell.\n  '&:last-child': {\n    padding: 0\n  }\n})));\nconst TablePaginationToolbar = styled(Toolbar, {\n  name: 'MuiTablePagination',\n  slot: 'Toolbar',\n  overridesResolver: (props, styles) => ({\n    [`& .${tablePaginationClasses.actions}`]: styles.actions,\n    ...styles.toolbar\n  })\n})(memoTheme(({\n  theme\n}) => ({\n  minHeight: 52,\n  paddingRight: 2,\n  [`${theme.breakpoints.up('xs')} and (orientation: landscape)`]: {\n    minHeight: 52\n  },\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 52,\n    paddingRight: 2\n  },\n  [`& .${tablePaginationClasses.actions}`]: {\n    flexShrink: 0,\n    marginLeft: 20\n  }\n})));\nconst TablePaginationSpacer = styled('div', {\n  name: 'MuiTablePagination',\n  slot: 'Spacer',\n  overridesResolver: (props, styles) => styles.spacer\n})({\n  flex: '1 1 100%'\n});\nconst TablePaginationSelectLabel = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'SelectLabel',\n  overridesResolver: (props, styles) => styles.selectLabel\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body2,\n  flexShrink: 0\n})));\nconst TablePaginationSelect = styled(Select, {\n  name: 'MuiTablePagination',\n  slot: 'Select',\n  overridesResolver: (props, styles) => ({\n    [`& .${tablePaginationClasses.selectIcon}`]: styles.selectIcon,\n    [`& .${tablePaginationClasses.select}`]: styles.select,\n    ...styles.input,\n    ...styles.selectRoot\n  })\n})({\n  color: 'inherit',\n  fontSize: 'inherit',\n  flexShrink: 0,\n  marginRight: 32,\n  marginLeft: 8,\n  [`& .${tablePaginationClasses.select}`]: {\n    paddingLeft: 8,\n    paddingRight: 24,\n    textAlign: 'right',\n    textAlignLast: 'right' // Align <select> on Chrome.\n  }\n});\nconst TablePaginationMenuItem = styled(MenuItem, {\n  name: 'MuiTablePagination',\n  slot: 'MenuItem',\n  overridesResolver: (props, styles) => styles.menuItem\n})({});\nconst TablePaginationDisplayedRows = styled('p', {\n  name: 'MuiTablePagination',\n  slot: 'DisplayedRows',\n  overridesResolver: (props, styles) => styles.displayedRows\n})(memoTheme(({\n  theme\n}) => ({\n  ...theme.typography.body2,\n  flexShrink: 0\n})));\nfunction defaultLabelDisplayedRows({\n  from,\n  to,\n  count\n}) {\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n}\nfunction defaultGetAriaLabel(type) {\n  return `Go to ${type} page`;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    toolbar: ['toolbar'],\n    spacer: ['spacer'],\n    selectLabel: ['selectLabel'],\n    select: ['select'],\n    input: ['input'],\n    selectIcon: ['selectIcon'],\n    menuItem: ['menuItem'],\n    displayedRows: ['displayedRows'],\n    actions: ['actions']\n  };\n  return composeClasses(slots, getTablePaginationUtilityClass, classes);\n};\n\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\nconst TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTablePagination'\n  });\n  const {\n    ActionsComponent = TablePaginationActions,\n    backIconButtonProps,\n    className,\n    colSpan: colSpanProp,\n    component = TableCell,\n    count,\n    disabled = false,\n    getItemAriaLabel = defaultGetAriaLabel,\n    labelDisplayedRows = defaultLabelDisplayedRows,\n    labelRowsPerPage = 'Rows per page:',\n    nextIconButtonProps,\n    onPageChange,\n    onRowsPerPageChange,\n    page,\n    rowsPerPage,\n    rowsPerPageOptions = [10, 25, 50, 100],\n    SelectProps = {},\n    showFirstButton = false,\n    showLastButton = false,\n    slotProps = {},\n    slots = {},\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const selectProps = slotProps?.select ?? SelectProps;\n  const MenuItemComponent = selectProps.native ? 'option' : TablePaginationMenuItem;\n  let colSpan;\n  if (component === TableCell || component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n  const selectId = useId(selectProps.id);\n  const labelId = useId(selectProps.labelId);\n  const getLabelDisplayedRowsTo = () => {\n    if (count === -1) {\n      return (page + 1) * rowsPerPage;\n    }\n    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);\n  };\n  return /*#__PURE__*/_jsx(TablePaginationRoot, {\n    colSpan: colSpan,\n    ref: ref,\n    as: component,\n    ownerState: ownerState,\n    className: clsx(classes.root, className),\n    ...other,\n    children: /*#__PURE__*/_jsxs(TablePaginationToolbar, {\n      className: classes.toolbar,\n      children: [/*#__PURE__*/_jsx(TablePaginationSpacer, {\n        className: classes.spacer\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelectLabel, {\n        className: classes.selectLabel,\n        id: labelId,\n        children: labelRowsPerPage\n      }), rowsPerPageOptions.length > 1 && /*#__PURE__*/_jsx(TablePaginationSelect, {\n        variant: \"standard\",\n        ...(!selectProps.variant && {\n          input: _InputBase || (_InputBase = /*#__PURE__*/_jsx(InputBase, {}))\n        }),\n        value: rowsPerPage,\n        onChange: onRowsPerPageChange,\n        id: selectId,\n        labelId: labelId,\n        ...selectProps,\n        classes: {\n          ...selectProps.classes,\n          // TODO v5 remove `classes.input`\n          root: clsx(classes.input, classes.selectRoot, (selectProps.classes || {}).root),\n          select: clsx(classes.select, (selectProps.classes || {}).select),\n          // TODO v5 remove `selectIcon`\n          icon: clsx(classes.selectIcon, (selectProps.classes || {}).icon)\n        },\n        disabled: disabled,\n        children: rowsPerPageOptions.map(rowsPerPageOption => /*#__PURE__*/_createElement(MenuItemComponent, {\n          ...(!isHostComponent(MenuItemComponent) && {\n            ownerState\n          }),\n          className: classes.menuItem,\n          key: rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,\n          value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n        }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))\n      }), /*#__PURE__*/_jsx(TablePaginationDisplayedRows, {\n        className: classes.displayedRows,\n        children: labelDisplayedRows({\n          from: count === 0 ? 0 : page * rowsPerPage + 1,\n          to: getLabelDisplayedRowsTo(),\n          count: count === -1 ? -1 : count,\n          page\n        })\n      }), /*#__PURE__*/_jsx(ActionsComponent, {\n        className: classes.actions,\n        backIconButtonProps: backIconButtonProps,\n        count: count,\n        nextIconButtonProps: nextIconButtonProps,\n        onPageChange: onPageChange,\n        page: page,\n        rowsPerPage: rowsPerPage,\n        showFirstButton: showFirstButton,\n        showLastButton: showLastButton,\n        slotProps: slotProps.actions,\n        slots: slots.actions,\n        getItemAriaLabel: getItemAriaLabel,\n        disabled: disabled\n      })]\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   * @default TablePaginationActions\n   */\n  ActionsComponent: PropTypes.elementType,\n  /**\n   * Props applied to the back arrow [`IconButton`](https://mui.com/material-ui/api/icon-button/) component.\n   *\n   * This prop is an alias for `slotProps.actions.previousButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.previousButton` instead.\n   */\n  backIconButtonProps: PropTypes.object,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: integerPropType.isRequired,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('first' | 'last' | 'next' | 'previous').\n   * @returns {string}\n   * @default function defaultGetAriaLabel(type) {\n   *   return `Go to ${type} page`;\n   * }\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default function defaultLabelDisplayedRows({ from, to, count }) {\n   *   return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n   * }\n   */\n  labelDisplayedRows: PropTypes.func,\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).\n   * @default 'Rows per page:'\n   */\n  labelRowsPerPage: PropTypes.node,\n  /**\n   * Props applied to the next arrow [`IconButton`](https://mui.com/material-ui/api/icon-button/) element.\n   *\n   * This prop is an alias for `slotProps.actions.nextButton` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.actions.nextButton` instead.\n   */\n  nextIconButtonProps: PropTypes.object,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.MouseEvent<HTMLButtonElement> | null} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(integerPropType.isRequired, props => {\n    const {\n      count,\n      page,\n      rowsPerPage\n    } = props;\n    if (count === -1) {\n      return null;\n    }\n    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n    if (page < 0 || page > newLastPage) {\n      return new Error('MUI: The page prop of a TablePagination is out of range ' + `(0 to ${newLastPage}, but page is ${page}).`);\n    }\n    return null;\n  }),\n  /**\n   * The number of rows per page.\n   *\n   * Set -1 to display all the rows.\n   */\n  rowsPerPage: integerPropType.isRequired,\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   * Use -1 for the value with a custom label to show all the rows.\n   * @default [10, 25, 50, 100]\n   */\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  /**\n   * Props applied to the rows per page [`Select`](https://mui.com/material-ui/api/select/) element.\n   *\n   * This prop is an alias for `slotProps.select` and will be overriden by it if both are used.\n   * @deprecated Use `slotProps.select` instead.\n   *\n   * @default {}\n   */\n  SelectProps: PropTypes.object,\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * The props used for each slot inside the TablePagination.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.object,\n      firstButtonIcon: PropTypes.object,\n      lastButton: PropTypes.object,\n      lastButtonIcon: PropTypes.object,\n      nextButton: PropTypes.object,\n      nextButtonIcon: PropTypes.object,\n      previousButton: PropTypes.object,\n      previousButtonIcon: PropTypes.object\n    }),\n    select: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside the TablePagination.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    actions: PropTypes.shape({\n      firstButton: PropTypes.elementType,\n      firstButtonIcon: PropTypes.elementType,\n      lastButton: PropTypes.elementType,\n      lastButtonIcon: PropTypes.elementType,\n      nextButton: PropTypes.elementType,\n      nextButtonIcon: PropTypes.elementType,\n      previousButton: PropTypes.elementType,\n      previousButtonIcon: PropTypes.elementType\n    })\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default TablePagination;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  flexGrow: 1,\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = /*#__PURE__*/React.forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    ref: ref,\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = /*#__PURE__*/React.forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      ref: ref,\n      tabIndex: -1,\n      className: clsx(classes.root, className),\n      ownerState: rootProps\n    }, other))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = /*#__PURE__*/React.forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    ref: ref,\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = /*#__PURE__*/React.forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error', 'required', 'asterisk']);\nexport default formControlLabelClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useFormControl } from \"../FormControl/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from \"./formControlLabelClasses.js\";\nimport formControlState from \"../FormControl/formControlState.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error,\n    required\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error', required && 'required'],\n    label: ['label', disabled && 'disabled'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  },\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  },\n  variants: [{\n    props: {\n      labelPlacement: 'start'\n    },\n    style: {\n      flexDirection: 'row-reverse',\n      marginRight: -11\n    }\n  }, {\n    props: {\n      labelPlacement: 'top'\n    },\n    style: {\n      flexDirection: 'column-reverse'\n    }\n  }, {\n    props: {\n      labelPlacement: 'bottom'\n    },\n    style: {\n      flexDirection: 'column'\n    }\n  }, {\n    props: ({\n      labelPlacement\n    }) => labelPlacement === 'start' || labelPlacement === 'top' || labelPlacement === 'bottom',\n    style: {\n      marginLeft: 16 // used for row presentation of radio/checkbox\n    }\n  }]\n})));\nconst AsteriskComponent = styled('span', {\n  name: 'MuiFormControlLabel',\n  slot: 'Asterisk',\n  overridesResolver: (props, styles) => styles.asterisk\n})(memoTheme(({\n  theme\n}) => ({\n  [`&.${formControlLabelClasses.error}`]: {\n    color: (theme.vars || theme).palette.error.main\n  }\n})));\n\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n  const {\n    checked,\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    inputRef,\n    label: labelProp,\n    labelPlacement = 'end',\n    name,\n    onChange,\n    required: requiredProp,\n    slots = {},\n    slotProps = {},\n    value,\n    ...other\n  } = props;\n  const muiFormControl = useFormControl();\n  const disabled = disabledProp ?? control.props.disabled ?? muiFormControl?.disabled;\n  const required = requiredProp ?? control.props.required;\n  const controlProps = {\n    disabled,\n    required\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = {\n    ...props,\n    disabled,\n    labelPlacement,\n    required,\n    error: fcs.error\n  };\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = {\n    slots,\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [TypographySlot, typographySlotProps] = useSlot('typography', {\n    elementType: Typography,\n    externalForwardedProps,\n    ownerState\n  });\n  let label = labelProp;\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(TypographySlot, {\n      component: \"span\",\n      ...typographySlotProps,\n      className: clsx(classes.label, typographySlotProps?.className),\n      children: label\n    });\n  }\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), required ? /*#__PURE__*/_jsxs(\"div\", {\n      children: [label, /*#__PURE__*/_jsxs(AsteriskComponent, {\n        ownerState: ownerState,\n        \"aria-hidden\": true,\n        className: classes.asterisk,\n        children: [\"\\u2009\", '*']\n      })]\n    }) : label]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    typography: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    typography: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          sx: {\n            pl: 1.5\n          }\n        },\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    ref: ref,\n    placement: \"bottom-start\",\n    className: clsx(classes.panel, className),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onMouseUp\",\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"rowId\", \"editCellState\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"gridHasScrollX\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"sectionIndex\", \"sectionLength\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, objectShallowCompare } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { MissingRowIdError } from \"../../hooks/features/rows/useGridParamsApi.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport let PinnedPosition = /*#__PURE__*/function (PinnedPosition) {\n  PinnedPosition[PinnedPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedPosition[PinnedPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedPosition[PinnedPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedPosition[PinnedPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedPosition;\n}({});\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedPosition.NONE]: undefined,\n  [PinnedPosition.VIRTUAL]: undefined\n};\nconst EMPTY_CELL_PARAMS = {\n  id: -1,\n  field: '__unset__',\n  row: {},\n  rowNode: {\n    id: -1,\n    depth: 0,\n    type: 'leaf',\n    parent: -1,\n    groupingKey: null\n  },\n  colDef: {\n    type: 'string',\n    field: '__unset__',\n    computedWidth: 0\n  },\n  cellMode: GridCellModes.View,\n  hasFocus: false,\n  tabIndex: -1,\n  value: null,\n  formattedValue: '__unset__',\n  isEditable: false,\n  api: {}\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = /*#__PURE__*/React.forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      rowId,\n      editCellState,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      sectionIndex,\n      sectionLength,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const cellParams = useGridSelector(apiRef, () => {\n    // This is required because `.getCellParams` tries to get the `state.rows.tree` entry\n    // associated with `rowId`/`fieldId`, but this selector runs after the state has been\n    // updated, while `rowId`/`fieldId` reference an entry in the old state.\n    try {\n      const result = apiRef.current.getCellParams(rowId, field);\n      result.api = apiRef.current;\n      return result;\n    } catch (error) {\n      if (error instanceof MissingRowIdError) {\n        return EMPTY_CELL_PARAMS;\n      }\n      throw error;\n    }\n  }, objectShallowCompare);\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    cellMode,\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const position = gridPinnedColumnPositionLookup[pinnedPosition];\n  const showLeftBorder = shouldCellShowLeftBorder(position, sectionIndex);\n  const showRightBorder = shouldCellShowRightBorder(position, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        border: 0\n      };\n    }\n    const cellStyle = _extends({\n      '--width': `${width}px`\n    }, styleProp);\n    const isLeftPinned = pinnedPosition === PinnedPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      cellStyle[side] = pinnedOffset;\n    }\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  if (cellParams === EMPTY_CELL_PARAMS) {\n    return null;\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  className: PropTypes.string,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  editCellState: PropTypes.shape({\n    changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n    isProcessingProps: PropTypes.bool,\n    isValidating: PropTypes.bool,\n    value: PropTypes.any\n  }),\n  gridHasFiller: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onDragEnter: PropTypes.func,\n  onDragOver: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onMouseDown: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  pinnedOffset: PropTypes.number.isRequired,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  sectionIndex: PropTypes.number.isRequired,\n  sectionLength: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetTop\", \"offsetLeft\", \"dimensions\", \"renderContext\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"focusedCell\", \"tabbableCell\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { GridEditModes, GridRowModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../internals/constants.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { PinnedPosition, gridPinnedColumnPositionLookup } from \"./cell/GridCell.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction EmptyCell({\n  width\n}) {\n  if (!width) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(gridClasses.cell, gridClasses.cellEmpty),\n    style: {\n      '--width': `${width}px`\n    }\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? EmptyCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  width: PropTypes.number.isRequired\n} : void 0;\nconst GridRow = /*#__PURE__*/React.forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      dimensions,\n      renderContext,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const editRowsState = useGridSelector(apiRef, gridEditRowsStateSelector);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  const editing = apiRef.current.getRowMode(rowId) === GridRowModes.Edit;\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < renderContext.firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= renderContext.lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const rowReordering = rootProps.rowReordering;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(gridPinnedColumnPositionLookup[pinnedPosition], column.computedWidth, indexRelativeToAllColumns, columnPositions, dimensions);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n    const editCellState = editRowsState[rowId]?.[column.field] ?? null;\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const isEditingRows = Object.keys(editRowsState).length > 0;\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = rowReordering && !sortModel.length && treeDepth <= 1 && !isEditingRows;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedPosition.VIRTUAL;\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      editCellState: editCellState,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      sectionIndex: indexInSection,\n      sectionLength: sectionLength,\n      gridHasFiller: gridHasFiller\n    }, slotProps?.cell), column.field);\n  };\n\n  /* Start of rendering */\n\n  if (!rowNode) {\n    return null;\n  }\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  for (let i = renderContext.firstColumnIndex; i < renderContext.lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth - scrollbarWidth;\n  const emptyCellWidth = Math.max(0, expandedWidth);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, emptyCellWidth > 0 && /*#__PURE__*/_jsx(EmptyCell, {\n      width: emptyCellWidth\n    }), rightCells.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.filler\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  dimensions: PropTypes.shape({\n    bottomContainerHeight: PropTypes.number.isRequired,\n    columnsTotalWidth: PropTypes.number.isRequired,\n    contentSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    groupHeaderHeight: PropTypes.number.isRequired,\n    hasScrollX: PropTypes.bool.isRequired,\n    hasScrollY: PropTypes.bool.isRequired,\n    headerFilterHeight: PropTypes.number.isRequired,\n    headerHeight: PropTypes.number.isRequired,\n    headersTotalHeight: PropTypes.number.isRequired,\n    isReady: PropTypes.bool.isRequired,\n    leftPinnedWidth: PropTypes.number.isRequired,\n    minimumSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rightPinnedWidth: PropTypes.number.isRequired,\n    root: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    rowHeight: PropTypes.number.isRequired,\n    rowWidth: PropTypes.number.isRequired,\n    scrollbarSize: PropTypes.number.isRequired,\n    topContainerHeight: PropTypes.number.isRequired,\n    viewportInnerSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired,\n    viewportOuterSize: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  offsetTop: PropTypes.number,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  renderContext: PropTypes.shape({\n    firstColumnIndex: PropTypes.number.isRequired,\n    firstRowIndex: PropTypes.number.isRequired,\n    lastColumnIndex: PropTypes.number.isRequired,\n    lastRowIndex: PropTypes.number.isRequired\n  }).isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  /**\n   * Determines which cell should be tabbable by having tabIndex=0.\n   * If `null`, no cell in this row is in the tab sequence.\n   */\n  tabbableCell: PropTypes.string,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = /*#__PURE__*/React.forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = /*#__PURE__*/React.forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    ref: handleRef,\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    style,\n    pinnedPosition,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onContextMenu: publish('columnHeaderContextMenu'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  indexInSection: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedPosition: PropTypes.oneOf(['left', 'right']),\n  sectionLength: PropTypes.number.isRequired,\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../utils/cellBorderUtils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === 'left' && 'columnHeader--pinnedLeft', pinnedPosition === 'right' && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    style,\n    indexInSection,\n    sectionLength,\n    gridHasFiller\n  } = props;\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n  const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showColumnVerticalBorder, gridHasFiller);\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showLeftBorder,\n    showRightBorder,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridRenderContextColumnsSelector, gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { GridPinnedColumnPosition, gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const isRtl = useRtl();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const hasVirtualization = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector);\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n  React.useEffect(() => {\n    if (apiRef.current.columnHeadersContainerRef.current) {\n      apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n    }\n  }, [apiRef]);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext,\n      maxLastColumn = visibleColumns.length\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = !hasVirtualization ? maxLastColumn : currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === GridPinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getCellOffsetStyle = ({\n    pinnedPosition,\n    columnIndex,\n    computedWidth\n  }) => {\n    let style;\n    const isLeftPinned = pinnedPosition === GridPinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === GridPinnedColumnPosition.RIGHT;\n    if (isLeftPinned || isRightPinned) {\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, computedWidth, columnIndex, columnPositions, dimensions);\n      let side = isLeftPinned ? 'left' : 'right';\n      if (isRtl) {\n        side = isLeftPinned ? 'right' : 'left';\n      }\n      if (pinnedPosition === 'left') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n      if (pinnedPosition === 'right') {\n        style = {\n          [side]: pinnedOffset\n        };\n      }\n    }\n    return style;\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: colDef.computedWidth\n      });\n      const siblingWithBorderingSeparator = pinnedPosition === GridPinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: dimensions.headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: i,\n        sectionLength: renderedColumns.length,\n        gridHasFiller: gridHasFiller,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext,\n        maxLastColumn: leftRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext,\n        maxLastColumn: visibleColumns.length - pinnedColumns.right.length\n      }), rightRenderContext && getColumnHeaders({\n        position: GridPinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext,\n        maxLastColumn: rightRenderContext.lastColumnIndex\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const style = getCellOffsetStyle({\n        pinnedPosition,\n        columnIndex,\n        computedWidth: headerInfo.width\n      });\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === 'left') {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: headerInfo.colIndex === visibleColumns.length - headerInfo.fields.length,\n        maxDepth: headerGroupingMaxDepth,\n        height: dimensions.groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        style: style,\n        indexInSection: indexInSection,\n        sectionLength: rowStructure.length,\n        gridHasFiller: gridHasFiller\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: GridPinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    getCellOffsetStyle,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\"\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = /*#__PURE__*/React.forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({\n    ref: ref\n  }, other, getInnerProps(), {\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [rootProps.slots.baseDivider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems, rootProps.slots.baseDivider]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = /*#__PURE__*/React.forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    ref: ref,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getListItemIconUtilityClass } from \"./listItemIconClasses.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    alignItems,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', alignItems === 'flex-start' && 'alignItemsFlexStart']\n  };\n  return composeClasses(slots, getListItemIconUtilityClass, classes);\n};\nconst ListItemIconRoot = styled('div', {\n  name: 'MuiListItemIcon',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.alignItems === 'flex-start' && styles.alignItemsFlexStart];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  minWidth: 56,\n  color: (theme.vars || theme).palette.action.active,\n  flexShrink: 0,\n  display: 'inline-flex',\n  variants: [{\n    props: {\n      alignItems: 'flex-start'\n    },\n    style: {\n      marginTop: 8\n    }\n  }]\n})));\n\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\nconst ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemIcon'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const context = React.useContext(ListContext);\n  const ownerState = {\n    ...props,\n    alignItems: context.alignItems\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(ListItemIconRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@mui/icons-material` SVG icon element.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemIcon;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography, { typographyClasses } from \"../Typography/index.js\";\nimport ListContext from \"../List/ListContext.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport listItemTextClasses, { getListItemTextUtilityClass } from \"./listItemTextClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    inset,\n    primary,\n    secondary,\n    dense\n  } = ownerState;\n  const slots = {\n    root: ['root', inset && 'inset', dense && 'dense', primary && secondary && 'multiline'],\n    primary: ['primary'],\n    secondary: ['secondary']\n  };\n  return composeClasses(slots, getListItemTextUtilityClass, classes);\n};\nconst ListItemTextRoot = styled('div', {\n  name: 'MuiListItemText',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${listItemTextClasses.primary}`]: styles.primary\n    }, {\n      [`& .${listItemTextClasses.secondary}`]: styles.secondary\n    }, styles.root, ownerState.inset && styles.inset, ownerState.primary && ownerState.secondary && styles.multiline, ownerState.dense && styles.dense];\n  }\n})({\n  flex: '1 1 auto',\n  minWidth: 0,\n  marginTop: 4,\n  marginBottom: 4,\n  [`.${typographyClasses.root}:where(& .${listItemTextClasses.primary})`]: {\n    display: 'block'\n  },\n  [`.${typographyClasses.root}:where(& .${listItemTextClasses.secondary})`]: {\n    display: 'block'\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.primary && ownerState.secondary,\n    style: {\n      marginTop: 6,\n      marginBottom: 6\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.inset,\n    style: {\n      paddingLeft: 56\n    }\n  }]\n});\nconst ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiListItemText'\n  });\n  const {\n    children,\n    className,\n    disableTypography = false,\n    inset = false,\n    primary: primaryProp,\n    primaryTypographyProps,\n    secondary: secondaryProp,\n    secondaryTypographyProps,\n    ...other\n  } = props;\n  const {\n    dense\n  } = React.useContext(ListContext);\n  let primary = primaryProp != null ? primaryProp : children;\n  let secondary = secondaryProp;\n  const ownerState = {\n    ...props,\n    disableTypography,\n    inset,\n    primary: !!primary,\n    secondary: !!secondary,\n    dense\n  };\n  const classes = useUtilityClasses(ownerState);\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/_jsx(Typography, {\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: primaryTypographyProps?.variant ? undefined : 'span',\n      ...primaryTypographyProps,\n      children: primary\n    });\n  }\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/_jsx(Typography, {\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      ...secondaryTypographyProps,\n      children: secondary\n    });\n  }\n  return /*#__PURE__*/_jsxs(ListItemTextRoot, {\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [primary, secondary]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * If `true`, the children are indented.\n   * This should be used if there is no left avatar or left icon.\n   * @default false\n   */\n  inset: PropTypes.bool,\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default ListItemText;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = /*#__PURE__*/React.forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({\n    ref: ref\n  }, other, {\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridGenericColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  /**\n   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlotProps: PropTypes.object.isRequired,\n  /**\n   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlots: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nconst GridColumnMenu = /*#__PURE__*/React.forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = /*#__PURE__*/React.forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    ref: ref\n  }, props, {\n    children: noResultsOverlayLabel\n  }));\n});","'use client';\n\nimport { usePreviousProps } from '@mui/utils';\n/**\n *\n * Demos:\n *\n * - [Badge](https://mui.com/base-ui/react-badge/#hook)\n *\n * API:\n *\n * - [useBadge API](https://mui.com/base-ui/react-badge/hooks-api/#use-badge)\n */\nfunction useBadge(parameters) {\n  const {\n    badgeContent: badgeContentProp,\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    showZero = false\n  } = parameters;\n  const prevProps = usePreviousProps({\n    badgeContent: badgeContentProp,\n    max: maxProp\n  });\n  let invisible = invisibleProp;\n  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {\n    invisible = true;\n  }\n  const {\n    badgeContent,\n    max = maxProp\n  } = invisible ? prevProps : parameters;\n  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;\n  return {\n    badgeContent,\n    invisible,\n    max,\n    displayValue\n  };\n}\nexport default useBadge;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getBadgeUtilityClass(slot) {\n  return generateUtilityClass('MuiBadge', slot);\n}\nconst badgeClasses = generateUtilityClasses('MuiBadge', ['root', 'badge', 'dot', 'standard', 'anchorOriginTopRight', 'anchorOriginBottomRight', 'anchorOriginTopLeft', 'anchorOriginBottomLeft', 'invisible', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'overlapRectangular', 'overlapCircular',\n// TODO: v6 remove the overlap value from these class keys\n'anchorOriginTopLeftCircular', 'anchorOriginTopLeftRectangular', 'anchorOriginTopRightCircular', 'anchorOriginTopRightRectangular', 'anchorOriginBottomLeftCircular', 'anchorOriginBottomLeftRectangular', 'anchorOriginBottomRightCircular', 'anchorOriginBottomRightRectangular']);\nexport default badgeClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport usePreviousProps from '@mui/utils/usePreviousProps';\nimport composeClasses from '@mui/utils/composeClasses';\nimport useSlotProps from '@mui/utils/useSlotProps';\nimport useBadge from \"./useBadge.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport badgeClasses, { getBadgeUtilityClass } from \"./badgeClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RADIUS_STANDARD = 10;\nconst RADIUS_DOT = 4;\nconst useUtilityClasses = ownerState => {\n  const {\n    color,\n    anchorOrigin,\n    invisible,\n    overlap,\n    variant,\n    classes = {}\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    badge: ['badge', variant, invisible && 'invisible', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}${capitalize(overlap)}`, `overlap${capitalize(overlap)}`, color !== 'default' && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getBadgeUtilityClass, classes);\n};\nconst BadgeRoot = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  position: 'relative',\n  display: 'inline-flex',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  flexShrink: 0\n});\nconst BadgeBadge = styled('span', {\n  name: 'MuiBadge',\n  slot: 'Badge',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.badge, styles[ownerState.variant], styles[`anchorOrigin${capitalize(ownerState.anchorOrigin.vertical)}${capitalize(ownerState.anchorOrigin.horizontal)}${capitalize(ownerState.overlap)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`], ownerState.invisible && styles.invisible];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  justifyContent: 'center',\n  alignContent: 'center',\n  alignItems: 'center',\n  position: 'absolute',\n  boxSizing: 'border-box',\n  fontFamily: theme.typography.fontFamily,\n  fontWeight: theme.typography.fontWeightMedium,\n  fontSize: theme.typography.pxToRem(12),\n  minWidth: RADIUS_STANDARD * 2,\n  lineHeight: 1,\n  padding: '0 6px',\n  height: RADIUS_STANDARD * 2,\n  borderRadius: RADIUS_STANDARD,\n  zIndex: 1,\n  // Render the badge on top of potential ripples.\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.enteringScreen\n  }),\n  variants: [...Object.entries(theme.palette).filter(createSimplePaletteValueFilter(['contrastText'])).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      backgroundColor: (theme.vars || theme).palette[color].main,\n      color: (theme.vars || theme).palette[color].contrastText\n    }\n  })), {\n    props: {\n      variant: 'dot'\n    },\n    style: {\n      borderRadius: RADIUS_DOT,\n      height: RADIUS_DOT * 2,\n      minWidth: RADIUS_DOT * 2,\n      padding: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      right: 0,\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      top: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'rectangular',\n    style: {\n      bottom: 0,\n      left: 0,\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, -50%)',\n      transformOrigin: '100% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'right' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      right: '14%',\n      transform: 'scale(1) translate(50%, 50%)',\n      transformOrigin: '100% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(50%, 50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'top' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      top: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, -50%)',\n      transformOrigin: '0% 0%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, -50%)'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.anchorOrigin.vertical === 'bottom' && ownerState.anchorOrigin.horizontal === 'left' && ownerState.overlap === 'circular',\n    style: {\n      bottom: '14%',\n      left: '14%',\n      transform: 'scale(1) translate(-50%, 50%)',\n      transformOrigin: '0% 100%',\n      [`&.${badgeClasses.invisible}`]: {\n        transform: 'scale(0) translate(-50%, 50%)'\n      }\n    }\n  }, {\n    props: {\n      invisible: true\n    },\n    style: {\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeInOut,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    }\n  }]\n})));\nfunction getAnchorOrigin(anchorOrigin) {\n  return {\n    vertical: anchorOrigin?.vertical ?? 'top',\n    horizontal: anchorOrigin?.horizontal ?? 'right'\n  };\n}\nconst Badge = /*#__PURE__*/React.forwardRef(function Badge(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiBadge'\n  });\n  const {\n    anchorOrigin: anchorOriginProp,\n    className,\n    classes: classesProp,\n    component,\n    components = {},\n    componentsProps = {},\n    children,\n    overlap: overlapProp = 'rectangular',\n    color: colorProp = 'default',\n    invisible: invisibleProp = false,\n    max: maxProp = 99,\n    badgeContent: badgeContentProp,\n    slots,\n    slotProps,\n    showZero = false,\n    variant: variantProp = 'standard',\n    ...other\n  } = props;\n  const {\n    badgeContent,\n    invisible: invisibleFromHook,\n    max,\n    displayValue: displayValueFromHook\n  } = useBadge({\n    max: maxProp,\n    invisible: invisibleProp,\n    badgeContent: badgeContentProp,\n    showZero\n  });\n  const prevProps = usePreviousProps({\n    anchorOrigin: getAnchorOrigin(anchorOriginProp),\n    color: colorProp,\n    overlap: overlapProp,\n    variant: variantProp,\n    badgeContent: badgeContentProp\n  });\n  const invisible = invisibleFromHook || badgeContent == null && variantProp !== 'dot';\n  const {\n    color = colorProp,\n    overlap = overlapProp,\n    anchorOrigin: anchorOriginPropProp,\n    variant = variantProp\n  } = invisible ? prevProps : props;\n  const anchorOrigin = getAnchorOrigin(anchorOriginPropProp);\n  const displayValue = variant !== 'dot' ? displayValueFromHook : undefined;\n  const ownerState = {\n    ...props,\n    badgeContent,\n    invisible,\n    max,\n    displayValue,\n    showZero,\n    anchorOrigin,\n    color,\n    overlap,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // support both `slots` and `components` for backward compatibility\n  const RootSlot = slots?.root ?? components.Root ?? BadgeRoot;\n  const BadgeSlot = slots?.badge ?? components.Badge ?? BadgeBadge;\n  const rootSlotProps = slotProps?.root ?? componentsProps.root;\n  const badgeSlotProps = slotProps?.badge ?? componentsProps.badge;\n  const rootProps = useSlotProps({\n    elementType: RootSlot,\n    externalSlotProps: rootSlotProps,\n    externalForwardedProps: other,\n    additionalProps: {\n      ref,\n      as: component\n    },\n    ownerState,\n    className: clsx(rootSlotProps?.className, classes.root, className)\n  });\n  const badgeProps = useSlotProps({\n    elementType: BadgeSlot,\n    externalSlotProps: badgeSlotProps,\n    ownerState,\n    className: clsx(classes.badge, badgeSlotProps?.className)\n  });\n  return /*#__PURE__*/_jsxs(RootSlot, {\n    ...rootProps,\n    children: [children, /*#__PURE__*/_jsx(BadgeSlot, {\n      ...badgeProps,\n      children: displayValue\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Badge.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The anchor of the badge.\n   * @default {\n   *   vertical: 'top',\n   *   horizontal: 'right',\n   * }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['left', 'right']),\n    vertical: PropTypes.oneOf(['bottom', 'top'])\n  }),\n  /**\n   * The content rendered within the badge.\n   */\n  badgeContent: PropTypes.node,\n  /**\n   * The badge will be added relative to this node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Badge: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * If `true`, the badge is invisible.\n   * @default false\n   */\n  invisible: PropTypes.bool,\n  /**\n   * Max count to show.\n   * @default 99\n   */\n  max: PropTypes.number,\n  /**\n   * Wrapped shape the badge should overlap.\n   * @default 'rectangular'\n   */\n  overlap: PropTypes.oneOf(['circular', 'rectangular']),\n  /**\n   * Controls whether the badge is hidden when `badgeContent` is zero.\n   * @default false\n   */\n  showZero: PropTypes.bool,\n  /**\n   * The props used for each slot inside the Badge.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    badge: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Badge.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    badge: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'standard'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['dot', 'standard']), PropTypes.string])\n} : void 0;\nexport default Badge;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSwitchBaseUtilityClass(slot) {\n  return generateUtilityClass('PrivateSwitchBase', slot);\n}\nconst switchBaseClasses = generateUtilityClasses('PrivateSwitchBase', ['root', 'checked', 'disabled', 'input', 'edgeStart', 'edgeEnd']);\nexport default switchBaseClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useFormControl from \"../FormControl/useFormControl.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { getSwitchBaseUtilityClass } from \"./switchBaseClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    checked,\n    disabled,\n    edge\n  } = ownerState;\n  const slots = {\n    root: ['root', checked && 'checked', disabled && 'disabled', edge && `edge${capitalize(edge)}`],\n    input: ['input']\n  };\n  return composeClasses(slots, getSwitchBaseUtilityClass, classes);\n};\nconst SwitchBaseRoot = styled(ButtonBase)({\n  padding: 9,\n  borderRadius: '50%',\n  variants: [{\n    props: {\n      edge: 'start',\n      size: 'small'\n    },\n    style: {\n      marginLeft: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'start' && ownerState.size !== 'small',\n    style: {\n      marginLeft: -12\n    }\n  }, {\n    props: {\n      edge: 'end',\n      size: 'small'\n    },\n    style: {\n      marginRight: -3\n    }\n  }, {\n    props: ({\n      edge,\n      ownerState\n    }) => edge === 'end' && ownerState.size !== 'small',\n    style: {\n      marginRight: -12\n    }\n  }]\n});\nconst SwitchBaseInput = styled('input', {\n  shouldForwardProp: rootShouldForwardProp\n})({\n  cursor: 'inherit',\n  position: 'absolute',\n  opacity: 0,\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  margin: 0,\n  padding: 0,\n  zIndex: 1\n});\n\n/**\n * @ignore - internal component.\n */\nconst SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  const {\n    autoFocus,\n    checked: checkedProp,\n    checkedIcon,\n    className,\n    defaultChecked,\n    disabled: disabledProp,\n    disableFocusRipple = false,\n    edge = false,\n    icon,\n    id,\n    inputProps,\n    inputRef,\n    name,\n    onBlur,\n    onChange,\n    onFocus,\n    readOnly,\n    required = false,\n    tabIndex,\n    type,\n    value,\n    ...other\n  } = props;\n  const [checked, setCheckedState] = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  });\n  const muiFormControl = useFormControl();\n  const handleFocus = event => {\n    if (onFocus) {\n      onFocus(event);\n    }\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n  const handleBlur = event => {\n    if (onBlur) {\n      onBlur(event);\n    }\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n  const handleInputChange = event => {\n    // Workaround for https://github.com/facebook/react/issues/9023\n    if (event.nativeEvent.defaultPrevented) {\n      return;\n    }\n    const newChecked = event.target.checked;\n    setCheckedState(newChecked);\n    if (onChange) {\n      // TODO v6: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n  let disabled = disabledProp;\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n  const hasLabelFor = type === 'checkbox' || type === 'radio';\n  const ownerState = {\n    ...props,\n    checked,\n    disabled,\n    disableFocusRipple,\n    edge\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(SwitchBaseRoot, {\n    component: \"span\",\n    className: clsx(classes.root, className),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ownerState: ownerState,\n    ref: ref,\n    ...other,\n    children: [/*#__PURE__*/_jsx(SwitchBaseInput, {\n      autoFocus: autoFocus,\n      checked: checkedProp,\n      defaultChecked: defaultChecked,\n      className: classes.input,\n      disabled: disabled,\n      id: hasLabelFor ? id : undefined,\n      name: name,\n      onChange: handleInputChange,\n      readOnly: readOnly,\n      ref: inputRef,\n      required: required,\n      ownerState: ownerState,\n      tabIndex: tabIndex,\n      type: type,\n      ...(type === 'checkbox' && value === undefined ? {} : {\n        value\n      }),\n      ...inputProps\n    }), checked ? checkedIcon : icon]\n  });\n});\n\n// NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element is focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   * @default false\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default SwitchBase;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary', 'sizeSmall', 'sizeMedium']);\nexport default checkboxClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport refType from '@mui/utils/refType';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport SwitchBase from \"../internal/SwitchBase.js\";\nimport CheckBoxOutlineBlankIcon from \"../internal/svg-icons/CheckBoxOutlineBlank.js\";\nimport CheckBoxIcon from \"../internal/svg-icons/CheckBox.js\";\nimport IndeterminateCheckBoxIcon from \"../internal/svg-icons/IndeterminateCheckBox.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport rootShouldForwardProp from \"../styles/rootShouldForwardProp.js\";\nimport checkboxClasses, { getCheckboxUtilityClass } from \"./checkboxClasses.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`, `size${capitalize(size)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return {\n    ...classes,\n    // forward the disabled and checked classes to the SwitchBase\n    ...composedClasses\n  };\n};\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, styles[`size${capitalize(ownerState.size)}`], ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  color: (theme.vars || theme).palette.text.secondary,\n  variants: [{\n    props: {\n      color: 'default',\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.activeChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.action.active, theme.palette.action.hoverOpacity)\n      }\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color,\n      disableRipple: false\n    },\n    style: {\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n      }\n    }\n  })), ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n        color: (theme.vars || theme).palette[color].main\n      },\n      [`&.${checkboxClasses.disabled}`]: {\n        color: (theme.vars || theme).palette.action.disabled\n      }\n    }\n  })), {\n    // Should be last to override other colors\n    props: {\n      disableRipple: false\n    },\n    style: {\n      // Reset on touch devices, it doesn't add specificity\n      '&:hover': {\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }\n  }]\n})));\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium',\n    disableRipple = false,\n    className,\n    ...other\n  } = props;\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  const ownerState = {\n    ...props,\n    disableRipple,\n    color,\n    indeterminate,\n    size\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, {\n    type: \"checkbox\",\n    inputProps: {\n      'data-indeterminate': indeterminate,\n      ...inputProps\n    },\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize ?? size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize ?? size\n    }),\n    ownerState: ownerState,\n    ref: ref,\n    className: clsx(classes.root, className),\n    disableRipple: disableRipple,\n    ...other,\n    classes: classes\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getDividerUtilityClass } from \"./dividerClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin',\n  variants: [{\n    props: {\n      absolute: true\n    },\n    style: {\n      position: 'absolute',\n      bottom: 0,\n      left: 0,\n      width: '100%'\n    }\n  }, {\n    props: {\n      light: true\n    },\n    style: {\n      borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n    }\n  }, {\n    props: {\n      variant: 'inset'\n    },\n    style: {\n      marginLeft: 72\n    }\n  }, {\n    props: {\n      variant: 'middle',\n      orientation: 'horizontal'\n    },\n    style: {\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    }\n  }, {\n    props: {\n      variant: 'middle',\n      orientation: 'vertical'\n    },\n    style: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1)\n    }\n  }, {\n    props: {\n      orientation: 'vertical'\n    },\n    style: {\n      height: '100%',\n      borderBottomWidth: 0,\n      borderRightWidth: 'thin'\n    }\n  }, {\n    props: {\n      flexItem: true\n    },\n    style: {\n      alignSelf: 'stretch',\n      height: 'auto'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !!ownerState.children,\n    style: {\n      display: 'flex',\n      textAlign: 'center',\n      border: 0,\n      borderTopStyle: 'solid',\n      borderLeftStyle: 'solid',\n      '&::before, &::after': {\n        content: '\"\"',\n        alignSelf: 'center'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.children && ownerState.orientation !== 'vertical',\n    style: {\n      '&::before, &::after': {\n        width: '100%',\n        borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n        borderTopStyle: 'inherit'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.orientation === 'vertical' && ownerState.children,\n    style: {\n      flexDirection: 'column',\n      '&::before, &::after': {\n        height: '100%',\n        borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n        borderLeftStyle: 'inherit'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical',\n    style: {\n      '&::before': {\n        width: '90%'\n      },\n      '&::after': {\n        width: '10%'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical',\n    style: {\n      '&::before': {\n        width: '10%'\n      },\n      '&::after': {\n        width: '90%'\n      }\n    }\n  }]\n})));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`,\n  whiteSpace: 'nowrap',\n  variants: [{\n    props: {\n      orientation: 'vertical'\n    },\n    style: {\n      paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n      paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n    }\n  }]\n})));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n    absolute = false,\n    children,\n    className,\n    orientation = 'horizontal',\n    component = children || orientation === 'vertical' ? 'div' : 'hr',\n    flexItem = false,\n    light = false,\n    role = component !== 'hr' ? 'separator' : undefined,\n    textAlign = 'center',\n    variant = 'fullWidth',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState,\n    \"aria-orientation\": role === 'separator' && (component !== 'hr' || orientation === 'vertical') ? orientation : undefined,\n    ...other,\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  });\n});\n\n/**\n * The following flag is used to ensure that this component isn't tabbable i.e.\n * does not get highlight/focus inside of MUI List.\n */\nif (Divider) {\n  Divider.muiSkipListHighlight = true;\n}\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getTooltipUtilityClass(slot) {\n  return generateUtilityClass('MuiTooltip', slot);\n}\nconst tooltipClasses = generateUtilityClasses('MuiTooltip', ['popper', 'popperInteractive', 'popperArrow', 'popperClose', 'tooltip', 'tooltipArrow', 'touch', 'tooltipPlacementLeft', 'tooltipPlacementRight', 'tooltipPlacementTop', 'tooltipPlacementBottom', 'arrow']);\nexport default tooltipClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useTimeout, { Timeout } from '@mui/utils/useTimeout';\nimport elementAcceptingRef from '@mui/utils/elementAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport isFocusVisible from '@mui/utils/isFocusVisible';\nimport appendOwnerState from '@mui/utils/appendOwnerState';\nimport getReactElementRef from '@mui/utils/getReactElementRef';\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport Grow from \"../Grow/index.js\";\nimport Popper from \"../Popper/index.js\";\nimport useEventCallback from \"../utils/useEventCallback.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport useId from \"../utils/useId.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport tooltipClasses, { getTooltipUtilityClass } from \"./tooltipClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableInteractive,\n    arrow,\n    touch,\n    placement\n  } = ownerState;\n  const slots = {\n    popper: ['popper', !disableInteractive && 'popperInteractive', arrow && 'popperArrow'],\n    tooltip: ['tooltip', arrow && 'tooltipArrow', touch && 'touch', `tooltipPlacement${capitalize(placement.split('-')[0])}`],\n    arrow: ['arrow']\n  };\n  return composeClasses(slots, getTooltipUtilityClass, classes);\n};\nconst TooltipPopper = styled(Popper, {\n  name: 'MuiTooltip',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.popper, !ownerState.disableInteractive && styles.popperInteractive, ownerState.arrow && styles.popperArrow, !ownerState.open && styles.popperClose];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  zIndex: (theme.vars || theme).zIndex.tooltip,\n  pointerEvents: 'none',\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.disableInteractive,\n    style: {\n      pointerEvents: 'auto'\n    }\n  }, {\n    props: ({\n      open\n    }) => !open,\n    style: {\n      pointerEvents: 'none'\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.arrow,\n    style: {\n      [`&[data-popper-placement*=\"bottom\"] .${tooltipClasses.arrow}`]: {\n        top: 0,\n        marginTop: '-0.71em',\n        '&::before': {\n          transformOrigin: '0 100%'\n        }\n      },\n      [`&[data-popper-placement*=\"top\"] .${tooltipClasses.arrow}`]: {\n        bottom: 0,\n        marginBottom: '-0.71em',\n        '&::before': {\n          transformOrigin: '100% 0'\n        }\n      },\n      [`&[data-popper-placement*=\"right\"] .${tooltipClasses.arrow}`]: {\n        height: '1em',\n        width: '0.71em',\n        '&::before': {\n          transformOrigin: '100% 100%'\n        }\n      },\n      [`&[data-popper-placement*=\"left\"] .${tooltipClasses.arrow}`]: {\n        height: '1em',\n        width: '0.71em',\n        '&::before': {\n          transformOrigin: '0 0'\n        }\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.arrow && !ownerState.isRtl,\n    style: {\n      [`&[data-popper-placement*=\"right\"] .${tooltipClasses.arrow}`]: {\n        left: 0,\n        marginLeft: '-0.71em'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.arrow && !!ownerState.isRtl,\n    style: {\n      [`&[data-popper-placement*=\"right\"] .${tooltipClasses.arrow}`]: {\n        right: 0,\n        marginRight: '-0.71em'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.arrow && !ownerState.isRtl,\n    style: {\n      [`&[data-popper-placement*=\"left\"] .${tooltipClasses.arrow}`]: {\n        right: 0,\n        marginRight: '-0.71em'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.arrow && !!ownerState.isRtl,\n    style: {\n      [`&[data-popper-placement*=\"left\"] .${tooltipClasses.arrow}`]: {\n        left: 0,\n        marginLeft: '-0.71em'\n      }\n    }\n  }]\n})));\nconst TooltipTooltip = styled('div', {\n  name: 'MuiTooltip',\n  slot: 'Tooltip',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.tooltip, ownerState.touch && styles.touch, ownerState.arrow && styles.tooltipArrow, styles[`tooltipPlacement${capitalize(ownerState.placement.split('-')[0])}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  backgroundColor: theme.vars ? theme.vars.palette.Tooltip.bg : alpha(theme.palette.grey[700], 0.92),\n  borderRadius: (theme.vars || theme).shape.borderRadius,\n  color: (theme.vars || theme).palette.common.white,\n  fontFamily: theme.typography.fontFamily,\n  padding: '4px 8px',\n  fontSize: theme.typography.pxToRem(11),\n  maxWidth: 300,\n  margin: 2,\n  wordWrap: 'break-word',\n  fontWeight: theme.typography.fontWeightMedium,\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"left\"] &`]: {\n    transformOrigin: 'right center'\n  },\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"right\"] &`]: {\n    transformOrigin: 'left center'\n  },\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"top\"] &`]: {\n    transformOrigin: 'center bottom',\n    marginBottom: '14px'\n  },\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"bottom\"] &`]: {\n    transformOrigin: 'center top',\n    marginTop: '14px'\n  },\n  variants: [{\n    props: ({\n      ownerState\n    }) => ownerState.arrow,\n    style: {\n      position: 'relative',\n      margin: 0\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.touch,\n    style: {\n      padding: '8px 16px',\n      fontSize: theme.typography.pxToRem(14),\n      lineHeight: `${round(16 / 14)}em`,\n      fontWeight: theme.typography.fontWeightRegular\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.isRtl,\n    style: {\n      [`.${tooltipClasses.popper}[data-popper-placement*=\"left\"] &`]: {\n        marginRight: '14px'\n      },\n      [`.${tooltipClasses.popper}[data-popper-placement*=\"right\"] &`]: {\n        marginLeft: '14px'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !ownerState.isRtl && ownerState.touch,\n    style: {\n      [`.${tooltipClasses.popper}[data-popper-placement*=\"left\"] &`]: {\n        marginRight: '24px'\n      },\n      [`.${tooltipClasses.popper}[data-popper-placement*=\"right\"] &`]: {\n        marginLeft: '24px'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !!ownerState.isRtl,\n    style: {\n      [`.${tooltipClasses.popper}[data-popper-placement*=\"left\"] &`]: {\n        marginLeft: '14px'\n      },\n      [`.${tooltipClasses.popper}[data-popper-placement*=\"right\"] &`]: {\n        marginRight: '14px'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => !!ownerState.isRtl && ownerState.touch,\n    style: {\n      [`.${tooltipClasses.popper}[data-popper-placement*=\"left\"] &`]: {\n        marginLeft: '24px'\n      },\n      [`.${tooltipClasses.popper}[data-popper-placement*=\"right\"] &`]: {\n        marginRight: '24px'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.touch,\n    style: {\n      [`.${tooltipClasses.popper}[data-popper-placement*=\"top\"] &`]: {\n        marginBottom: '24px'\n      }\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.touch,\n    style: {\n      [`.${tooltipClasses.popper}[data-popper-placement*=\"bottom\"] &`]: {\n        marginTop: '24px'\n      }\n    }\n  }]\n})));\nconst TooltipArrow = styled('span', {\n  name: 'MuiTooltip',\n  slot: 'Arrow',\n  overridesResolver: (props, styles) => styles.arrow\n})(memoTheme(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  position: 'absolute',\n  width: '1em',\n  height: '0.71em' /* = width / sqrt(2) = (length of the hypotenuse) */,\n  boxSizing: 'border-box',\n  color: theme.vars ? theme.vars.palette.Tooltip.bg : alpha(theme.palette.grey[700], 0.9),\n  '&::before': {\n    content: '\"\"',\n    margin: 'auto',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'currentColor',\n    transform: 'rotate(45deg)'\n  }\n})));\nlet hystersisOpen = false;\nconst hystersisTimer = new Timeout();\nlet cursorPosition = {\n  x: 0,\n  y: 0\n};\nexport function testReset() {\n  hystersisOpen = false;\n  hystersisTimer.clear();\n}\nfunction composeEventHandler(handler, eventHandler) {\n  return (event, ...params) => {\n    if (eventHandler) {\n      eventHandler(event, ...params);\n    }\n    handler(event, ...params);\n  };\n}\n\n// TODO v6: Remove PopperComponent, PopperProps, TransitionComponent and TransitionProps.\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiTooltip'\n  });\n  const {\n    arrow = false,\n    children: childrenProp,\n    classes: classesProp,\n    components = {},\n    componentsProps = {},\n    describeChild = false,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableInteractive: disableInteractiveProp = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    followCursor = false,\n    id: idProp,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent: PopperComponentProp,\n    PopperProps = {},\n    slotProps = {},\n    slots = {},\n    title,\n    TransitionComponent: TransitionComponentProp = Grow,\n    TransitionProps,\n    ...other\n  } = props;\n\n  // to prevent runtime errors, developers will need to provide a child as a React element anyway.\n  const children = /*#__PURE__*/React.isValidElement(childrenProp) ? childrenProp : /*#__PURE__*/_jsx(\"span\", {\n    children: childrenProp\n  });\n  const theme = useTheme();\n  const isRtl = useRtl();\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const disableInteractive = disableInteractiveProp || followCursor;\n  const closeTimer = useTimeout();\n  const enterTimer = useTimeout();\n  const leaveTimer = useTimeout();\n  const touchTimer = useTimeout();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n  if (process.env.NODE_ENV !== 'production') {\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- process.env never changes\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined);\n\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- process.env never changes\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['MUI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n  const id = useId(idProp);\n  const prevUserSelect = React.useRef();\n  const stopTouchInteraction = useEventCallback(() => {\n    if (prevUserSelect.current !== undefined) {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      prevUserSelect.current = undefined;\n    }\n    touchTimer.clear();\n  });\n  React.useEffect(() => stopTouchInteraction, [stopTouchInteraction]);\n  const handleOpen = event => {\n    hystersisTimer.clear();\n    hystersisOpen = true;\n\n    // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n    setOpenState(true);\n    if (onOpen && !open) {\n      onOpen(event);\n    }\n  };\n  const handleClose = useEventCallback(\n  /**\n   * @param {React.SyntheticEvent | Event} event\n   */\n  event => {\n    hystersisTimer.start(800 + leaveDelay, () => {\n      hystersisOpen = false;\n    });\n    setOpenState(false);\n    if (onClose && open) {\n      onClose(event);\n    }\n    closeTimer.start(theme.transitions.duration.shortest, () => {\n      ignoreNonTouchEvents.current = false;\n    });\n  });\n  const handleMouseOver = event => {\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    }\n\n    // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n    enterTimer.clear();\n    leaveTimer.clear();\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      enterTimer.start(hystersisOpen ? enterNextDelay : enterDelay, () => {\n        handleOpen(event);\n      });\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleMouseLeave = event => {\n    enterTimer.clear();\n    leaveTimer.start(leaveDelay, () => {\n      handleClose(event);\n    });\n  };\n  const [, setChildIsFocusVisible] = React.useState(false);\n  const handleBlur = event => {\n    if (!isFocusVisible(event.target)) {\n      setChildIsFocusVisible(false);\n      handleMouseLeave(event);\n    }\n  };\n  const handleFocus = event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n    if (isFocusVisible(event.target)) {\n      setChildIsFocusVisible(true);\n      handleMouseOver(event);\n    }\n  };\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    leaveTimer.clear();\n    closeTimer.clear();\n    stopTouchInteraction();\n    prevUserSelect.current = document.body.style.WebkitUserSelect;\n    // Prevent iOS text selection on long-tap.\n    document.body.style.WebkitUserSelect = 'none';\n    touchTimer.start(enterTouchDelay, () => {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      handleMouseOver(event);\n    });\n  };\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n    stopTouchInteraction();\n    leaveTimer.start(leaveTouchDelay, () => {\n      handleClose(event);\n    });\n  };\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n    function handleKeyDown(nativeEvent) {\n      if (nativeEvent.key === 'Escape') {\n        handleClose(nativeEvent);\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose, open]);\n  const handleRef = useForkRef(getReactElementRef(children), setChildNode, ref);\n\n  // There is no point in displaying an empty tooltip.\n  // So we exclude all falsy values, except 0, which is valid.\n  if (!title && title !== 0) {\n    open = false;\n  }\n  const popperRef = React.useRef();\n  const handleMouseMove = event => {\n    const childrenProps = children.props;\n    if (childrenProps.onMouseMove) {\n      childrenProps.onMouseMove(event);\n    }\n    cursorPosition = {\n      x: event.clientX,\n      y: event.clientY\n    };\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  };\n  const nameOrDescProps = {};\n  const titleIsString = typeof title === 'string';\n  if (describeChild) {\n    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;\n    nameOrDescProps['aria-describedby'] = open ? id : null;\n  } else {\n    nameOrDescProps['aria-label'] = titleIsString ? title : null;\n    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;\n  }\n  const childrenProps = {\n    ...nameOrDescProps,\n    ...other,\n    ...children.props,\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef,\n    ...(followCursor ? {\n      onMouseMove: handleMouseMove\n    } : {})\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    childrenProps['data-mui-internal-clone-element'] = true;\n\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n    // eslint-disable-next-line react-hooks/rules-of-hooks -- process.env never changes\n    React.useEffect(() => {\n      if (childNode && !childNode.getAttribute('data-mui-internal-clone-element')) {\n        console.error(['MUI: The `children` component of the Tooltip is not forwarding its props correctly.', 'Please make sure that props are spread on the same element that the ref is applied to.'].join('\\n'));\n      }\n    }, [childNode]);\n  }\n  const interactiveWrapperListeners = {};\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);\n    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onMouseOver = handleMouseOver;\n      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;\n    }\n  }\n  if (!disableFocusListener) {\n    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);\n    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onFocus = handleFocus;\n      interactiveWrapperListeners.onBlur = handleBlur;\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['MUI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n  const popperOptions = React.useMemo(() => {\n    let tooltipModifiers = [{\n      name: 'arrow',\n      enabled: Boolean(arrowRef),\n      options: {\n        element: arrowRef,\n        padding: 4\n      }\n    }];\n    if (PopperProps.popperOptions?.modifiers) {\n      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);\n    }\n    return {\n      ...PopperProps.popperOptions,\n      modifiers: tooltipModifiers\n    };\n  }, [arrowRef, PopperProps]);\n  const ownerState = {\n    ...props,\n    isRtl,\n    arrow,\n    disableInteractive,\n    placement,\n    PopperComponentProp,\n    touch: ignoreNonTouchEvents.current\n  };\n  const classes = useUtilityClasses(ownerState);\n  const PopperComponent = slots.popper ?? components.Popper ?? TooltipPopper;\n  const TransitionComponent = slots.transition ?? components.Transition ?? TransitionComponentProp ?? Grow;\n  const TooltipComponent = slots.tooltip ?? components.Tooltip ?? TooltipTooltip;\n  const ArrowComponent = slots.arrow ?? components.Arrow ?? TooltipArrow;\n  const popperProps = appendOwnerState(PopperComponent, {\n    ...PopperProps,\n    ...(slotProps.popper ?? componentsProps.popper),\n    className: clsx(classes.popper, PopperProps?.className, (slotProps.popper ?? componentsProps.popper)?.className)\n  }, ownerState);\n  const transitionProps = appendOwnerState(TransitionComponent, {\n    ...TransitionProps,\n    ...(slotProps.transition ?? componentsProps.transition)\n  }, ownerState);\n  const tooltipProps = appendOwnerState(TooltipComponent, {\n    ...(slotProps.tooltip ?? componentsProps.tooltip),\n    className: clsx(classes.tooltip, (slotProps.tooltip ?? componentsProps.tooltip)?.className)\n  }, ownerState);\n  const tooltipArrowProps = appendOwnerState(ArrowComponent, {\n    ...(slotProps.arrow ?? componentsProps.arrow),\n    className: clsx(classes.arrow, (slotProps.arrow ?? componentsProps.arrow)?.className)\n  }, ownerState);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/_jsx(PopperComponent, {\n      as: PopperComponentProp ?? Popper,\n      placement: placement,\n      anchorEl: followCursor ? {\n        getBoundingClientRect: () => ({\n          top: cursorPosition.y,\n          left: cursorPosition.x,\n          right: cursorPosition.x,\n          bottom: cursorPosition.y,\n          width: 0,\n          height: 0\n        })\n      } : childNode,\n      popperRef: popperRef,\n      open: childNode ? open : false,\n      id: id,\n      transition: true,\n      ...interactiveWrapperListeners,\n      ...popperProps,\n      popperOptions: popperOptions,\n      children: ({\n        TransitionProps: TransitionPropsInner\n      }) => /*#__PURE__*/_jsx(TransitionComponent, {\n        timeout: theme.transitions.duration.shorter,\n        ...TransitionPropsInner,\n        ...transitionProps,\n        children: /*#__PURE__*/_jsxs(TooltipComponent, {\n          ...tooltipProps,\n          children: [title, arrow ? /*#__PURE__*/_jsx(ArrowComponent, {\n            ...tooltipArrowProps,\n            ref: setArrowRef\n          }) : null]\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   * @default false\n   */\n  arrow: PropTypes.bool,\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated use the `slots` prop instead. This prop will be removed in v7. [How to migrate](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/).\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Arrow: PropTypes.elementType,\n    Popper: PropTypes.elementType,\n    Tooltip: PropTypes.elementType,\n    Transition: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated use the `slotProps` prop instead. This prop will be removed in v7. [How to migrate](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/).\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    arrow: PropTypes.object,\n    popper: PropTypes.object,\n    tooltip: PropTypes.object,\n    transition: PropTypes.object\n  }),\n  /**\n   * Set to `true` if the `title` acts as an accessible description.\n   * By default the `title` acts as an accessible label for the child.\n   * @default false\n   */\n  describeChild: PropTypes.bool,\n  /**\n   * Do not respond to focus-visible events.\n   * @default false\n   */\n  disableFocusListener: PropTypes.bool,\n  /**\n   * Do not respond to hover events.\n   * @default false\n   */\n  disableHoverListener: PropTypes.bool,\n  /**\n   * Makes a tooltip not interactive, i.e. it will close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   * @default false\n   */\n  disableInteractive: PropTypes.bool,\n  /**\n   * Do not respond to long press touch events.\n   * @default false\n   */\n  disableTouchListener: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   * @default 100\n   */\n  enterDelay: PropTypes.number,\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   * @default 0\n   */\n  enterNextDelay: PropTypes.number,\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   * @default 700\n   */\n  enterTouchDelay: PropTypes.number,\n  /**\n   * If `true`, the tooltip follow the cursor over the wrapped element.\n   * @default false\n   */\n  followCursor: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   * @default 0\n   */\n  leaveDelay: PropTypes.number,\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   * @default 1500\n   */\n  leaveTouchDelay: PropTypes.number,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * Tooltip placement.\n   * @default 'bottom'\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The component used for the popper.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Popper`](https://mui.com/material-ui/api/popper/) element.\n   * @default {}\n   */\n  PopperProps: PropTypes.object,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    arrow: PropTypes.object,\n    popper: PropTypes.object,\n    tooltip: PropTypes.object,\n    transition: PropTypes.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    arrow: PropTypes.elementType,\n    popper: PropTypes.elementType,\n    tooltip: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Tooltip title. Zero-length titles string, undefined, null and false are never displayed.\n   */\n  title: PropTypes.node,\n  /**\n   * The component used for the transition.\n   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Tooltip;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUIBadge from '@mui/material/Badge';\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUIDivider from '@mui/material/Divider';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseBadge: MUIBadge,\n  baseCheckbox: MUICheckbox,\n  baseDivider: MUIDivider,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridSelector } from \"../../hooks/index.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const labelId = useId();\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const open = preferencePanel.open && preferencePanel.labelId === labelId;\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": open,\n    \"aria-controls\": open ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButton };","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridDetailPanels(_) {\n  return null;\n}","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function GridPinnedRows(_) {\n  return null;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { GridColumnsManagement } from \"../columnsManagement/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(GridColumnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../constants/dataGridPropsDefaultValues.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid',\n  unstable_listView: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridBody, GridFooterPlaceholder, GridHeader, GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nlet propValidators;\nif (process.env.NODE_ENV !== 'production') {\n  propValidators = [...propValidatorsDataGrid,\n  // Only validate in MIT version\n  props => props.columns && props.columns.some(column => column.resizable) && [`MUI X: \\`column.resizable = true\\` is not a valid prop.`, 'Column resizing is not available in the MIT version.', '', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n') || undefined];\n}\nconst DataGridRaw = /*#__PURE__*/React.forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidators);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsxs(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx,\n      ref: ref\n    }, props.forwardedProps, {\n      children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {}), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool\n};","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};","import React, { useRef, MutableRefObject } from 'react';\nimport { DataGrid, GridColDef, GridToolbarContainer, GridToolbarFilterButton, gridClasses } from '@mui/x-data-grid';\nimport { useLocation } from '@gatsbyjs/reach-router';\nimport queryString from 'query-string';\nimport { fetchReleaseNotesForVersion, useOnScreen, ReleaseNoteAPIResponse } from '../../hooks';\nimport './ReleaseNotesRender.scss';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport const fetchTitle = (priority) => {\n  let title\n  switch (priority) {\n    case '1':\n      title = 'P1 - Blocks development and/or testing work, production could not run.';\n      break;\n    case '2':\n      title = 'P2 - Crashes, loss of data, severe memory leak.';\n      break;\n    case '3':\n      title = 'P3 - Major loss of function.';\n      break;\n    case '4':\n      title = 'P4 - Minor loss of function, or other problem where easy workaround is present.';\n      break;\n    case '5':\n      title = 'P5 - Cosmetic problem like misspelt words or misaligned text.';\n      break;\n    case '6':\n      title = 'This issue is not publicly visible.'\n  }\n  return title;\n};\n\nexport const sortReleaseNotesBy = (releaseNotes: ReleaseNoteAPIResponse) => {\n  // issues/1508: Should initially be sorted by (a) priority then (b) component.\n  if(releaseNotes && Array.isArray(releaseNotes.release_notes)) {\n      releaseNotes.release_notes = [...releaseNotes.release_notes].sort((v1, v2) => {\n          let c = 0;\n          if(v1.priority && v2.priority) {\n              c = v1.priority.localeCompare(v2.priority);\n          }\n          if(c === 0 && v1.component && v2.component) {\n              c = v1.component.localeCompare(v2.component);\n          }\n          return c;\n      });\n  }\n  return releaseNotes;\n};\n\nconst CustomToolbar: React.FunctionComponent<{\n  setFilterButtonEl: React.Dispatch<React.SetStateAction<HTMLButtonElement | null>>;\n}> = ({ setFilterButtonEl }) => (\n  <GridToolbarContainer>\n    <GridToolbarFilterButton ref={setFilterButtonEl} />\n  </GridToolbarContainer>\n);\n\nconst priorityValueOptions = [];\nconst typeValueOptions = [];\nconst componentValueOptions = [];\n\nconst columns: GridColDef[] = [\n  {\n    field: 'priority',\n    headerName: 'Priority',\n    type: 'singleSelect',\n    valueOptions: priorityValueOptions,\n    width: 100,\n    renderCell: (params) => {\n      const title = fetchTitle(params.value);\n      return (\n        // check if params.value is defined, if not, return an empty string\n        <span title={title} className={`badge bg-secondary priority-${params.value}`}>{params.value && params.value !== '6' ? `P${params.value}` : 'P?'}</span>\n      )\n    },\n  },\n  {\n    field: 'type',\n    headerName: 'Type',\n    type: 'singleSelect',\n    valueOptions: typeValueOptions,\n    width: 100,\n    sortable: false,\n    renderCell: (params) => (\n      <span>{params.value ? params.value : 'Hidden'}</span>\n    )\n  },\n  {\n    field: 'component',\n    headerName: 'Component',\n    type: 'singleSelect',\n    valueOptions: componentValueOptions,\n    width: 150,\n    sortable: false\n  },\n  {\n    field: 'id',\n    headerName: 'Issue',\n    width: 150,\n    sortable: false,\n    renderCell: (params) => (\n      <a target='_blank' rel='noopener noreferrer' href={params.row.link}>{params.value}</a>\n    ),\n  },\n  { field: 'title', headerName: 'Title', width: 800, sortable: false },\n];\n\nconst ReleaseNotesRender = (): null | JSX.Element => {\n  const version = queryString.parse(useLocation().search, {decode: false}).version;\n\n  const ref = useRef<HTMLDivElement | null>(null);\n  const isVisible = useOnScreen(ref as MutableRefObject<Element>, true);\n\n  const releaseNoteDataBag = fetchReleaseNotesForVersion(isVisible, version, sortReleaseNotesBy);\n  const releaseNotes = releaseNoteDataBag ? releaseNoteDataBag.releaseNoteAPIResponse : null;\n  const releaseNotesVersion = releaseNotes ? releaseNotes.release_name : null;\n\n  if(releaseNotes && Array.isArray(releaseNotes.release_notes)) {\n    let priorities: string[] = [];\n    let types: string[] = [];\n    let components: string[] = [];\n\n    releaseNotes.release_notes.forEach(release_note => {\n      // Set all priorities set as undefined to '?' to avoid errors\n      if (release_note.priority === undefined) {\n        release_note.priority = '6';\n      }\n\n      if(release_note.priority && priorities.indexOf(release_note.priority) < 0) priorities.push(release_note.priority);\n      if(release_note.type && types.indexOf(release_note.type) < 0) types.push(release_note.type);\n      if(release_note.component && components.indexOf(release_note.component) < 0) components.push(release_note.component);\n    });\n\n    priorityValueOptions.splice(0);\n    Array.prototype.push.apply(priorityValueOptions, priorities.sort((a, b) => a.localeCompare(b)));\n    typeValueOptions.splice(0);\n    Array.prototype.push.apply(typeValueOptions, types.sort((a, b) => a.localeCompare(b)));\n    componentValueOptions.splice(0);\n    Array.prototype.push.apply(componentValueOptions, components.sort((a, b) => a.localeCompare(b)));\n  }\n\n  interface FilterItem {\n    field: string;\n    operator: string;\n    value: string;\n  }\n\n  // Set type to 'Enhancement' by default if version matches jdk-xx+xx\n  const regex = /^jdk-(2\\d|\\d{3,})\\+\\d+$/;\n  let filterItems: FilterItem[] = [];\n  if (releaseNotesVersion?.toString && regex.test(releaseNotesVersion.toString())) {\n    filterItems.push(\n      {\n        field: 'type',\n        operator: 'is',\n        value: 'Enhancement'\n      }\n    )\n  }\n\n  const totalP1 = releaseNotes?.release_notes?.filter((note) => note.priority === '1').length;\n\n  return (\n\t  <div ref={ref} className='text-center'>\n    <h2>{releaseNotesVersion}</h2>\n      <div className='pt-3' style={{ display: 'flex', height: '100%' }}>\n        {!releaseNoteDataBag ? <div style={{ flexGrow: 1 }}><CircularProgress aria-label='loading spinner' /></div> :\n        (<div style={{ flexGrow: 1 }}>\n          {!releaseNotesVersion || releaseNoteDataBag?.isValid === false ? (\n            <>\n            <h2>Oops... We couldn't find those release notes</h2>\n            <span>Please ensure that you have a specified a version using the version URL parameter: <code>?version=x.x.x</code></span>\n            </>\n          ) : (\n            <>\n              <p>This section organizes the changes in the selected update release by the main component under which each issue is filed.</p>\n              {version !== releaseNotesVersion && \n              <p><strong>NOTE:</strong> These are the release notes for the latest LTS version. If you need a different version, please visit the <a href='/temurin/releases/'>download page</a> to select another one.</p>\n              }\n              <p><strong>{`The total number of fixes marked as P1 is: ${totalP1}`}</strong></p>\n              <DataGrid\n                aria-label='Release Notes'\n                autoHeight\n                rows={releaseNotes && releaseNotes.release_notes ? releaseNotes.release_notes : []}\n                loading={releaseNotes === null}\n                columns={columns}\n                initialState={{\n                  pagination: {\n                    paginationModel: {\n                      pageSize: 20\n                    }\n                  },\n                  filter: {\n                    filterModel: {\n                      items: filterItems\n                    }\n                  },\n                  sorting: {\n                    sortModel: [{ field: 'priority', sort: 'asc' }],\n                  },\n                }}\n                sortingOrder={['desc', 'asc']}\n                pageSizeOptions={[20, 50, 75]}\n                pagination\n                isRowSelectable={() => false}\n                slots={{\n                  toolbar: CustomToolbar,\n                }}\n                getRowHeight={() => 'auto'}\n                sx={{\n                  [`& .${gridClasses.cell}`]: {\n                    py: 1,\n                  },\n                }}\n              />\n            </>\n          )}\n        </div>)}\n      </div>\n    </div>\n  );\n };\n\nexport default ReleaseNotesRender;\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport { Trans } from 'gatsby-plugin-react-i18next';\n\nimport Layout from '../../components/Layout'\nimport Seo from '../../components/Seo'\nimport ReleaseNotesRender from '../../components/ReleaseNotesRender'\n\nconst ReleaseNotesPage = () => (\n  <Layout>\n    <section className='py-5 text-center container-xl'>\n      <h1 className='fw-light'><Trans>Release Notes</Trans></h1>\n      <ReleaseNotesRender />\n    </section>\n  </Layout>\n)\n\nexport default ReleaseNotesPage\n\nexport const Head = () => (\n  <Seo title='Release Notes' />\n)\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`"],"names":["getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","SIZE","circularRotateKeyframe","circularDashKeyframe","rotateAnimation","dashAnimation","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","memoTheme","theme","display","variants","style","transition","transitions","create","animation","Object","entries","palette","filter","createSimplePaletteValueFilter","map","vars","main","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","stroke","strokeDasharray","strokeDashoffset","inProps","ref","className","size","thickness","value","other","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","width","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","d","getDataGridUtilityClass","gridClasses","GridRootPropsContext","undefined","useGridRootProps","contextValue","Error","_excluded","GridToolbarContainerRoot","_","toolbarContainer","alignItems","flexWrap","gap","spacing","padding","GridToolbarContainer","NOT_FOUND","Symbol","assertIsFunction","func","errorMessage","TypeError","ensureIsArray","item","Array","isArray","getDependencies","createSelectorArgs","dependencies","array","every","itemTypes","join","assertIsArrayOfFunctions","getPrototypeOf","referenceEqualityCheck","a","b","createCacheKeyComparator","equalityCheck","prev","next","length","i","lruMemoize","equalityCheckOrOptions","providedOptions","maxSize","resultEqualityCheck","comparator","resultsCount","cache","equals","entry","get","key","put","getEntries","clear","createSingletonCache","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","resetResultsCount","Ref","WeakRef","constructor","this","deref","UNTERMINATED","TERMINATED","createCacheNode","s","v","o","p","weakMapMemoize","options","fnNode","lastResult","cacheNode","l","arg","objectCache","WeakMap","objectNode","set","primitiveCache","Map","primitiveNode","terminatedNode","result","lastResultValue","createSelectorCreator","memoizeOrOptions","memoizeOptionsFromArgs","createSelectorCreatorOptions","memoize","memoizeOptions","createSelector2","recomputations","dependencyRecomputations","directlyPassedOptions","resultFunc","combinedOptions","argsMemoize","argsMemoizeOptions","devModeChecks","finalMemoizeOptions","finalArgsMemoizeOptions","memoizedResultFunc","selector","inputSelectorResults","inputSelectorArgs","push","collectInputSelectorResults","assign","resetDependencyRecomputations","resetRecomputations","withTypes","createSelector","createStructuredSelector","inputSelectorsObject","selectorCreator","object","assertIsObject","inputSelectorKeys","keys","reduce","composition","index","reselectCreateSelector","is","checkIsAPIRef","current","DEFAULT_INSTANCE_ID","id","c","e","f","stateOrApiRef","instanceIdParam","isAPIRef","instanceId","state","va","vb","vc","vd","ve","acceptsApiRef","createSelectorMemoized","args","cacheKey","cacheArgsInit","cacheArgs","cacheFn","fn","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","left","right","gridColumnsStateSelector","columns","gridColumnFieldsSelector","columnsState","orderedFields","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","column","gridVisibleColumnFieldsSelector","visibleColumns","gridVisiblePinnedColumnDefinitionsSelector","pinnedColumns","isRtl","model","visibleColumnFields","visiblePinnedFields","invert","newPinnedColumns","remainingColumns","includes","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","positions","currentPosition","computedWidth","gridColumnsTotalWidthSelector","colCount","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","acc","gridHasColSpanSelector","some","colSpan","fastObjectShallowCompare","aLength","bLength","isOutputSelector","applySelector","apiRef","defaultCompare","objectShallowCompare","createRefs","useGridSelector","refs","didInit","setState","store","subscribe","newState","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","dataRowIdToModelLookup","gridRowsDataRowIdToIdLookupSelector","dataRowIdToIdLookup","gridRowTreeSelector","tree","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthsSelector","treeDepths","gridRowMaximumTreeDepthSelector","nodeCount","depth","Number","sort","gridDataRowIdsSelector","dataRowIds","gridPinnedRowsSelector","additionalRowGroups","rawPinnedRows","pinnedRows","bottom","rowEntry","top","gridPinnedRowsCountSelector","gridDimensionsSelector","dimensions","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","getRowIdFromRowModel","rowModel","getRowId","detailErrorMessage","row","JSON","stringify","checkGridRowIdIsValid","createRowsInternalCache","rowCount","updates","type","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getTopLevelRowCount","rowCountProp","rootGroupNode","max","footerId","getRowsStateFromCache","loadingProp","previousTree","previousTreeDepths","previousGroupsToFetch","caches","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","applyStrategyProcessor","groupingParamsWithHydrateRows","unstable_applyPipeProcessors","actions","insert","modify","remove","idToActionLookup","isAutogeneratedRowNode","rowNode","isAutoGenerated","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","node","validDescendants","child","childDescendants","j","updateCacheWithNewRows","previousCache","groupKeys","uniqueUpdates","forEach","update","has","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","getMinimalContentHeight","rowHeight","computeRowsUpdates","nonPinnedRowsUpdates","getRowNode","pinnedRowsCache","prevModel","idLookup","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","gridSortingStateSelector","sorting","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","rowTree","gridSortModelSelector","sortModel","gridSortColumnLookupSelector","res","sortItem","sortDirection","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","filterModel","gridFilteredRowsLookupSelector","quickFilterValues","filteredRowsLookup","gridExpandedSortedRowEntriesSelector","filteredChildrenCountLookup","filteredDescendantCountLookup","visibleRowsLookup","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","rowId","visibleSortedRows","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilterActiveItemsSelector","topLevelRowCount","columnLookup","items","filterOperators","filterOperator","operator","InputComponent","toString","gridFilterActiveItemsLookupSelector","activeFilters","filterItem","gridPreferencePanelStateSelector","preferencePanel","GridPreferencePanelsValue","GridApiContext","GridToolbarFilterListRoot","_props","toolbarFilterList","margin","GridToolbarFilterButton","slotProps","buttonProps","button","tooltipProps","tooltip","filterButtonId","useId","filterPanelId","tooltipContentNode","open","getLocaleText","getOperatorLabel","label","getFilterItemValue","getValueAsString","headerName","disableColumnFilter","isOpen","panelId","baseTooltip","title","enterDelay","baseButton","startIcon","baseBadge","badgeContent","openFilterButtonIcon","onClick","event","openedPanelValue","filters","hidePreferences","showPreferences","GridPrivateApiContext","useGridPrivateApiContext","privateApiRef","columnHeaderStyles","iconButtonContainer","visibility","menuIcon","separatorIconDragStyles","rx","x","GridRootStyles","autoHeight","aggregationColumnHeader","aggregationColumnHeaderLabel","cell","autosizing","editBooleanCell","cellCheckbox","cellSkeleton","checkboxInput","columnHeader","headerFilterRow","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnSeparator","filterIcon","iconSeparator","menuIconButton","menuOpen","menuList","rowReorderCellPlaceholder","rowReorderCell","sortIcon","withBorderColor","treeDataGroupingCell","treeDataGroupingCellToggle","treeDataGroupingCellLoadingContainer","groupingCriteriaCellLoadingContainer","detailPanelToggleCell","t","borderColor","TableCell","border","mode","divider","radius","shape","borderRadius","containerBackground","background","default","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","action","disabledOpacity","hoverOpacity","hoverColor","hover","selectedOpacity","selectedHoverOpacity","selectedBackground","primary","mainChannel","selectedHoverBackground","blendFn","blendCssVars","blend","getPinnedBackgroundStyles","backgroundColor","pinnedHoverStyles","pinnedSelectedBackgroundColor","pinnedSelectedStyles","pinnedSelectedHoverStyles","selectedStyles","typography","fontWeightMedium","flex","boxSizing","position","borderWidth","borderStyle","text","body2","outline","minWidth","minHeight","flexDirection","overflow","overflowAnchor","borderTopLeftRadius","borderTopRightRadius","columnHeaderTitleContainerContent","whiteSpace","maxWidth","groupingCriteriaCell","WebkitTapHighlightColor","outlineOffset","focusOutlineWidth","opacity","hasScrollX","hasScrollY","scrollbarSize","justifyContent","duration","shorter","borderBottomWidth","borderBottomStyle","fontSize","cursor","marginLeft","marginRight","zIndex","columnHeaders","columnSeparatorOffset","touchAction","pointerEvents","shortest","borderBottom","filler","scrollbarFiller","breakInside","rowSkeleton","lineHeight","borderTop","textOverflow","borderTopColor","userSelect","cellEmpty","boxShadow","shadows","paper","booleanCell","secondary","disabled","actionsCell","gridGap","rowReorderCellContainer","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","textAlign","virtualScrollerContent","cellOffsetLeft","alignSelf","groupingCriteriaCellToggle","virtualScroller","overlay","gamma","overlayColor","rgb","values","removeOpacity","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","density","gridDensityFactorSelector","GridRoot","rootElementRef","handleRef","useForkRef","showCellVerticalBorder","toolbar","mountedState","setMountedState","useEnhancedEffect","GridPreferencesPanel","preferencePanelState","panelContent","panel","as","basePopper","labelId","GridHeader","fastMemo","component","TimerBasedCleanupTracking","timeout","timeouts","cleanupTimeout","register","unsubscribe","unregisterToken","setTimeout","delete","cleanupToken","unregister","clearTimeout","reset","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","registryContainer","useGridApiEventHandler","cleanupTokensCounter","eventName","handler","objectRetainedByReact","subscription","handlerRef","cleanupTokenRef","enhancedHandler","params","details","defaultMuiPrevented","subscribeEvent","createUseGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","colDef","hasFocus","debounceMs","isProcessingProps","onValueChange","inputRef","valueState","setValueState","handleChange","async","newValue","target","getColumn","parsedValue","valueParser","getRow","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","focus","fullWidth","onChange","endAdornment","loadIcon","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","getNextGridSortDirection","sortingOrder","currentIdx","indexOf","gridNillComparator","v1","v2","collator","Intl","Collator","gridNumberComparator","value1","value2","nillResult","gridDateComparator","GridFilterInputValue","applyValue","focusElementRef","tabIndex","clearButton","InputProps","others","filterTimeout","useTimeout","filterValueState","setFilterValueState","applying","setIsApplying","onFilterChange","String","start","filterDebounceMs","newItem","fromInput","baseTextField","placeholder","inputProps","InputLabelProps","shrink","isFunction","isObject","escapeRegExp","replace","clamp","min","range","from","to","isDeepEqual","entriesA","entryA","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","prototype","hasOwnProperty","call","deepClone","obj","structuredClone","parse","_excluded2","GridFilterInputMultipleValue","error","helperText","TextFieldProps","itemValue","filterItemValue","Autocomplete","A","multiple","freeSolo","filterOptions","inputValue","renderTags","getTagProps","option","_getTagProps","tagProps","baseChip","renderInput","GridLogicOperator","getDefaultGridFilterModel","logicOperator","And","quickFilterLogicOperator","getPublicApiRef","getPublicApi","hasEval","cleanFilterItem","cleanItem","random","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","parser","ignoreDiacritics","newFilterItem","publicApiRef","applyFilterOnRow","getApplyFilterFn","getRowValue","filterItemsApplierId","buildAggregatedFilterItemsApplier","disableEval","appliers","callback","Function","getHasEval","shouldApplyFilter","resultPerItemId","applier","filterItemCore","replaceAll","shouldApplyItem","shouldQuickFilterExcludeHiddenColumns","quickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","isRowMatchingQuickFilter","Boolean","columnFields","appliersPerField","getApplyQuickFilterFn","quickFilterValue","outer","filterValue","buildAggregatedQuickFilterApplier","passingFilterItems","passingQuickFilterValues","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","createContainsFilterFn","disableTrim","negate","trimmedValue","trim","filterRegex","matches","test","createEqualityFilterFn","sensitivity","usage","isEqual","compare","createEmptyFilterFn","isEmpty","GRID_STRING_COL_DEF","Infinity","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","align","requiresFilterValue","val","getGridStringOperators","renderEditCell","columnValue","getRowFormattedValue","parseNumericValue","GRID_NUMERIC_COL_DEF","headerAlign","valueFormatter","isNaN","isNumber","toLocaleString","InputComponentProps","convertFilterItemValueToInputValue","inputType","dateCopy","Date","getTime","toISOString","substring","setMinutes","getMinutes","getTimezoneOffset","GridFilterInputDate","date","buildApplyFilterFn","compareFn","showTime","keepHours","setSeconds","setHours","time","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","split","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","renderEditDateCell","throwIfNotDateObject","columnType","GRID_DATE_COL_DEF","toLocaleDateString","pastedValueParser","GRID_DATETIME_COL_DEF","GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD","GRID_DETAIL_PANEL_TOGGLE_FIELD","GridBooleanCellRaw","isServerSideRowGroupingRow","treeData","Icon","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","GridEditBooleanCell","idProp","checked","htmlFor","baseCheckbox","sanitizeFilterItemValue","toLowerCase","BooleanOperatorContainer","GridFilterInputBoolean","labelProp","selectId","baseSelectProps","baseSelect","isSelectNative","native","baseSelectOptionProps","baseSelectOption","baseFormControl","baseInputLabel","notched","displayEmpty","GRID_BOOLEAN_COL_DEF","renderCell","sanitizedValue","stringToBoolean","GridCellEditStartReasons","GridCellEditStopReasons","GridEditModes","GridCellModes","GridRowModes","isSingleSelectColDef","getValueOptions","additionalParams","valueOptions","getValueFromValueOptions","getOptionValue","optionValue","GridEditSingleSelectCell","initialOpen","editMode","Cell","setOpen","_ref","MenuProps","otherBaseSelectProps","getOptionLabel","formattedTargetValue","onOpen","isKeyboardEvent","onClose","reason","Row","getCellParams","publishEvent","escapeKeyDown","cellFocusOut","valueOption","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","resolvedColumn","currentValueOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","parseObjectValue","GRID_SINGLE_SELECT_COL_DEF","filterItemValues","mapEventPropToEvent","eventProp","ClickAwayListener","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","nodeRef","activatedRef","syntheticEventRef","getReactElementRef","handleClickAway","useEventCallback","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","insideDOM","composedPath","contains","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","GridMenuRoot","Popper","menu","modal","transformOrigin","GridMenu","onExited","savedFocusRef","document","activeElement","HTMLElement","anchorEl","placement","TransitionProps","Grow","popperOnExited","Paper","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","menuId","buttonId","getActions","hasActions","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","hideMenu","handleTouchRippleRef","instance","handleButtonClick","onKeyDown","getNewIndex","direction","indexMod","newIndex","preventDefault","stopPropagation","touchRippleRef","baseIconButton","moreActionsIcon","MenuList","autoFocusItem","closeMenu","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","disableColumnMenu","disableExport","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","enabled","gridHeaderFilteringEditFieldSelector","editing","gridHeaderFilteringMenuSelector","gridColumnGroupingSelector","columnGrouping","gridColumnGroupsUnwrappedModelSelector","unwrappedGroupingModel","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","headerStructure","gridColumnGroupsHeaderMaxDepthSelector","maxDepth","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","string","number","dateTime","boolean","singleSelect","custom","hydrateColumnsWidth","rawState","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","viewportOuterSize","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","all","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","columnsToUpsert","initialState","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","newColumn","existingState","hasBeenResized","resolveProps","columnsStateWithPortableColumns","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","applyInitialState","getRootDimensions","getTotalHeaderHeight","unstable_listView","densityFactor","isHeaderFilteringEnabled","floor","columnHeaderHeight","headerFilterHeight","GridScrollAreaRawRoot","scrollArea","GridScrollArea","scrollDirection","columnsTotalWidth","scrollPosition","getCanScrollMore","maxScrollLeft","viewportInnerSize","dragging","setDragging","canScrollMore","setCanScrollMore","totalHeaderHeight","headerHeight","leftPinnedWidth","rightPinnedWidth","handleDragOver","offset","getBoundingClientRect","scroll","handleColumnHeaderDragStart","handleColumnHeaderDragEnd","newScrollPosition","onDragOver","noop","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnGroupHeaderSelector","columnHeaderFilter","columnGroupHeader","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnGroupHeaderSelector","getPageCount","pageSize","page","ceil","getDefaultGridPaginationModel","autoPageSize","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","gridPaginationSelector","pagination","gridPaginationModelSelector","paginationModel","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","slice","gridPaginatedVisibleSortedGridRowIdsSelector","getVisibleRows","paginationMode","useGridVisibleRows","response","isFirefox","navigator","userAgent","gridRowSelectionStateSelector","rowSelection","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridRowsMetaSelector","rowsMeta","gridVirtualizationSelector","virtualization","gridVirtualizationColumnEnabledSelector","enabledForColumns","gridVirtualizationRowEnabledSelector","enabledForRows","gridRenderContextSelector","renderContext","gridRenderContextColumnsSelector","firstColumnIndex","lastColumnIndex","useGridApiMethod","apiMethods","isFirstRender","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","disableVirtualization","gridRowSpanningStateSelector","rowSpanning","gridRowSpanningHiddenCellsSelector","hiddenCells","gridRowSpanningSpannedCellsSelector","spannedCells","gridRowSpanningHiddenCellsOriginMapSelector","hiddenCellOriginMap","gridListColumnSelector","listViewColumn","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","isJSDOM","window","useGridVirtualScroller","listView","outerSize","pinnedColumnDefinitions","hasBottomPinnedRows","panels","setPanels","cellFocus","cellTabIndex","selectedRowsLookup","currentPage","gridRootRef","mainRef","mainElementRef","scrollerRef","virtualScrollerRef","scrollbarVerticalRef","virtualScrollbarVerticalRef","scrollbarHorizontalRef","virtualScrollbarHorizontalRef","contentHeight","contentSize","hasColSpan","fnRef","ResizeObserver","frameID","observer","observe","cancelAnimationFrame","disconnect","useResizeObserver","resize","previousContextScrollPosition","previousRowContext","scrollTimeout","frozenContext","scrollCache","rowBufferPx","columnBufferPx","verticalBuffer","horizontalBuffer","NONE","buffer","bufferForDirection","createScrollCache","MINIMUM_COLUMN_WIDTH","focusedCell","rowIndex","columnIndex","updateRenderContext","nextRenderContext","context1","context2","areRenderContextsEqual","didRowsIntervalChange","isReady","triggerUpdateRenderContext","newScroll","scrollTop","scrollLeft","dx","dy","isScrolling","abs","DOWN","UP","RIGHT","LEFT","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","forceUpdateRenderContext","handleScroll","currentTarget","handleWheel","needsHorizontalScrollbar","scrollerStyle","overflowX","overflowY","flexBasis","flexShrink","currentPageTotalHeight","condition","effect","didRun","useRunOnce","initialRenderContext","getRows","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","firstRowToRender","lastRowToRender","rowIndexes","virtualRowIndex","rowProps","columnPositions","rowIndexInPage","minFirstColumn","maxLastColumn","calculateColSpan","baseRowHeight","rowHasAutoHeight","unstable_getRowHeight","isSelected","isRowSelectable","isFirstVisible","isLastVisible","isLastVisibleInSection","isNotVisible","tabbableCell","cellMode","currentRenderContext","offsetLeft","computeOffsetLeft","showBottomBorder","selected","offsetTop","focusedColumnIndex","getInfiniteLoadingTriggerElement","lastRowId","getContainerProps","getScrollerProps","onScroll","onWheel","onTouchMove","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","hiddenCellsOriginMap","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","inputs","realLeft","getNearestIndexToRender","atStart","lastPosition","rowSpanHiddenCellOrigin","minSpannedRowIndex","hasRowWithAutoHeight","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","lastSize","binarySearch","actualRenderContext","initialFirstColumnToRender","lastColumnToRender","columnBefore","columnAfter","firstColumnToRender","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstNonSpannedColumnToRender","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","getLastMeasuredRowIndex","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","overlayType","loadingOverlayVariant","GridOverlayWrapperInner","overlayWrapperInner","inner","GridOverlayWrapper","topContainerHeight","bottomContainerHeight","GridOverlays","Overlay","overlayProps","gridColumnMenuSelector","columnMenu","MemoizedGridHeaders","filterColumnLookup","sortColumnLookup","columnHeaderTabIndexState","cellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","columnsContainerRef","columnHeadersContainerRef","GridConfigurationContext","useGridConfiguration","configuration","GridPanelAnchor","Element","flexGrow","GridMainContainer","ariaAttributes","hooks","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","GridVirtualScrollerContent","overflowedContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","Memoized","rowsLength","minimumSize","needsLastRowBorder","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","Scrollbar","ScrollbarVertical","ScrollbarHorizontal","GridVirtualScrollbar","isLocked","scrollbarRef","contentRef","content","propertyDimension","propertyScroll","hasScroll","scrollbarInnerSize","onScrollerScroll","scroller","scrollbar","onScrollbarScroll","capture","setProperty","Container","Scroller","scrollbarWidth","GridVirtualScroller","overlaysProps","visibleRowCount","noRows","loadingOverlay","useGridOverlays","detailPanels","GridFooterPlaceholder","hideFooter","footer","getGridRowGroupSelectableDescendants","groupId","sortedRowIds","groupNode","descendants","isMultipleRowSelectionEnabled","signature","checkboxSelection","disableMultipleRowSelection","findRowsToSelect","selectedRow","autoSelectDescendants","autoSelectParents","addRow","filteredRows","selectedIdsLookup","selectedDescendants","add","checkAllDescendantsSelected","traverseParents","siblings","parent","childId","getFilteredRowNodeSiblings","findRowsToDeselect","deselectedRow","removeRow","allParents","parents","getRowNodeParents","descendant","GridContextProvider","Provider","forceDebug","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noopLogger","debug","info","warn","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","loggerObj","method","idx","message","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","regularListeners","once","that","oneTimeListener","Store","_value","listeners","getSnapshot","SYMBOL_API_PRIVATE","globalId","useGridApiInitialization","inputApiRef","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","spying","publicApi","currentPublicMethod","eventManager","createPrivateAPI","createPublicAPI","isPropagationStopped","isSyntheticEvent","DataGridPro","DataGridPremium","api","_typeof","iterator","toPropertyKey","toPrimitive","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","visibleRowsLookupCreation","useGridInitialization","useGridRefs","isFirstEffect","useGridIsRtl","getLogger","logger","useGridLoggerFactory","controlStateMapRef","rawForceUpdate","registerControlState","controlStateItem","stateId","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","privateStateApi","useGridStateInitialization","isRunning","runAppliers","groupCache","registerPipeProcessor","group","processor","processors","processorsAsArray","registerPipeApplier","_appliers","otherAppliers","requestPipeProcessorsApplication","preProcessingPublicApi","context","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","activeStrategy","strategyGroup","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","localeText","useGridLocaleText","useGridInitializeState","initializer","isInitialized","useGridLogger","newLogger","useGridNativeEventListener","added","setAdded","targetElement","wrapHandler","GridCellCheckboxForwardRef","checkboxElement","rippleRef","element","getCellElement","input","querySelector","handleKeyDown","isSelectable","checkboxPropsSelector","rowSelectionPropagation","rowSelectionLookup","isIndeterminate","isChecked","selectableDescendantsCount","selectedDescendantsCount","indeterminateCheckboxAction","indeterminate","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","getColumnHeaderElement","handleSelectionChange","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","delimiter","serializeCellValue","cellParams","ignoreValueFormatter","formattedValue","CSVRow","rowString","addValue","getRowString","buildCSV","rowIds","CSVBody","serializeRow","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","headerGroupRow","columnGroupId","columnGroup","mainHeaderRow","isPrintableKey","ctrlKey","metaKey","isNavigationKey","isPasteShortcut","fromCharCode","keyCode","shiftKey","altKey","writeToClipboardPolyfill","data","span","createElement","textContent","body","appendChild","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","removeChild","useGridClipboard","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","isCopyShortcut","selectionEnd","selectionStart","textToCopy","getSelectedRows","getDataAsCsv","clipboard","writeText","catch","onClipboardCopy","columnMenuStateInitializer","useFirstRender","useGridRegisterPipeProcessor","registerPreProcessor","useGridRegisterPipeApplier","columnsStateInitializer","mergeColumnsState","densityStateInitializer","getColumnsToExport","fields","currentColumns","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","getDividerUtilityClass","getListItemIconUtilityClass","getListItemTextUtilityClass","getMenuItemUtilityClass","MenuItemRoot","ButtonBase","rootShouldForwardProp","dense","disableGutters","gutters","body1","textDecoration","paddingTop","paddingBottom","focusVisible","focusOpacity","marginTop","marginBottom","inset","paddingLeft","paddingRight","backgroundClip","breakpoints","up","MenuItem","autoFocus","focusVisibleClassName","tabIndexProp","ListContext","childContext","menuItemRef","composedClasses","GridCsvExportMenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","useGridCsvExport","csvExport","getRowsToExport","csv","blob","extension","filename","fullName","HTMLAnchorElement","url","URL","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","disableToolbarButton","componentName","getDerivedPaginationModel","paginationState","paginationModelProp","pageCount","validPage","getValidPage","useGridPrintExport","hasRootReference","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","updateGridColumnsForPrint","includeCheckboxes","Promise","resolve","exportedColumnFields","newColumnVisibilityModel","setColumnVisibilityModel","updateGridRowsForPrint","newRows","setRows","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","offsetHeight","gridFooterElementHeight","footerContainer","computedTotalHeight","gridFooterElement","container","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","then","contentWindow","print","handlePrintWindowAfterPrint","restoreState","exportState","getSortedRows","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","printOptions","useGridRegisterStrategyProcessor","filterStateInitializer","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","focusStateInitializer","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","isEventTargetInPortal","nodeType","findGridElement","klass","findPinnedCells","colIndex","filterFn","cells","queryRows","rowElement","currentColIndex","parseCellColIndex","findPinnedHeaders","elements","ariaColIndex","getLeftColumnIndex","firstColIndex","lastColIndex","getRightColumnIndex","useGridKeyboardNavigation","initialCurrentPageRows","currentPageRows","enrichPageRowsWithPinnedRows","headerFilteringEnabled","headerFilters","goToCell","closestColumnToUse","rowSpanScanDirection","nextCellColSpanInfo","rightVisibleCellIndex","nonRowSpannedRowId","rowSpanHiddenCells","nextRowIndex","nextRowId","findNonRowSpannedCell","rowIndexRelativeToAllRows","scrollToIndexes","setCellFocus","goToHeader","getVisibleColumns","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","Edit","getColumnIndexFn","rowIndexBefore","groupingColDefField","match","getRowGroupingCriteriaFromGroupingField","isGroupingColumn","checkIfCanStartEditing","paginationStateInitializer","paginationMeta","useGridPagination","onPaginationMetaChange","setPaginationMeta","newPaginationMeta","stateExportPreProcessing","prevState","exportedPaginationMeta","exportOnlyDirtyModels","stateRestorePreProcessing","restoredPaginationMeta","stateToRestore","useGridPaginationMeta","onPaginationModelChange","setPage","currentModel","setPaginationModel","setPageSize","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","useGridPaginationModel","rowCountState","previousPageSize","onRowCountChange","setRowCount","exportedRowCount","restoredRowCount","handlePaginationModelChange","isLastPage","hasNextPage","useGridRowCount","preferencePanelStateInitializer","gridEditRowsStateSelector","editRows","getDefaultCellValue","GridRowEditStartReasons","GridRowEditStopReasons","editingStateInitializer","useGridEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","isCellEditable","throwIfNotInMode","getCellMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","which","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editRowsState","hasFieldErrors","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","getCellValue","shouldProcessEditCellProps","preProcessEditCellProps","hasChanged","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","updateRows","editingPrivateApi","setCellEditingEditCellValue","skipValueParser","valueSetter","idToIdLookup","copyOfPrevCellModes","prevMode","originalId","useGridCellEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","rowFocusOut","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","processedProps","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","promise","thisField","fieldColumn","_editingState$id2","copyOfPrevRowModesModel","ids","useGridRowEditing","debounceMap","isCellEditableProp","debounces","runCallback","debouncedField","maybeDebounce","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","editingSharedPrivateApi","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","flatRowTreeCreationMethod","groupingField","groupingKey","childrenFromPath","childrenExpanded","createFlatRowTree","idsToRemoveFromRootGroup","idToDelete","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getAllColumns","rawValue","getGridColumnHeaderElement","getRowElement","getGridRowElement","getGridCellElement","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","rowSelectionModel","useGridRowSelection","runIfRowSelectionIsEnabled","applyAutoSelection","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","disableRowSelectionOnClick","propIsRowSelectable","canHaveMultipleSelection","isNestedData","expandMouseRowRangeSelection","endId","startId","isRowSelected","startIndex","endIndex","selectRowRange","setRowSelectionModel","selectRow","resetSelection","newSelection","selectRows","selectableIds","currentLookup","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPrivateApi","removeOutdatedSelection","sortModelUpdated","currentSelection","selectionLookup","filterMode","isNonExistent","keepNonExistentRowsSelected","shouldReapplyPropagation","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","preventSelectionOnShift","handleRowSelectionCheckboxChange","nativeEvent","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","haveSelectionColumn","sortingStateInitializer","scrollIntoView","containerSize","elementSize","elementOffset","elementEnd","DATA_GRID_PROPS_DEFAULT_VALUES","autosizeOnMount","disableAutosize","disableColumnReorder","disableColumnResize","disableColumnSelector","disableColumnSorting","disableDensitySelector","hideFooterPagination","hideFooterRowCount","hideFooterSelectedRowCount","keepColumnPositionIfDraggedOutside","pageSizeOptions","resizeThrottleMs","rowPositionsDebounceMs","rowSpacingType","showColumnVerticalBorder","sortingMode","throttleRowsMs","unstable_rowSpanning","EMPTY_SIZE","EMPTY_DIMENSIONS","groupHeaderHeight","rowWidth","headersTotalHeight","dimensionsStateInitializer","useGridDimensions","errorShown","rootDimensionsRef","dimensionsState","validRowHeight","columnGroupHeaderHeight","decimals","w","savedSize","setSavedSize","debouncedSetSavedSize","wait","lastArgs","later","throttled","throttle","previousSize","setDimensions","computedStyle","ownerWindow","getComputedStyle","newSize","parseFloat","areElementSizesEqual","getRowHeight","updateDimensions","rootElement","pinnedRowsHeight","calculatePinnedRowsHeight","scrollDiv","offsetWidth","measureScrollbarSize","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","apiPrivate","k","isFirstSizing","handleResize","onResize","globalThis","unobserve","rowsMetaStateInitializer","heights","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","setCellColSpanInfo","cellProps","nextColumnIndex","isLeaf","recurrentUnwrapGroupingColumnModel","columnGroupNode","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","pinnedFields","getParents","groupingHeaderStructure","haveSameParents","field1","field2","depthStructure","structure","newField","lastGroup","prevField","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","DEFAULT_GRID_AUTOSIZE_OPTIONS","includeOutliers","outliersFactor","expand","trackFinger","currentTouchId","changedTouches","touch","identifier","y","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","stopImmediatePropagation","useColumnVirtualizationDisabled","reject","_resolve","_reject","createControllablePromise","extractColumnWidths","widthByField","findGridCells","widths","filteredWidths","inputValues","factor","q1","q3","iqr","deviation","excludeOutliers","header","columnHeaderTitle","iconContainer","menuContainer","paddingWidth","parseInt","scrollWidth","hasColumnMin","hasColumnMax","maxContent","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","stopResizeEventTimeout","touchId","updateWidth","prevWidth","widthDiff","columnWidthDiff","newTotalWidth","div","finalWidth","pinnedPosition","updateProperty","finishResize","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","storeReferences","separator","xStart","findGroupHeaderElementsFromField","findGridCellElementsFromCol","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","side","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","handleResizeMouseUp","handleResizeMouseMove","buttons","handleTouchEnd","finger","handleTouchStart","cellSeparator","removeProperty","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","handleColumnSeparatorDoubleClick","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","isAutosizingRef","userOptions","unstable_setColumnVirtualization","newColumns","totalWidth","total","remainingWidth","widthPerColumn","updateColumns","passive","onColumnResize","onColumnWidthChange","property","delta","isRowRangeUpdated","range1","range2","cellValue","rowSpanValueGetter","EMPTY_STATE","EMPTY_RANGE","skippedFields","computeRowSpanningState","colDefs","rangeToProcess","resetState","processedRange","spannedRowId","spannedRowIndex","rowSpan","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","rowSpanningStateInitializer","isFilteringPending","DEFAULT_ROWS_TO_PROCESS","listViewStateInitializer","unstable_listColumn","getListColumnWidth","useDataGridComponent","useGridRowsPreProcessors","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","useVisibleColumns","getColumnPosition","setColumnVisibility","isVisible","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","targetIndex","oldIndex","columnReorderApi","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","ColumnsPanel","columnsPanel","addColumnMenuItems","columnMenuItems","prevInnerWidth","hydrateColumns","useGridColumns","lastUpdateMs","now","lastRowCount","getRowIdProp","throttledRowsChange","run","throttleRemainingTimeMs","prevCache","updateServerRows","setLoading","getRowModels","dataRows","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","getRowGroupChildren","applySorting","applyFiltering","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","seenIds","removedRowId","rowTreeNodeConfig","rowProApi","rowProPrivateApi","groupRows","previousDataSource","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRows","lastRange","updateRowSpanningState","isRowContextInitialized","testRange","getUnprocessedRange","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","prevRenderContext","shouldResetState","firstRender","useGridRowSpanning","resetColSpan","columnSpanningPrivateApi","useGridColumnSpanning","handleColumnIndexChange","updateColumnGroupingState","getPinnedColumns","useGridColumnGrouping","lastClickedCell","publishCellFocusOut","getColumnGroupHeaderFocus","columnIndexToFocus","concat","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","lastFocusedRowId","lastFocusedRowIndex","nextRow","currentFocusedCell","focusPrivateApi","useGridFocus","hideTimeout","immediateTimeout","doNotHidePanel","hidePreferencesDelayed","preferencePanelToExport","useGridPreferencesPanel","onFilterModelChange","updateFilteredRows","getFilterState","visibleRowsLookupState","addColumnMenuItem","applyFilters","upsertFilterItem","itemIndex","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","hideFilterPanel","setFilterLogicOperator","setQuickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","filterResult","filterApi","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","handleColumnsChange","updateVisibleRowsLookupState","useGridFilter","onSortModelChange","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortRowList","comparatorList","getSortComparator","getSortCellParams","parseSortItem","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","buildAggregatedSortingApplier","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","useGridSorting","onDensityChange","setDensity","newDensity","exportedDensity","restoredDensity","useGridDensity","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","heightCache","lastMeasuredRowIndex","isHeightMetaValid","processHeightEntry","getRowHeightEntry","rowHeightFromUser","needsFirstMeasurement","estimatedRowHeight","indexRelativeToCurrentPage","spacingTop","spacingBottom","hydrateRowsMeta","detail","resizeObserver","borderBoxSize","blockSize","contentRect","__mui_id","unstable_storeRowHeightMeasurement","rowsMetaApi","unstable_setLastMeasuredRowIndex","didChange","resetRowHeights","rowsMetaPrivateApi","observeRowHeight","useGridRowsMeta","colRef","scrollCoordinates","cellWidth","elementIndex","targetOffsetHeight","getScrollPosition","useGridScroll","showColumnMenu","hideColumnMenu","visibleOrderedFields","fieldIndex","useGridColumnMenu","onColumnHeaderClick","onColumnHeaderContextMenu","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","useGridStatePersistence","setVirtualization","unstable_setVirtualization","useGridVirtualization","updateListColumnWidth","listColumn","useGridListView","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorDoesNotContain","filterOperatorEquals","filterOperatorDoesNotEqual","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorDoesNotContain","headerFilterOperatorEquals","headerFilterOperatorDoesNotEqual","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","getUnit","toUnitless","getSkeletonUtilityClass","pulseKeyframe","waveKeyframe","pulseAnimation","waveAnimation","SkeletonRoot","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","radiusValue","Skeleton","bg","WebkitMaskImage","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","seed","imul","createRandomNumberGenerator","empty","skeletonProps","GridIconButtonContainerRoot","GridIconButtonContainer","GridColumnHeaderSortIconRaw","icon","iconElement","icons","iconProps","columnSortedAscendingIcon","columnSortedDescendingIcon","columnUnsortedIcon","getIcon","iconButton","overlap","GridColumnHeaderSortIcon","GridSelectedRowCountRoot","selectedRowCount","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","GridFooterContainer","GridFooter","selectedRowCountElement","rowCountElement","footerRowCount","paginationElement","GridRowCountRoot","GridRowCount","getLinearProgressUtilityClass","indeterminate1Keyframe","indeterminate1Animation","indeterminate2Keyframe","indeterminate2Animation","bufferKeyframe","bufferAnimation","getColorShade","LinearProgress","LinearProgressRoot","colorAdjust","LinearProgressDashed","dashed","backgroundSize","backgroundPosition","backgroundImage","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","LinearProgressBar2","bar2Indeterminate","bar2Buffer","valueBuffer","bar1","bar2","inlineStyles","GridOverlayRoot","GridOverlay","getPinnedCellOffset","pinnedOffset","shouldCellShowRightBorder","indexInSection","sectionLength","showCellVerticalBorderRootProp","gridHasFiller","isSectionLastCell","shouldCellShowLeftBorder","pinnedRight","GridScrollbarFillerCell","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","viewportHeight","skeletonRowsCount","inViewportCount","allVisibleColumns","getPinnedStyle","getPinnedPosition","rowCells","isPinnedLeft","isPinnedRight","sectionIndex","pinnedStyle","showRightBorder","showLeftBorder","isLastColumn","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","skeletonCell","hasScrollbarFiller","resizedColIndex","currentWidth","getPropertyValue","pinnedCells","LOADING_VARIANTS","CircularProgress","skeleton","GridLoadingOverlay","noRowsVariant","rowsCount","activeVariant","GridNoRowsOverlay","getTableCellUtilityClass","TableCellRoot","stickyHeader","verticalAlign","pxToRem","fontWeight","paddingCheckbox","componentProp","paddingProp","scope","scopeProp","sizeProp","variantProp","table","tablelvl2","isHeadCell","ariaSort","getToolbarUtilityClass","ToolbarRoot","Toolbar","createSvgIcon","backIconButtonProps","getItemAriaLabel","nextIconButtonProps","onPageChange","rowsPerPage","showFirstButton","showLastButton","FirstButton","firstButton","IconButton","LastButton","lastButton","NextButton","nextButton","PreviousButton","previousButton","FirstButtonIcon","firstButtonIcon","FirstPage","LastButtonIcon","lastButtonIcon","LastPage","NextButtonIcon","nextButtonIcon","KeyboardArrowRight","PreviousButtonIcon","previousButtonIcon","KeyboardArrowLeft","FirstButtonSlot","PreviousButtonSlot","NextButtonSlot","LastButtonSlot","firstButtonSlotProps","previousButtonSlotProps","nextButtonSlotProps","lastButtonSlotProps","getTablePaginationUtilityClass","_InputBase","TablePaginationRoot","TablePaginationToolbar","TablePaginationSpacer","spacer","TablePaginationSelectLabel","selectLabel","TablePaginationSelect","Select","selectIcon","select","selectRoot","textAlignLast","TablePaginationMenuItem","menuItem","TablePaginationDisplayedRows","displayedRows","defaultLabelDisplayedRows","defaultGetAriaLabel","TablePagination","ActionsComponent","colSpanProp","labelDisplayedRows","labelRowsPerPage","onRowsPerPageChange","rowsPerPageOptions","SelectProps","selectProps","MenuItemComponent","rowsPerPageOption","isHostComponent","GridPaginationRoot","maxHeight","estimated","GridPagination","estimatedRowCount","computedProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","isEnabled","GridPanelWrapper","FocusTrap","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","readOnly","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","filterPanelDeleteIcon","sx","getLogicOperatorLocaleKey","getGridFilter","GridFilterPanel","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","filterPanelAddIcon","filterPanelRemoveAllIcon","getFormControlLabelUtilityClasses","FormControlLabelRoot","labelPlacement","AsteriskComponent","asterisk","FormControlLabel","componentsProps","control","disabledProp","disableTypography","required","requiredProp","muiFormControl","useFormControl","controlProps","fcs","formControlState","states","externalForwardedProps","TypographySlot","typographySlotProps","useSlot","elementType","Typography","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","GridColumnsManagement","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","GridColumnsManagementHeader","startAdornment","baseInputAdornment","quickFilterIcon","pl","GridColumnsManagementBody","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagement","columnsManagementHeader","columnsManagementFooter","grey","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","setAnchorEl","panelAnchor","elevation","cachedSupportsPreventScroll","PinnedPosition","gridPinnedColumnPositionLookup","VIRTUAL","EMPTY_CELL_PARAMS","GridCell","editCellState","styleProp","disableDragEvents","onDoubleClick","onMouseDown","onMouseUp","onMouseOver","onKeyUp","onDragEnter","canManageOwnFocus","rootClasses","getCellClassName","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","publishMouseUp","publishMouseDown","publish","propHandler","isCellRowSpanned","cellStyle","isLeftPinned","isRightPinned","focusableElement","elementToFocus","handleFocus","onFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","EmptyCell","GridRow","refProp","onMouseEnter","onMouseLeave","onMouseOut","treeDepth","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","useGridRowAriaAttributes","publishClick","rowReordering","heightEntry","rowStyle","rowClassNames","getRowClassName","getCell","indexRelativeToAllColumns","isReorderCell","isEditingRows","canReorderColumn","canReorderRow","cellIsNotVisible","leftCells","rightCells","middleColumnsLength","eventHandlers","MemoizedGridRow","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","columnMenuIcon","GridColumnHeaderMenu","ContentComponent","contentComponentProps","labelledby","GridColumnHeaderTitleRoot","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","titleRef","setTooltip","handleMouseOver","isOver","scrollHeight","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","columnResizeIcon","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","draggableContainer","draggable","titleContainer","titleContainerContent","columnWidth","columnMenuOpen","isLast","filterItemsCounter","showColumnMenuIcon","setShowColumnMenuIcon","isDragging","isLastUnpinned","isSiblingFocused","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onContextMenu","onBlur","onDragStart","onDragEnd","handleExited","showSortIcon","hideSortIcons","columnHeaderFilterIconButton","counter","columnHeaderSortIcon","elementId","GridColumnGroupHeader","columnGroupsLookup","render","renderHeaderGroup","renderParams","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","GridBaseColumnHeaders","GridColumnHeaders","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","hasVirtualization","columnGroupsModel","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","rightRenderContext","getColumnsToRender","currentContext","renderedColumns","getFillers","leftOverflow","isNotPinned","leftOffsetWidth","getCellOffsetStyle","getColumnHeaders","isFirstColumn","siblingWithBorderingSeparator","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","Left","useGridColumnHeaders","MemoizedGridColumnHeaders","StyledMenuList","GridColumnMenuContainer","handleListKeyDown","ListItemIconRoot","alignItemsFlexStart","active","ListItemIcon","ListItemTextRoot","multiline","typographyClasses","ListItemText","primaryProp","primaryTypographyProps","secondaryProp","secondaryTypographyProps","GridColumnMenuHideItem","columnMenuHideIcon","GridColumnMenuManageItem","showColumns","columnMenuManageColumnsIcon","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","onSortMenuItemClick","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","columnMenuFilterItem","showFilter","columnMenuFilterIcon","columnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlots","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","baseDivider","useGridColumnMenuSlots","Component","otherProps","GridColumnMenu","GridNoResultsOverlay","parameters","badgeContentProp","invisible","invisibleProp","maxProp","showZero","prevProps","usePreviousProps","displayValue","getBadgeUtilityClass","BadgeRoot","BadgeBadge","badge","anchorOrigin","vertical","horizontal","alignContent","fontFamily","RADIUS_STANDARD","easing","easeInOut","enteringScreen","contrastText","RADIUS_DOT","leavingScreen","getAnchorOrigin","Badge","anchorOriginProp","classesProp","components","overlapProp","colorProp","invisibleFromHook","displayValueFromHook","anchorOriginPropProp","RootSlot","Root","BadgeSlot","rootSlotProps","badgeSlotProps","useSlotProps","externalSlotProps","additionalProps","badgeProps","getSwitchBaseUtilityClass","SwitchBaseRoot","edge","SwitchBaseInput","SwitchBase","checkedProp","checkedIcon","defaultChecked","disableFocusRipple","setCheckedState","useControlled","controlled","hasLabelFor","centerRipple","focusRipple","defaultPrevented","newChecked","getCheckboxUtilityClass","CheckboxRoot","disableRipple","activeChannel","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","Checkbox","iconProp","indeterminateIcon","indeterminateIconProp","DividerRoot","absolute","light","orientation","flexItem","withChildrenVertical","textAlignRight","textAlignLeft","dividerChannel","borderTopStyle","DividerWrapper","wrapper","wrapperVertical","Divider","muiSkipListHighlight","getTooltipUtilityClass","TooltipPopper","popper","disableInteractive","popperInteractive","arrow","popperArrow","popperClose","TooltipTooltip","tooltipArrow","Tooltip","common","white","wordWrap","fontWeightRegular","TooltipArrow","hystersisOpen","hystersisTimer","cursorPosition","composeEventHandler","eventHandler","childrenProp","describeChild","disableFocusListener","disableHoverListener","disableInteractiveProp","disableTouchListener","enterNextDelay","enterTouchDelay","followCursor","leaveDelay","leaveTouchDelay","openProp","PopperComponent","PopperComponentProp","PopperProps","TransitionComponent","TransitionComponentProp","useTheme","childNode","setChildNode","arrowRef","setArrowRef","ignoreNonTouchEvents","closeTimer","enterTimer","leaveTimer","touchTimer","openState","setOpenState","prevUserSelect","stopTouchInteraction","WebkitUserSelect","handleOpen","handleClose","removeAttribute","handleMouseLeave","setChildIsFocusVisible","isFocusVisible","detectTouchStart","onTouchStart","onTouchEnd","popperRef","nameOrDescProps","titleIsString","onMouseMove","interactiveWrapperListeners","popperOptions","tooltipModifiers","Transition","TooltipComponent","ArrowComponent","Arrow","popperProps","appendOwnerState","transitionProps","tooltipArrowProps","TransitionPropsInner","GridColumnUnsortedIcon","nextSortDirection","GridArrowUpwardIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteForeverIcon","iconSlots","columnFilteredIcon","columnSelectorIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","exportIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","quickFilterClearIcon","columnMenuClearIcon","columnReorderIcon","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","material","toggleFilter","noResultsOverlay","noRowsOverlay","useProps","allProps","startsWith","forwardedProps","groupForwardedProps","DATA_GRID_FORCED_PROPS","useDataGridProps","themedProps","useThemeProps","overrides","computeSlots","injectDefaultProps","accessibleRowCount","pinnedRowsCount","ariaRowIndex","DataGridRaw","propTypes","isRequired","experimentalFeatures","warnIfFocusStateIsNotSynced","getDetailPanelContent","nonce","onColumnOrderChange","sortReleaseNotesBy","releaseNotes","release_notes","priority","localeCompare","CustomToolbar","setFilterButtonEl","React","priorityValueOptions","typeValueOptions","componentValueOptions","fetchTitle","rel","link","ReleaseNotesRender","_releaseNotes$release","version","queryString","useLocation","search","decode","useRef","useOnScreen","releaseNoteDataBag","fetchReleaseNotesForVersion","releaseNoteAPIResponse","releaseNotesVersion","release_name","priorities","types","release_note","filterItems","totalP1","note","isValid","py","ReleaseNotesPage","Layout","Trans","Head","Seo"],"sourceRoot":""}