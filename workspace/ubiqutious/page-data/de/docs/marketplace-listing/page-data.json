{"componentChunkName":"component---src-templates-asciidoc-template-tsx","path":"/de/docs/marketplace-listing/","result":{"data":{"asciidoc":{"html":"<div class=\"sect1\">\n<h2 id=\"_overview\">Overview</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Adoptium promotes products listed in the\n<a href=\"/marketplace\">marketplace</a>.\nEach publisher manages a location containing structured information about their products. Adoptium regularly updates the marketplace with the information from your product listing. The location refers to a \"respository\" of data resources. Such a respository may be implemented as a simple file system, dynamically created data stream, version controlled store, database, or other facility that responds to HTTP requests for individual URIs with the information described below.</p>\n</div>\n<div class=\"paragraph\">\n<p>In the description and examples below we will refer to \"files\" and \"directories\" as the implementation of the repository to keep it simple.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_nomenclature\">Nomenclature</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>A repository consists of three types of files, namely <strong>index</strong> files, <strong>release</strong> files and <strong>signature</strong> files.</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Index files : describe the location of release files and index files.</p>\n</li>\n<li>\n<p>Release files : contain a list of marketplace products.</p>\n</li>\n<li>\n<p>Signature files : contain a digital signature associated with an Index or Release file.</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\">\n<p>All files are read assuming UTF-8 encoding.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_signature_files\">Signature Files</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Signature files are used to ensure that the index and release file data has been received correctly, and has not been modified en route. The Adoptium marketplace agent will read a file and check the associated file signature. The file&#8217;s signature is stored in a file with the same name as the file it is signing, with the suffix <code>.sha256.sign</code>.</p>\n</div>\n<div class=\"paragraph\">\n<p>The signature must be a Base64-encoded, RSA encrypted, SHA-256 hash of your entire file content. The signature will be verified using the public key provided in your <a href=\"/docs/marketplace-guide#_providing_publisher_information\">publisher information</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>There are a number of\n<a href=\"https://opensource.com/article/19/6/cryptography-basics-openssl-part-2\" target=\"_blank\" rel=\"noopener\">tools</a>\nand\n<a href=\"https://www.baeldung.com/java-digital-signature\" target=\"_blank\" rel=\"noopener\">code examples</a> available to help produce such signatures.</p>\n</div>\n<details>\n<summary class=\"title\">Generating, verifying, and encoding a signature usings OpenSSL</summary>\n<div class=\"content\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-bash\" data-lang=\"bash\"># Generate signature\nopenssl dgst -sha256 -sign private.pem -out index.json.sig index.json\n\n# Verify\nopenssl dgst -sha256 -verify public.pem -signature index.json.sig index.json\n\n#Base64 encode for publishing\ncat index.json.sig | base64 -w 0 &gt; index.json.sha256.sign</code></pre>\n</div>\n</div>\n</div>\n</details>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_simple_product_listing_repository\">Simple Product Listing Repository</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The simplest product listing repository comprises one index file and one release file, with associated digital signatures.</p>\n</div>\n<div class=\"paragraph\">\n<p>The top-level index file must appear at the root of the repository location, and must be called <code>index.json</code>.</p>\n</div>\n<div class=\"paragraph\">\n<p>Here&#8217;s a simple listing repository example.</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 1. Simple Repository Layout</div>\n<div class=\"content\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>/index.json // <b class=\"conum\">(1)</b>\n/index.json.sha256.sign // <b class=\"conum\">(2)</b>\n/release.json // <b class=\"conum\">(3)</b>\n/release.json.sha256.sign // <b class=\"conum\">(4)</b></code></pre>\n</div>\n</div>\n<div class=\"colist arabic\">\n<ol>\n<li>\n<p>Main product repository index file.</p>\n</li>\n<li>\n<p>Digital signature for index file.</p>\n</li>\n<li>\n<p>Product release listing file.</p>\n</li>\n<li>\n<p>Digital signature for release listing file.</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The simplest <code>index.json</code> file only contains a reference to a single <code>releases.json</code> file.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-json\" data-lang=\"json\">{\n  \"schema_version\": \"1.0.0\",\n  \"releases\": [\n    \"example.json\"\n  ]\n}</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_structured_repository_layout\">Structured Repository Layout</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The product listing repository may be structured with multiple index files and release files to suit each vendor&#8217;s publishing preferences.  For example, a publisher may choose to generate a releases file per Java version, per platform, per calendar release, and so on. The Adoptium marketplace will start at the root <code>index.json</code> and transitively walk each index file exhaustively to find all release files.</p>\n</div>\n<div class=\"paragraph\">\n<p>As a further more complex example, the following repository shows a release file structure organized by Java version and release identifier.</p>\n</div>\n<div class=\"exampleblock\">\n<div class=\"title\">Example 2. Structured Repository Layout</div>\n<div class=\"content\">\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>.\n├── 17\n│   ├── index.json\n│   ├── index.json.sha256.sign\n│   ├── jdk_17_0_1_12.json\n│   ├── jdk_17_0_1_12.json.sha256.sign\n│   ├── jdk_17_0_2_8.json\n│   └── jdk_17_0_2_8.json.sha256.sign\n├── 8\n│   ├── index.json\n│   ├── index.json.sha256.sign\n│   ├── jdk8u312_b07.json\n│   └── jdk8u312_b07.json.sha256.sign\n├── index.json\n└── index.json.sha256.sign</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>In this repository the root <code>/index.json</code> would contain</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-json\" data-lang=\"json\">{\n  \"schema_version\": \"1.0.0\",\n  \"indexes\": [\n    \"8/index.json\",\n    \"17/index.json\"\n  ],\n  \"releases\": [\n  ]\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>and the <code>17/index.json</code> would contain</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code class=\"language-json\" data-lang=\"json\">{\n  \"schema_version\": \"1.0.0\",\n  \"indexes\": [\n  ],\n  \"releases\": [\n    \"jdk_17_0_1_12.json\",\n    \"jdk_17_0_2_8.json\"\n  ]\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Note that although in this example we have created one index file per major Java version and one release file for each Java release, this is not a requirement. An index may contain multiple indices and releases, and a release file may contain multiple version releases if desired.</p>\n</div>\n<div class=\"admonitionblock tip\">\n<table>\n<tr>\n<td class=\"icon\">\n<div class=\"title\">Tip</div>\n</td>\n<td class=\"content\">\nEach index and release file reference is considered relative to the index file path, i.e if <code><a href=\"https://release.adoptium.net/repo/17/index.json\" class=\"bare\">https://release.adoptium.net/repo/17/index.json</a></code> contained a release of <code>jdk_17_0_2_8.json</code>, the path of <code><a href=\"https://release.adoptium.net/repo/17/jdk_17_0_2_8.json\" class=\"bare\">https://release.adoptium.net/repo/17/jdk_17_0_2_8.json</a></code> will be examined.\n</td>\n</tr>\n</table>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_release_file\">Release File</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The release file contains details about your products, including the Java version, target machine architcture, download location, test result location, and more. The name of the release file is not relevant to the Adoptium marketplace beyond being referenced from an index file as described above.</p>\n</div>\n<div class=\"paragraph\">\n<p>Your products' release file listing must adhere to the\n<a href=\"https://github.com/adoptium/api.adoptium.net/tree/marketplace/marketplace\" target=\"_blank\" rel=\"noopener\">marketplace product JSON schema</a>, and Adoptium provides\n<a href=\"https://github.com/adoptium/api.adoptium.net/blob/marketplace/marketplace/adoptium-marketplace-schema-tests/src/test/resources/net/adoptium/marketplace/schema/\" target=\"_blank\" rel=\"noopener\">examples</a>\nand\n<a href=\"https://github.com/adoptium/api.adoptium.net/tree/marketplace/marketplace/adoptium-marketplace-schema\" target=\"_blank\" rel=\"noopener\">code</a>\nto help produce product listing data in the correct format.</p>\n</div>\n<div class=\"paragraph\">\n<p>The live Temurin release files are available in a our public <a href=\"https://github.com/adoptium/marketplace-data\" target=\"_blank\" rel=\"noopener\">marketplace data repository</a> and serve as an example of what is expected.</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_repository_read_and_marketplace_update_process\">Repository Read and Marketplace Update Process</h2>\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>Adoptium typically retrieves the product listing information hourly, though this period is not guaranteed and may vary. Adoptium may consider your HTTP response\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control\" target=\"_blank\" rel=\"noopener\">cache-control http headers</a> such as <code>max-age</code> to guide the frequency of fetching the product listing. In turn the Adoptium request may specify a\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Conditional_requests\" target=\"_blank\" rel=\"noopener\">conditional request</a>\nfor your listing file with headers such as\n<a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since\" target=\"_blank\" rel=\"noopener\">If-Modified-Since</a> to help reduce workload.</p>\n</div>\n<div class=\"paragraph\">\n<p>A product listing file will be rejected if it does not adhere to the schema, or the signature does not verify the content successfully. We will contact you if the listing file is repeatedly failing these validation checks.</p>\n</div>\n<div class=\"paragraph\">\n<p>When read successfully, the new marketplace information replaces any previous information held for <a href=\"/docs/marketplace-guide#_providing_publisher_information\">this vendor</a>.</p>\n</div>\n<div class=\"paragraph\">\n<p>In summary, the update process proceeds as follows:</p>\n</div>\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>The updater pulls the root index and verifies it against the signature.</p>\n</li>\n<li>\n<p>Further indexes, if any, are extracted from the index recursively until all indexes have been read and verified.</p>\n</li>\n<li>\n<p>The location of all release files are extracted from all the indexes.</p>\n</li>\n<li>\n<p>Each release file is pulled and validated against the corresponding signature.</p>\n</li>\n<li>\n<p>Release file information is parsed and validated according to the schema</p>\n</li>\n<li>\n<p>All product information is replaced in the marketplace for this vendor.</p>\n</li>\n</ol>\n</div>\n</div>\n</div>","document":{"title":"Adoptium&#174; Marketplace Publisher Product Listing Repository","main":"Adoptium&#174; Marketplace Publisher Product Listing Repository"},"fields":{"slug":"/docs/marketplace-listing/","relativePath":"docs/marketplace-listing/index.adoc"},"pageAttributes":{"authors":"johnoliver, tellison, gdams","based_on":null}},"locales":{"edges":[{"node":{"ns":"asciidoc","data":"{\"asciidoc.template.warn.default.locale\":\"Dies ist die <englishVersionLink>englische Version</englishVersionLink> der Seite, da aktuell noch keine deutsche Übersetzung verfügbar ist. Du kannst uns helfen diese Seite in deutsch bereitzustellen. In unserem <translationGuideLink>Leitfaden zu Übersetzungen</translationGuideLink> findest du mehr Informationen.\",\"asciidoc.template.warn.outdated\":\"Die deutsche Übersetzung dieser Seite basiert auf einem <previousEnglishVersionLink>nicht mehr aktuellen englischen Text</previousEnglishVersionLink>. Daher ist es Möglich, dass Teile des Textes nicht mehr zutreffen. Du kannst helfen die Seite aktuell zu halten und eine überarbeitete Übersetzung der <lastEnglishVersionLink>aktuellen englischen Seite</lastEnglishVersionLink> bereitzustellen. In unserem <translationGuideLink>Leitfaden zu Übersetzungen</translationGuideLink> findest du mehr Informationen.\"}","language":"de"}},{"node":{"ns":"download","data":"{\"Download Temurin for\":\"Temurin™ für {{userOSName}} {{arch}} herunterladen\",\"Latest LTS Release\":\"Aktuelles LTS-Release\",\"Latest Releases\":\"Aktuelles Releases\",\"Nightly Builds\":\"Nächtliche Builds\",\"Other platforms and versions\":\"Weitere Plattformen und Versionen\",\"Release Archive\":\"Archivierte Releases\",\"Vendor\":\"Anbieter\",\"Operating System\":\"Betriebssystem\",\"Architecture\":\"Systemarchitektur\",\"Download\":\"Herunterladen\",\"Checksum\":\"Prüfsumme\",\"Package Type\":\"Pakettyp\",\"Source Code Archive\":\"Quellcode-Archiv\"}","language":"de"}},{"node":{"ns":"index","data":"{\"Prebuilt OpenJDK\":\"Kostenlose OpenJDK™\",\"Binaries for Free!\":\"Binaries zum Download!\",\"Intro\":\"Java™ ist die weltweit führende Programmiersprache und Softwareplattform. Die Adoptium Working Group fördert und unterstützt qualitativ hochwertige, TCK-zertifizierte Laufzeitumgebungen und zugehörige Technologien für den Einsatz im gesamten Java-Ökosystem. Eclipse Temurin ist der Name der OpenJDK-Distribution von Adoptium.\"}","language":"de"}},{"node":{"ns":"language-selector","data":"{\"Change Language\":\"Sprache ändern\"}","language":"de"}},{"node":{"ns":"marketplace","data":"{\"marketplace.marketplaceDescription\":\"Java™ ist die weltweit führende Programmiersprache und Softwareplattform.<br>Der Adoptium Marketplace bietet hochwertige und TCK-zertifizierte sowie AQAvit-verifizierte Java-Laufzeitumgebungen zum Download an.\",\"marketplace.aqavitDescription\":\"Informationen zur offenen Testsuite AQAvit (<strong>A</strong>doptium <strong>Q</strong>uality <strong>A</strong>ssurance) können <aqavitLink>hier</aqavitLink> gefunden werden. Zusätzlich ist <blogPostLink>in diesem Blogpost</blogPostLink> eine Beschreibung über die Nutzung der Tests und deren Integration in die Infrastruktur zum Bau und Test von Java-Laufzeitumgebungen zu finden.\"}","language":"de"}},{"node":{"ns":"temurin","data":"{\"release.intro\":\"Eclipse Temurin ist die quelloffene Java-SE-Implementierung basierend auf OpenJDK. Temurin ist für <supportedPlatformsLink>eine Vielzahl von Plattformen</supportedPlatformsLink> und Java-SE-Versionen verfügbar. Die aktuellsten Versionen zur Verwendung in Produktivumgebungen sind unten aufgelistet und werden <supportLink>regelmäßig aktualisiert und unterstützt</supportLink> durch die Adoptium-Community. Hilfe zur Migration, zu Containern und zur Installation durch Paketmanager ist in unserer <docsLink>Dokumentation</docsLink> zu finden.\",\"Use the drop-down boxes below to filter the list of current releases.\":\"Die Auswahllisten unten können benutzt werden um aktuelle Releases zu filtern.\",\"Previous releases are available in the Temurin archive.\":\"Vorherige Releases sind im Temurin-Archiv verfügbar.\",\"Release Notes\":\"Versionshinweise\"}","language":"de"}},{"node":{"ns":"working-group","data":"{\"The Adoptium Working Group\":\"Über die Adoptium Working Group\",\"wg-description\":\"Die Adoptium Working Group fördert und unterstützt qualitativ hochwertige, TCK-zertifizierte Laufzeitumgebungen und zugehörige Technologien für den Einsatz im gesamten Java™-Ökosystem. Unsere Vision ist es sowohl für die Eclipse Foundation als auch die gesamte Java-Community Laufzeitumgebungen für Java-Anwendungen bereitzustellen. Wir setzen hierbei auf bestehende Standards und unterstützen eine breite Palette der Hardware- und Cloud-Plattformen am Markt.\",\"Join the Working Group\":\"Mitglied der Working Group werden\",\"View our Members\":\"Unsere Mitglieder\"}","language":"de"}}]}},"pageContext":{"title":"Adoptium&#174; Marketplace Publisher Product Listing Repository","locale":"en","language":"de","i18n":{"language":"de","languages":["en","en-GB","de","es","fr","zh-CN"],"defaultLanguage":"en","generateDefaultLanguagePage":false,"routed":true,"originalPath":"/docs/marketplace-listing/","path":"de/docs/marketplace-listing"}}},"staticQueryHashes":["3235583029","764694655"],"slicesMap":{"banner":"banner","footer":"footer","navbar":"navbar"}}