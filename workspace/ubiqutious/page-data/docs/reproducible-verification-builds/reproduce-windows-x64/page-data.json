{"componentChunkName":"component---src-templates-asciidoc-template-tsx","path":"/docs/reproducible-verification-builds/reproduce-windows-x64/","result":{"data":{"asciidoc":{"html":"<div id=\"preamble\">\n<div class=\"sectionbody\">\n<div class=\"paragraph\">\n<p>The following instructions detail the process of rebuilding identically from \"source\" in a secure build environment, a reproducible build for a given Eclipse Temurin release on the Windows x64 platform. The process is performed in a secure manner, using only the upstream sources and official Microsoft Visual Studio build tooling, so as to provide a mechanism to securely verify the given Eclipse Temurin release binary. This verification then helps determine the security of the supply chains used to build the Eclipse Temurin official release binaries.</p>\n</div>\n<div class=\"paragraph\">\n<p>The procedure consists of the following steps:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Build environment setup</p>\n</li>\n<li>\n<p>Install the required version of Microsoft Visual Studio Builds Tools edition for the C/C++ compiler</p>\n</li>\n<li>\n<p>Determine the OpenJDK make configuration arguments matching the Eclipse Temurin options</p>\n</li>\n<li>\n<p>Build the local Eclipse Temurin JDK</p>\n</li>\n<li>\n<p>Compare the secure local Eclipse Temurin re-build to the official Eclipse Temurin binary, using the Adoptium temurin-build comparison script that adjusts for comparing against \"signed\" native executables</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\">\n<h2 id=\"_windows_x64_reproducible_verification_build_procedure\">Windows x64 reproducible verification build procedure</h2>\n<div class=\"sectionbody\">\n<div class=\"olist arabic\">\n<ol class=\"arabic\">\n<li>\n<p>Build Environment</p>\n<div class=\"paragraph\">\n<p>To re-build identically Eclipse Temurin on Windows x64, a suitable Windows build environment with the exact same required Microsoft Visual Studio Build Tools is required, and it is necessary to remove any previous existing potential conflicting versions.</p>\n</div>\n<div class=\"paragraph\">\n<p>Ensure any previous Microsoft Visual Studio components are uninstalled using Windows Settings&#8594;\"Add or remove programs\", including:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Visual Studio &lt;Edition&gt; 20xx &#8230;&#8203;</p>\n</li>\n<li>\n<p>Microsoft C++ &lt;year..year&gt; Redistributables</p>\n</li>\n<li>\n<p>Microsoft Visual Studio Installer</p>\n</li>\n<li>\n<p>Windows Software Development Kit</p>\n</li>\n<li>\n<p>Windows SDK Addon</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Ensure Windows system Time zone is UTC to ensure an identical build</p>\n<div class=\"paragraph\">\n<p>Set the Windows \"Time zone\" to UTC, by checking the Windows Settings&#8594;\"Time &amp; Language\" &#8594; \"Date &amp; time\" &#8594; \"Time zone\" value.</p>\n</div>\n</li>\n<li>\n<p>Re-boot the Windows machine after uninstalling any programs or changing the Time Zone.</p>\n</li>\n<li>\n<p>Install the required version of Microsoft Visual Studio</p>\n<div class=\"paragraph\">\n<p>Install Microsoft Visual Studio VS2022 “Build Tools” edition version 17.7.3 which contains version 19.37.32822 of the C/C++ compiler:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>Download and execute: <a href=\"https://download.visualstudio.microsoft.com/download/pr/1d66edfe-3c83-476b-bf05-e8901c62ba7f/bac71effb5a23d7cd1a81e5f628a0c8dcb7e8a07e0aa7077c853ed84a862dceb/vs_BuildTools.exe\" class=\"bare\">https://download.visualstudio.microsoft.com/download/pr/1d66edfe-3c83-476b-bf05-e8901c62ba7f/bac71effb5a23d7cd1a81e5f628a0c8dcb7e8a07e0aa7077c853ed84a862dceb/vs_BuildTools.exe</a></p>\n</li>\n<li>\n<p>Select “Workloads” - “Desktop development with C++”</p>\n</li>\n<li>\n<p>“Install”</p>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Install required build dependencies:</p>\n<div class=\"paragraph\">\n<p>Install Cygwin with required dependencies to build OpenJDK:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>curl -L -O https://cygwin.com/setup-x86_64.exe\ncurl -l -O https://cygwin.com/setup-x86_64.exe.sig\n# Verify download: Import \"Cygwin &lt;cygwin@cygwin.com&gt;\" GPG key\ngpg --keyserver keyserver.ubuntu.com --recv-keys 1A698DE9E2E56300\ngpg --verify setup-x86_64.exe.sig setup-x86_64.exe\n# Check for “Good signature”</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Assuming setup-x86_64.exe is secure and GPG verify reports \"Good signature\", then install Cygwin:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>setup-x86_64.exe --packages autoconf,automake,bsdtar,cmake,cpio,curl,gcc-core,git,gnupg,grep,jq,libtool,make,mingw64-x86_64-gcc-core,perl,rsync,unzip,wget,zip --download --local-install --delete-orphans --site https://mirrors.kernel.org/sourceware/cygwin/ --local-package-dir C:\\cygwin_packages --root C:\\cygwin64</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Start a Cygwin terminal windows to perform the build from within</p>\n<div class=\"paragraph\">\n<p>Double click the \"Cygwin Terminal\" desktop icon to open a new Cygwin terminal running the bash shell</p>\n</div>\n</li>\n<li>\n<p>Determine required build configuration for reproducing the target Eclipse Temurin release</p>\n<div class=\"paragraph\">\n<p>For the required Eclipse Temurin release version, download the SBOM and SBOM-metadata from the official Adoptium release binaries repository, eg.for jdk-21.0.4+7:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>curl -L -O https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4%2B7/OpenJDK21U-sbom_x64_windows_hotspot_21.0.4_7.json\ncurl -L -O https://github.com/adoptium/temurin21-binaries/releases/download/jdk-21.0.4%2B7/OpenJDK21U-sbom_x64_windows_hotspot_21.0.4_7-metadata.json</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Determine upstream OpenJDK source tag to be built</p>\n<div class=\"paragraph\">\n<p>Open the SBOM json file and determine the \"SCM Ref\" the release was built from</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>        {\n          \"name\" : \"SCM Ref\",\n          \"value\" : \"jdk-21.0.4+7_adopt\"\n        },</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The upstream OpenJDK tag is this value without the \"_adopt\", eg. \"jdk-21.0.4+7\"</p>\n</div>\n</li>\n<li>\n<p>Download a suitable Boot JDK</p>\n<div class=\"paragraph\">\n<p>To build Temurin you need a suitable Boot JDK, open the SBOM json file and determine the version used to build the release</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>      {\n        \"name\" : \"BOOTJDK\",\n        \"version\" : \"20.0.2+9\"\n      },</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Securely download and verify the required version from the <a href=\"https://github.com/adoptium/temurin&lt;NN&gt;-binaries/releases\" class=\"bare\">https://github.com/adoptium/temurin&lt;NN&gt;-binaries/releases</a></p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code># Download JDK zip\ncurl -L -O https://github.com/adoptium/temurin20-binaries/releases/download/jdk-20.0.2%2B9/OpenJDK20U-jdk_x64_windows_hotspot_20.0.2_9.zip\n# Download GPG sig file to verify\ncurl -L -O https://github.com/adoptium/temurin20-binaries/releases/download/jdk-20.0.2%2B9/OpenJDK20U-jdk_x64_windows_hotspot_20.0.2_9.zip.sig\n# Verify JDK using Adoptium GPG key\ngpg --keyserver keyserver.ubuntu.com --recv-keys 3B04D753C9050D9A5D343F39843C48A565F8F04B\necho -e \"5\\ny\\n\" |  gpg --batch --command-fd 0 --expert --edit-key 3B04D753C9050D9A5D343F39843C48A565F8F04B trust;\ngpg --verify OpenJDK20U-jdk_x64_windows_hotspot_20.0.2_9.zip.sig OpenJDK20U-jdk_x64_windows_hotspot_20.0.2_9.zip</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Ensure \"Good signature from Adoptium GPG Key (DEB/RPM Signing Key)\"</p>\n</div>\n<div class=\"paragraph\">\n<p>Unzip into a suitable folder</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>unzip OpenJDK20U-jdk_x64_windows_hotspot_20.0.2_9.zip</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>Add to the PATH environment, so that java and javac tooling are available to scripts used later in these instructions.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>export PATH=&lt;bootjdk&gt;/bin:$PATH</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Clone required upstream OpenJDK source</p>\n<div class=\"paragraph\">\n<p>Replace jdk21u with the upstream release being built</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>git clone https://github.com/openjdk/jdk21u.git\n# Checkout required tag to build\n(cd jdk21u &amp;&amp; git checkout &lt;OpenJDK tag to build&gt;)</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Create a specific local build directory</p>\n<div class=\"paragraph\">\n<p>Note: This is required ONLY for jdk-21.0.4+7 due to a reproducible build issue (<a href=\"https://github.com/adoptium/temurin-build/issues/3790\" class=\"bare\">https://github.com/adoptium/temurin-build/issues/3790</a>). For later versions this is unnecessary.</p>\n</div>\n<div class=\"paragraph\">\n<p>Create the following exact local build directory for the build, the path must match this for the build to be identically reproducible.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>mkdir -p C:/workspace/openjdk-build/workspace/build/openjdkbuild</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Configure build</p>\n<div class=\"paragraph\">\n<p>Determine and edit the \"configure args\" to match your local environment</p>\n</div>\n<div class=\"olist loweralpha\">\n<ol class=\"loweralpha\" type=\"a\">\n<li>\n<p>Determine the configure arguments for this build</p>\n<div class=\"paragraph\">\n<p>Use the following grep to find the required configure arguments from the SBOM-metadata.json</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>grep \"using configure arguments\" &lt;SBOM-metadata.json&gt; | sed -n -e \"s/^.*using configure arguments '\\(.*\\)'\\..*/\\1/p\"</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Remove -–with-cacerts-src=&lt;path&gt;, as Temurin is built with Mozilla CA certs, whereas the local build will use the standard OpenJDK CA certs.</p>\n</li>\n<li>\n<p>Update --with-ucrt-dll-dir=&lt;path&gt;, to ensure it matches location on your local machine, specify:</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>--with-ucrt-dll-dir='C:/Program Files (x86)/Windows Kits/10/Redist/10.0.22621.0/ucrt/DLLs/x64'</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Replace -–with-boot-jdk=&lt;path&gt;, with the path to your local unzipped boot jdk from above.</p>\n<div class=\"paragraph\">\n<p>Configure from the \"C:/workspace/openjdk-build/workspace/build/openjdkbuild\" directory</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>cd C:/workspace/openjdk-build/workspace/build/openjdkbuild\nbash ~/jdk21u/configure &lt;edited configure args&gt;</code></pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</li>\n<li>\n<p>Build Temurin</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>make images</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>The built image will be available under directory: /cygdrive/c/workspace/openjdk-build/workspace/build/openjdkbuild/images/jdk</p>\n</div>\n</li>\n<li>\n<p>Download offical Eclipse Temurin release to be verified</p>\n<div class=\"paragraph\">\n<p>Download and unpack the Temurin JDK to be verified:</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>curl -L -o temurin-windows-x64-jdk-21.0.4+7.zip https://api.adoptium.net/v3/binary/version/jdk-21.0.4+7/windows/x64/jdk/hotspot/normal/adoptium\nunzip temurin-windows-x64-jdk-21.0.4+7.zip</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Download and setup the Adoptium temurin-build reproducible build comparison tooling for Windows</p>\n<div class=\"paragraph\">\n<p>Due to the Temurin “signing signatures” of the Windows .exe/dll’s, processing is necessary to remove the unique digital signatures using the Windows signtool.exe tool. To aid this process and perform the comparison the Adoptium temurin-build tooling provides a reproducible compare script.</p>\n</div>\n<div class=\"paragraph\">\n<p>Perform the following steps to clone and setup your environment to run the temurin-build reproducible compare script:</p>\n</div>\n<div class=\"ulist\">\n<ul>\n<li>\n<p>git clone <a href=\"https://github.com/adoptium/temurin-build.git\" class=\"bare\">https://github.com/adoptium/temurin-build.git</a></p>\n</li>\n<li>\n<p>cd temurin-build/tooling</p>\n</li>\n<li>\n<p>Compile BinRepl.java:</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>javac src/java/temurin/tools/BinRepl.java</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Find “signtool.exe” and add to PATH, eg:</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>export PATH=/cygdrive/c/progra~2/wi3cf2~1/10/bin/10.0.22621.0/x64:$PATH</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>Find “dumpbin.exe” and add to PATH, eg:</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>export PATH=/cygdrive/c/progra~2/micros~2/2022/BuildTools/VC/Tools/MSVC/14.37.32822/bin/Hostx64/x64:$PATH</code></pre>\n</div>\n</div>\n</li>\n<li>\n<p>cd reproducible</p>\n</li>\n<li>\n<p>Set CLASSPATH to find the compiled BinRepl.class, eg.</p>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>export CLASSPATH=../src/java</code></pre>\n</div>\n</div>\n</li>\n</ul>\n</div>\n</li>\n<li>\n<p>Verify the local secure re-build is identical to the official Eclipse Temurin binary</p>\n<div class=\"paragraph\">\n<p>Compare the local re-build to the Eclipse Temurin official JDK. This script involves unpacking the jmod&#8217;s and removing all the unique Temurin signing \"Signatures\", this process takes a while to complete (roughly 30 minutes):</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>bash ./repro_compare.sh temurin ~/jdk-21.0.4+7 openjdk /cygdrive/c/workspace/openjdk-build/workspace/build/openjdkbuild/images/jdk CYGWIN</code></pre>\n</div>\n</div>\n<div class=\"paragraph\">\n<p>For a successful verification the script should report a reproducible result of 100%.</p>\n</div>\n<div class=\"listingblock\">\n<div class=\"content\">\n<pre class=\"highlight\"><code>Comparing /home/user/jdk-21.0.4+7 with /cygdrive/c/workspace/openjdk-build/workspace/build/openjdkbuild/images/jdk ... output to file: reprotest.diff\nNumber of differences: 0\nReproduciblePercent = 100 %</code></pre>\n</div>\n</div>\n</li>\n</ol>\n</div>\n</div>\n</div>","document":{"title":"Temurin Reproducible Verification Build on Windows x64","main":"Temurin Reproducible Verification Build on Windows x64"},"fields":{"slug":"/docs/reproducible-verification-builds/reproduce-windows-x64/","relativePath":"docs/reproducible-verification-builds/reproduce-windows-x64/index.adoc"},"pageAttributes":{"authors":"andrew-m-leonard","based_on":null}},"locales":{"edges":[]}},"pageContext":{"title":"Temurin Reproducible Verification Build on Windows x64","locale":"en","language":"en","i18n":{"language":"en","languages":["en","en-GB","de","es","fr","zh-CN"],"defaultLanguage":"en","generateDefaultLanguagePage":false,"routed":false,"originalPath":"/docs/reproducible-verification-builds/reproduce-windows-x64/","path":"/docs/reproducible-verification-builds/reproduce-windows-x64/"}}},"staticQueryHashes":["3235583029","764694655"],"slicesMap":{"banner":"banner","footer":"footer","navbar":"navbar"}}