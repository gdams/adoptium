{"version":3,"file":"component---src-pages-members-tsx-539804fc2c2eedc9f18c.js","mappings":"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","sources":["webpack://adoptium-website/./src/components/Layout/index.tsx","webpack://adoptium-website/./src/components/MembersGrid/index.tsx","webpack://adoptium-website/./src/components/Seo/index.tsx","webpack://adoptium-website/./src/pages/members.tsx","webpack://adoptium-website/./src/util/shuffle.tsx"],"sourcesContent":["import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport { Slice } from 'gatsby'\n\nimport './layout.scss'\n\nconst Layout = ({ children }) => {\n  return (\n    <div\n      className='container-fluid p-0'\n      style={{\n        backgroundColor: 'var(--bg)',\n        color: 'var(--text-normal)',\n        transition: 'color 0.2s ease-out, background 0.2s ease-out'\n      }}\n    >\n      <Slice alias='navbar' />\n      <Slice alias='banner' />\n      <main>\n        {children}\n      </main>\n      <Slice alias='footer' />\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n","import * as React from 'react'\n\nconst MembersGrid = ({members, columns}) => {\n\n    return (\n        <div className='container'>\n            <div className='row justify-content-center align-items-center'>\n                {members.map(\n                    (member, i): string | JSX.Element =>\n                        member && (\n                            // dynamically set the width of the column based on the number of columns\n                            <div className={columns ? `col-lg-${12 / columns} col-md-12 mt-5` : 'col-lg-4 col-md-12 mt-5'} key={member.name}>\n                                <a target='_blank' rel='noopener noreferrer' href={member.url}>\n                                    <img src={`/images/${member.logo}`} style={ member.logoPadding ? { paddingRight: member.logoPadding, paddingLeft: member.logoPadding, width: '10rem'} : {width: '10rem'}} alt={`${member.name} logo`}/>\n                                </a>\n                            </div>\n                    )\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MembersGrid;","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\n\ninterface Props {\n  title: string\n  description?: string\n  twitterCard?: string\n}\n\nconst Seo = ({ title, description, twitterCard }: Props): JSX.Element => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  if (!description) {\n    description = site.siteMetadata.description;\n  }\n\n  if (!twitterCard) {\n    twitterCard = \"images/social-image.png\";\n  }\n\n  const siteTitle = title + \" | Adoptium\";\n\n  return (\n    <>\n      <title>{siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"og:title\" content={siteTitle} />\n      <meta name=\"og:description\" content={description} />\n      <meta name=\"og:type\" content=\"website\" />\n      <meta name=\"og:image\" content={site.siteMetadata.siteUrl + '/' + twitterCard} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@adoptium\" />\n      <meta name=\"twitter:image\" content={site.siteMetadata.siteUrl + '/' + twitterCard} />\n      <meta name=\"twitter:creator\" content=\"@adoptium\" />\n      <meta name=\"twitter:title\" content={siteTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      <link rel='stylesheet' type='text/css' href='//www.eclipse.org/eclipse.org-common/themes/solstice/public/stylesheets/vendor/cookieconsent/cookieconsent.min.css' />\n      <script src='//www.eclipse.org/eclipse.org-common/themes/solstice/public/javascript/vendor/cookieconsent/default.min.js' />\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  title: 'Adoptium'\n}\n\nSeo.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\nexport default Seo\n","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport Seo from '../components/Seo'\nimport MembersGrid from '../components/MembersGrid'\nimport { shuffle } from '../util/shuffle'\n\nimport Members from '../json/members.json'\n\nlet strategicMembers: MembersProps[] = []\nlet enterpriseMembers: MembersProps[] = []\nlet participantMembers: MembersProps[] = []\n\nfor (const member of Members) {\n  switch (member.tier) {\n    case 'strategic':\n      strategicMembers.push(member)\n      break\n    case 'enterprise':\n      enterpriseMembers.push(member)\n      break\n    case 'participant':\n      participantMembers.push(member)\n      break\n    default:\n      break\n  }\n}\n\n// Randomly mix up members logos\nstrategicMembers=(shuffle(strategicMembers))\nenterpriseMembers=(shuffle(enterpriseMembers))\nparticipantMembers=(shuffle(participantMembers))\n\nconst MembersPage = () => (\n  <Layout>\n    <section className='py-5 text-center container'>\n      <div className='row py-lg-5'>\n        <div className='col-lg-8 col-md-8 mx-auto'>\n          <h1 className='fw-light'>Adoptium&reg; Working Group Members</h1>\n          <h2 className='fw-light pt-5'>Strategic Members</h2>\n          <p className='lead text-muted'>Strategic Members are organizations that view Adoptium working group managed technology as critical to their organizationâ€™s future, and are investing significant resources to sustain and define the core activities that are the responsibility of the working group.</p>\n          <MembersGrid\n            members={strategicMembers}\n          />\n          <h2 className='fw-light pt-5'>Enterprise Members</h2>\n          <p className='lead text-muted'>Enterprise Members are typically organizations that view the Adoptium working group managed technology as a critical part of their organization&lsquo;s business operations. These organizations want to influence the direction and support the development of a runtime technology ecosystem through Eclipse Adoptium.</p>\n          <MembersGrid\n            members={enterpriseMembers}\n          />\n          <h2 className='fw-light pt-5'>Participant Members</h2>\n          <p className='lead text-muted'>Participant Members are typically organizations that deliver products or services based on Adoptium technology. These organizations want to participate in the evolution of the Eclipse Adoptium ecosystem to ensure it continues to meet their needs.</p>\n          <MembersGrid\n            members={participantMembers}\n          />\n          <a style={{margin: 20}} href='https://membership.eclipse.org/application#sign-in' className='btn btn-lg btn-primary mt-5'>Ready to Join?</a>\n          <a style={{margin: 20}} href='https://www.eclipse.org/org/foundation/contact.php' className='btn btn-lg btn-primary mt-5'>Contact us</a>\n          <Link style={{margin: 20}} to='/join' className='btn btn-lg btn-primary mt-5'>Learn More</Link>\n        </div>\n      </div>\n    </section>\n  </Layout>\n)\n\nexport default MembersPage\n\nexport const Head = () => (\n  <Seo title='Adoptium Working Group Members' />\n)\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\nexport interface MembersProps {\n  name: string;\n  logo: string;\n  url: string;\n  tier: string;\n}\n","// Randomly shuffle array\nexport function shuffle (array: Array<any>): Array<any> {\n  let currentIndex = array.length; let randomIndex\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]]\n  }\n\n  return array\n}\n"],"names":["Layout","children","React","className","style","backgroundColor","color","transition","Slice","alias","propTypes","PropTypes","isRequired","MembersGrid","members","columns","map","member","i","key","name","target","rel","href","url","src","logo","logoPadding","paddingRight","paddingLeft","width","alt","Seo","title","description","twitterCard","site","useStaticQuery","siteMetadata","siteTitle","content","siteUrl","type","defaultProps","strategicMembers","enterpriseMembers","participantMembers","Members","tier","push","shuffle","MembersPage","margin","Link","to","Head","array","randomIndex","currentIndex","length","Math","floor","random"],"sourceRoot":""}