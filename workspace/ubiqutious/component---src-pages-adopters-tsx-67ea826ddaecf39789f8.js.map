{"version":3,"file":"component---src-pages-adopters-tsx-67ea826ddaecf39789f8.js","mappings":"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","sources":["webpack://adoptium-website/./src/components/Layout/index.tsx","webpack://adoptium-website/./src/components/MembersGrid/index.tsx","webpack://adoptium-website/./src/components/Seo/index.tsx","webpack://adoptium-website/./src/pages/adopters.tsx","webpack://adoptium-website/./src/util/shuffle.tsx"],"sourcesContent":["import * as React from 'react'\nimport PropTypes from 'prop-types'\nimport { Slice } from 'gatsby'\n\nimport './layout.scss'\n\nconst Layout = ({ children }) => {\n  return (\n    <div\n      className='container-fluid p-0'\n      style={{\n        backgroundColor: 'var(--bg)',\n        color: 'var(--text-normal)',\n        transition: 'color 0.2s ease-out, background 0.2s ease-out'\n      }}\n    >\n      <Slice alias='navbar' />\n      <Slice alias='banner' />\n      <main>\n        {children}\n      </main>\n      <Slice alias='footer' />\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n","import * as React from 'react'\n\nconst MembersGrid = ({members, columns}) => {\n\n    return (\n        <div className='container'>\n            <div className='row justify-content-center align-items-center'>\n                {members.map(\n                    (member, i): string | JSX.Element =>\n                        member && (\n                            // dynamically set the width of the column based on the number of columns\n                            <div className={columns ? `col-lg-${12 / columns} col-md-12 mt-5` : 'col-lg-4 col-md-12 mt-5'} key={member.name}>\n                                <a target='_blank' rel='noopener noreferrer' href={member.url}>\n                                    <img src={`/images/${member.logo}`} style={ member.logoPadding ? { paddingRight: member.logoPadding, paddingLeft: member.logoPadding, width: '10rem'} : {width: '10rem'}} alt={`${member.name} logo`}/>\n                                </a>\n                            </div>\n                    )\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default MembersGrid;","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { useStaticQuery, graphql } from 'gatsby'\n\ninterface Props {\n  title: string\n  description?: string\n  twitterCard?: string\n}\n\nconst Seo = ({ title, description, twitterCard }: Props): JSX.Element => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  if (!description) {\n    description = site.siteMetadata.description;\n  }\n\n  if (!twitterCard) {\n    twitterCard = \"images/social-image.png\";\n  }\n\n  const siteTitle = title + \" | Adoptium\";\n\n  return (\n    <>\n      <title>{siteTitle}</title>\n      <meta name=\"description\" content={description} />\n      <meta name=\"og:title\" content={siteTitle} />\n      <meta name=\"og:description\" content={description} />\n      <meta name=\"og:type\" content=\"website\" />\n      <meta name=\"og:image\" content={site.siteMetadata.siteUrl + '/' + twitterCard} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:site\" content=\"@adoptium\" />\n      <meta name=\"twitter:image\" content={site.siteMetadata.siteUrl + '/' + twitterCard} />\n      <meta name=\"twitter:creator\" content=\"@adoptium\" />\n      <meta name=\"twitter:title\" content={siteTitle} />\n      <meta name=\"twitter:description\" content={description} />\n      <link rel='stylesheet' type='text/css' href='//www.eclipse.org/eclipse.org-common/themes/solstice/public/stylesheets/vendor/cookieconsent/cookieconsent.min.css' />\n      <script src='//www.eclipse.org/eclipse.org-common/themes/solstice/public/javascript/vendor/cookieconsent/default.min.js' />\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  title: 'Adoptium'\n}\n\nSeo.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\nexport default Seo\n","import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport { MembersProps } from './members' \nimport Layout from '../components/Layout'\nimport Seo from '../components/Seo'\nimport MembersGrid from '../components/MembersGrid'\nimport { shuffle } from '../util/shuffle'\n\nimport Adopters from '../json/adopters.json'\n\nlet adopters: MembersProps[] = Adopters\n\n// Randomly mix up adopters logos\nadopters = shuffle(adopters)\n\nconst AdoptersPage = () => (\n  <Layout>\n    <section className=\"py-5 text-center container\" style={{maxWidth: '80em'}}>\n      <div className=\"row py-lg-5\">\n        <div className=\"col-lg-8 col-md-8 mx-auto\">\n          <h1 className=\"fw-light\">Eclipse Temurin&trade; Adopters</h1>\n          <p className=\"lead text-muted\">\n            Companies that use Eclipse Temurin in production.\n          </p>\n          <MembersGrid members={adopters} columns={4} />\n          <a\n            className=\"btn btn-secondary mt-5\"\n            data-bs-toggle=\"collapse\"\n            href=\"#getListed\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            aria-controls=\"getListed\"\n          >\n            How Can I Get My Logo Displayed?\n          </a>\n\n          <div className=\"collapse\" id=\"getListed\">\n            <div className=\"card card-body text-start\">\n              <p>\n                You can easily add your organizationâ€™s logo to our list of adopters\n                by creating an issue or by submitting a pull request.\n              </p>\n              <p className='h3'>Option 1 - Open an Issue</p>\n              <ol>\n                <li>\n                  Go to our{\" \"}\n                  <a\n                    href=\"https://github.com/adoptium/adoptium.net/issues/new?assignees=&labels=adopter&projects=&template=adopters.yml&title=%5BAdopter%5D%3A+\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    Temurin Adopters Form\n                  </a>\n                  .\n                </li>\n                <li>Fill out the relevant fields (it takes less than 5 minutes)</li>\n                <li>\n                  Attach logo files to an issue by dragging and dropping them in the\n                  text editor of the form.\n                </li>\n              </ol>\n              <p className='h3'>Option 2 - Submit a Pull Request</p>\n              <p>When submitting a pull request, please make the following changes to\n                the eclipsefdn-project-adopters'{\" \"}\n                <a\n                  href=\"https://gitlab.eclipse.org/eclipsefdn/it/api/eclipsefdn-project-adopters\"\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                >\n                  codebase\n                </a>\n                :\n              </p>\n              <ol>\n                <li>\n                  Go to{\" \"}\n                  <a\n                    href=\"https://gitlab.eclipse.org/eclipsefdn/it/api/eclipsefdn-project-adopters/\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                  >\n                    https://gitlab.eclipse.org/eclipsefdn/it/api/eclipsefdn-project-adopters\n                  </a>\n                  .\n                </li>\n                <li>Fork the repository.</li>\n                <li>\n                  Update the adopter data file <code>config/adopters.json</code>. If your\n                  organization supports multiple projects, another project can be\n                  added to the projects list within the organizationâ€™s node. The\n                  values in this list should be the ID of the project.\n                </li>\n                <li>\n                  Add a colored and a white organization logo to{\" \"}\n                  <code>static/assets/images/adopters</code>.\n                </li>\n                <li>Submit the pull request.</li>\n              </ol>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </Layout>\n)\n\nexport default AdoptersPage\n\nexport const Head = () => (\n  <Seo title='Eclipse Temurin Adopters' />\n)\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: {language: {eq: $language}}) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`\n","// Randomly shuffle array\nexport function shuffle (array: Array<any>): Array<any> {\n  let currentIndex = array.length; let randomIndex\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex)\n    currentIndex--;\n\n    // And swap it with the current element.\n    [array[currentIndex], array[randomIndex]] = [\n      array[randomIndex], array[currentIndex]]\n  }\n\n  return array\n}\n"],"names":["Layout","children","React","className","style","backgroundColor","color","transition","Slice","alias","propTypes","PropTypes","isRequired","MembersGrid","members","columns","map","member","i","key","name","target","rel","href","url","src","logo","logoPadding","paddingRight","paddingLeft","width","alt","Seo","title","description","twitterCard","site","useStaticQuery","siteMetadata","siteTitle","content","siteUrl","type","defaultProps","adopters","shuffle","AdoptersPage","maxWidth","role","id","Head","array","randomIndex","currentIndex","length","Math","floor","random"],"sourceRoot":""}