{"version":3,"file":"component---src-templates-blog-post-tsx-content-file-path-content-blog-using-jlink-in-dockerfiles-index-md-76495289879ab81b067d.js","mappings":"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","sources":["webpack://adoptium-website/./content/blog/using-jlink-in-dockerfiles/index.md","webpack://adoptium-website/./src/templates/blogPost.tsx"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    span: \"span\",\n    h2: \"h2\",\n    em: \"em\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"The Eclipse Temurin project is excited to announce that the official docker images for Temurin binaries are now available on \", React.createElement(_components.a, {\n    href: \"https://hub.docker.com/_/eclipse-temurin\"\n  }, \"Docker Hub\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"If you were previously using an AdoptOpenJDK JDK image with Ubuntu Focal or CentOS 7 as the base and wish to continue using the Temurin JDK image on the same base, the migration path is very simple. Simply change \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">adoptopenjdk</code>\"\n    }\n  }), \" to \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">eclipse-temurin</code>\"\n    }\n  }), \" and set the distro after the version number in the tag. E.g for Ubuntu Focal and an application called \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">japp.jar</code>\"\n    }\n  }), \" you might write:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"dockerfile\\\"><pre class=\\\"language-dockerfile\\\"><code class=\\\"language-dockerfile\\\"><span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">FROM</span> eclipse-temurin:11-focal</span>\\n<span class=\\\"token comment\\\"># Continue with your application deployment</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">RUN</span> mkdir /opt/app</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">COPY</span> japp.jar /opt/app</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">CMD</span> [<span class=\\\"token string\\\">\\\"java\\\"</span>, <span class=\\\"token string\\\">\\\"-jar\\\"</span>, <span class=\\\"token string\\\">\\\"/opt/app/japp.jar\\\"</span>]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"If you were using a base image that was not Ubuntu Focal or CentOS 7 you can use dockerâ€™s COPY command to bring the JDK into your image. E.g to use a Temurin binary inside a Debian base image:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"dockerfile\\\"><pre class=\\\"language-dockerfile\\\"><code class=\\\"language-dockerfile\\\"><span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">FROM</span> debian</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">ENV</span> JAVA_HOME=/opt/java/openjdk</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">COPY</span> <span class=\\\"token options\\\"><span class=\\\"token property\\\">--from</span><span class=\\\"token punctuation\\\">=</span><span class=\\\"token string\\\">eclipse-temurin:11</span></span> <span class=\\\"token variable\\\">$JAVA_HOME</span> <span class=\\\"token variable\\\">$JAVA_HOME</span></span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">ENV</span> PATH=<span class=\\\"token string\\\">\\\"${JAVA_HOME}/bin:${PATH}\\\"</span></span>\\n<span class=\\\"token comment\\\"># Continue with your application deployment</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">RUN</span> mkdir /opt/app</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">COPY</span> japp.jar /opt/app</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">CMD</span> [<span class=\\\"token string\\\">\\\"java\\\"</span>, <span class=\\\"token string\\\">\\\"-jar\\\"</span>, <span class=\\\"token string\\\">\\\"/opt/app/japp.jar\\\"</span>]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.h2, null, \"What about JRE base images?\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.em, null, React.createElement(_components.strong, null, \"NOTE: This paragraph has been superceded since we are now shipping JREs with 17+ again including docker images - see \", React.createElement(_components.a, {\n    href: \"https://adoptium.net/blog/2021/12/eclipse-temurin-jres-are-back/\"\n  }, \"https://adoptium.net/blog/2021/12/eclipse-temurin-jres-are-back/\"), \" for the details, however we still recommend using jlink to produce your own cut down java runtimes where possible\"))), \"\\n\", React.createElement(_components.p, null, \"The Eclipse Temurin project produces JRE images for version 8. For JDK 11+ it is possible to use \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">jlink</code>\"\n    }\n  }), \" and produce a custom runtime that works directly with your application:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"dockerfile\\\"><pre class=\\\"language-dockerfile\\\"><code class=\\\"language-dockerfile\\\"><span class=\\\"token comment\\\"># Example of custom Java runtime using jlink in a multi-stage container build</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">FROM</span> eclipse-temurin:11 <span class=\\\"token keyword\\\">as</span> jre-build</span>\\n\\n<span class=\\\"token comment\\\"># Create a custom Java runtime</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">RUN</span> <span class=\\\"token variable\\\">$JAVA_HOME</span>/bin/jlink <span class=\\\"token operator\\\">\\\\</span>\\n         --add-modules java.base <span class=\\\"token operator\\\">\\\\</span>\\n         --strip-debug <span class=\\\"token operator\\\">\\\\</span>\\n         --no-man-pages <span class=\\\"token operator\\\">\\\\</span>\\n         --no-header-files <span class=\\\"token operator\\\">\\\\</span>\\n         --compress=2 <span class=\\\"token operator\\\">\\\\</span>\\n         --output /javaruntime</span>\\n\\n<span class=\\\"token comment\\\"># Define your base image</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">FROM</span> debian:buster-slim</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">ENV</span> JAVA_HOME=/opt/java/openjdk</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">ENV</span> PATH <span class=\\\"token string\\\">\\\"${JAVA_HOME}/bin:${PATH}\\\"</span></span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">COPY</span> <span class=\\\"token options\\\"><span class=\\\"token property\\\">--from</span><span class=\\\"token punctuation\\\">=</span><span class=\\\"token string\\\">jre-build</span></span> /javaruntime <span class=\\\"token variable\\\">$JAVA_HOME</span></span>\\n\\n<span class=\\\"token comment\\\"># Continue with your application deployment</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">RUN</span> mkdir /opt/app</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">COPY</span> japp.jar /opt/app</span>\\n<span class=\\\"token instruction\\\"><span class=\\\"token keyword\\\">CMD</span> [<span class=\\\"token string\\\">\\\"java\\\"</span>, <span class=\\\"token string\\\">\\\"-jar\\\"</span>, <span class=\\\"token string\\\">\\\"/opt/app/japp.jar\\\"</span>]</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"The \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">--add-modules</code>\"\n    }\n  }), \" command accepts a comma seperated list of modules. To determine which modules you need you can run the following command with your existing JRE:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"bash\\\"><pre class=\\\"language-bash\\\"><code class=\\\"language-bash\\\">jdk-11.0.8+10-jre/bin/java --list-modules</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"We arenâ€™t completely ruling out creating JREâ€™s for JDK11+ at this stage, so if a multi-stage dockerfile doesnâ€™t work for you then \", React.createElement(_components.a, {\n    href: \"https://github.com/adoptium/temurin-build/issues/2683\"\n  }, \"we want to hear your thoughts\"), \".\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/workspaces/ubiquitous/content/blog/using-jlink-in-dockerfiles/index.md\";\nfunction _extends() {\n  return (_extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments));\n}\nimport React from 'react';\nimport {Link} from 'gatsby-plugin-react-i18next';\nimport {MDXProvider} from '@mdx-js/react';\nimport Layout from '../components/Layout';\nimport Seo from '../components/Seo';\nimport BlogAuthor from '../components/BlogAuthor';\nimport AuthorData from '../json/authors.json';\nimport GuestPost from '../components/GuestPost';\nimport Byline from '../components/Byline';\nimport ShareButton from '../components/Share';\nimport Tags from '../components/Tags';\nimport Comments from '../components/Comments';\nimport ImagePopup from '../components/ImagePopup';\nexport const formatDiv = props => {\n  if (props.dangerouslySetInnerHTML.__html.includes('class=\"language-text\"')) {\n    return React.createElement(\"code\", props);\n  } else {\n    return React.createElement(\"div\", props);\n  }\n};\nconst components = {\n  GuestPost,\n  blockquote: props => React.createElement(\"blockquote\", _extends({\n    style: {\n      paddingLeft: '1.5rem',\n      borderLeft: '.3rem solid hsla(0,0%,0%,0.9)'\n    },\n    className: \"blockquote\"\n  }, props)),\n  table: props => React.createElement(\"table\", _extends({\n    className: \"table table-hover\"\n  }, props)),\n  thead: props => React.createElement(\"thead\", _extends({\n    className: \"table-dark\"\n  }, props)),\n  li: props => React.createElement(\"li\", _extends({\n    style: {\n      marginBottom: '1.5em'\n    }\n  }, props)),\n  img: props => React.createElement(ImagePopup, props),\n  div: formatDiv\n};\nconst BlogPostTemplate = ({data, pageContext, location, children}) => {\n  const post = data.mdx;\n  const {previous, next} = pageContext;\n  const author = AuthorData[post.frontmatter.author];\n  const tags = post.frontmatter.tags;\n  return React.createElement(Layout, null, React.createElement(\"section\", {\n    className: \"py-5 container\"\n  }, React.createElement(\"div\", {\n    className: \"row py-lg-5\"\n  }, React.createElement(\"div\", {\n    className: \"col-lg-9 col-md-9 mx-auto\"\n  }, React.createElement(\"article\", null, React.createElement(\"header\", {\n    className: \"pb-5\"\n  }, React.createElement(\"h1\", {\n    className: \"mb-0\",\n    style: {\n      fontWeight: '900'\n    }\n  }, post.frontmatter.title), React.createElement(Byline, {\n    date: post.frontmatter.date,\n    author: author.name,\n    identifier: post.frontmatter.author\n  }), React.createElement(ShareButton, {\n    location: location,\n    siteMetadata: data.site.siteMetadata,\n    post: post.frontmatter\n  })), React.createElement(MDXProvider, {\n    components: components\n  }, children), React.createElement(Tags, {\n    tags: tags\n  }), React.createElement(Comments, null), React.createElement(\"hr\", {\n    className: \"p-3\"\n  }), React.createElement(\"footer\", {\n    className: \"pb-5\"\n  }, React.createElement(BlogAuthor, {\n    identifier: post.frontmatter.author,\n    author: author\n  }))), React.createElement(\"div\", null, React.createElement(\"ul\", {\n    style: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-between',\n      listStyle: 'none',\n      padding: 0\n    }\n  }, React.createElement(\"li\", null, next && React.createElement(Link, {\n    to: next.fields.postPath,\n    rel: \"next\"\n  }, \"\\u2190 \", next.frontmatter.title)), React.createElement(\"li\", null, previous && React.createElement(Link, {\n    to: previous.fields.postPath,\n    rel: \"prev\"\n  }, previous.frontmatter.title, \" \\u2192\"))))))));\n};\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const Head = ({data}) => {\n  const post = data.mdx;\n  let twitterCard = '';\n  if (post.frontmatter && post.frontmatter.featuredImage) {\n    twitterCard = post.frontmatter.featuredImage.childImageSharp.gatsbyImageData.images.fallback.src;\n  }\n  return React.createElement(Seo, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt,\n    twitterCard: twitterCard\n  });\n};\nconst pageQuery = \"3820976996\";\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","span","h2","em","strong","_provideComponents","components","React","href","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","_extends","bind","n","e","arguments","length","t","r","hasOwnProperty","call","apply","formatDiv","includes","GuestPost","blockquote","style","paddingLeft","borderLeft","className","table","thead","li","marginBottom","img","ImagePopup","div","BlogPostTemplate","data","pageContext","location","children","post","mdx","previous","next","author","AuthorData","frontmatter","tags","Layout","fontWeight","title","Byline","date","name","identifier","ShareButton","siteMetadata","site","MDXProvider","Tags","Comments","BlogAuthor","display","flexWrap","justifyContent","listStyle","padding","Link","to","fields","postPath","rel","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","twitterCard","featuredImage","childImageSharp","gatsbyImageData","images","fallback","src","Seo","description","excerpt"],"sourceRoot":""}